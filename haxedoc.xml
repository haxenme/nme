<haxe>
	<class path="Array" params="T" file="/usr/lib/haxe/std/Array.hx" extern="1">
		<iterator public="1" set="method">
			<f a=""><t path="Iterator"><c path="Array.T"/></t></f>
			<haxe_doc>Returns an iterator of the Array values.</haxe_doc>
		</iterator>
		<copy public="1" set="method">
			<f a=""><c path="Array"><c path="Array.T"/></c></f>
			<haxe_doc>Returns a copy of the Array. The values are not
		copied, only the Array structure.</haxe_doc>
		</copy>
		<remove public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Removes the first occurence of [x].
		Returns false if [x] was not present.
		Elements are compared by using standard equality.</haxe_doc>
		</remove>
		<insert public="1" set="method">
			<f a="pos:x">
				<c path="Int"/>
				<c path="Array.T"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Inserts the element [x] at the position [pos].
		All elements after [pos] are moved one index ahead.</haxe_doc>
		</insert>
		<unshift public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Adds the element [x] at the start of the array.</haxe_doc>
		</unshift>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a displayable representation of the Array content.</haxe_doc>
		</toString>
		<splice public="1" set="method">
			<f a="pos:len">
				<c path="Int"/>
				<c path="Int"/>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>Removes [len] elements starting from [pos] an returns them.</haxe_doc>
		</splice>
		<sort public="1" set="method">
			<f a="f">
				<f a=":">
					<c path="Array.T"/>
					<c path="Array.T"/>
					<c path="Int"/>
				</f>
				<e path="Void"/>
			</f>
			<haxe_doc><![CDATA[Sort the Array according to the comparison function [f].
		[f(x,y)] should return [0] if [x == y], [>0] if [x > y]
		and [<0] if [x < y].]]></haxe_doc>
		</sort>
		<slice public="1" set="method">
			<f a="pos:?end">
				<c path="Int"/>
				<c path="Int"/>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>Copies the range of the array starting at [pos] up to,
		but not including, [end]. Both [pos] and [end] can be
		negative to count from the end: -1 is the last item in
		the array.</haxe_doc>
		</slice>
		<shift public="1" set="method">
			<f a=""><t path="Null"><c path="Array.T"/></t></f>
			<haxe_doc>Removes the first element and returns it.</haxe_doc>
		</shift>
		<reverse public="1" set="method">
			<f a=""><e path="Void"/></f>
			<haxe_doc>Reverse the order of elements of the Array.</haxe_doc>
		</reverse>
		<push public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<c path="Int"/>
			</f>
			<haxe_doc>Adds the element [x] at the end of the array.</haxe_doc>
		</push>
		<pop public="1" set="method">
			<f a=""><t path="Null"><c path="Array.T"/></t></f>
			<haxe_doc>Removes the last element of the array and returns it.</haxe_doc>
		</pop>
		<join public="1" set="method">
			<f a="sep">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns a representation of an array with [sep] for separating each element.</haxe_doc>
		</join>
		<concat public="1" set="method">
			<f a="a">
				<c path="Array"><c path="Array.T"/></c>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>Returns a new Array by appending [a] to [this].</haxe_doc>
		</concat>
		<length public="1" set="null">
			<c path="Int"/>
			<haxe_doc>The length of the Array</haxe_doc>
		</length>
		<new public="1" set="method">
			<f a=""><e path="Void"/></f>
			<haxe_doc>Creates a new Array.</haxe_doc>
		</new>
		<haxe_doc>An Array is a storage for values. You can access it using indexes or
	with its API. On the server side, it's often better to use a [List] which
	is less memory and CPU consuming, unless you really need indexed access.</haxe_doc>
	</class>
	<class path="Class" params="T" file="/usr/lib/haxe/std/Class.hx" extern="1"><haxe_doc>An abstract type that represents a Class.
	See [Type] for the haXe Reflection API.</haxe_doc></class>
	<class path="Date" params="" file="/usr/lib/haxe/std/cpp/_std/Date.hx">
		<now public="1" set="method" line="55" static="1">
			<f a=""><c path="Date"/></f>
			<haxe_doc>Returns a Date representing the current local time.</haxe_doc>
		</now>
		<fromTime public="1" set="method" line="59" static="1">
			<f a="t">
				<c path="Float"/>
				<c path="Date"/>
			</f>
			<haxe_doc>Returns a Date from a timestamp [t] which is the number of
		milliseconds elapsed since 1st January 1970.</haxe_doc>
		</fromTime>
		<fromString public="1" set="method" line="65" static="1">
			<f a="s">
				<c path="String"/>
				<c path="Date"/>
			</f>
			<haxe_doc>Returns a Date from a formated string of one of the following formats :
		[YYYY-MM-DD hh:mm:ss] or [YYYY-MM-DD] or [hh:mm:ss]. The first two formats
		are expressed in local time, the third in UTC Epoch.</haxe_doc>
		</fromString>
		<toString public="1" set="method" line="53">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a string representation for the Date, by using the
		standard format [YYYY-MM-DD HH:MM:SS]. See [DateTools.format] for
		other formating rules.</haxe_doc>
		</toString>
		<getDay public="1" set="method" line="51">
			<f a=""><c path="Int"/></f>
			<haxe_doc>Returns the week day of the date (0-6 range).</haxe_doc>
		</getDay>
		<getDate public="1" set="method" line="49">
			<f a=""><c path="Int"/></f>
			<haxe_doc>Returns the day of the date (1-31 range).</haxe_doc>
		</getDate>
		<getMonth public="1" set="method" line="47">
			<f a=""><c path="Int"/></f>
			<haxe_doc>Returns the month of the date (0-11 range).</haxe_doc>
		</getMonth>
		<getFullYear public="1" set="method" line="45">
			<f a=""><c path="Int"/></f>
			<haxe_doc>Returns the full year of the date.</haxe_doc>
		</getFullYear>
		<getSeconds public="1" set="method" line="43">
			<f a=""><c path="Int"/></f>
			<haxe_doc>Returns the seconds of the date (0-59 range).</haxe_doc>
		</getSeconds>
		<getMinutes public="1" set="method" line="41">
			<f a=""><c path="Int"/></f>
			<haxe_doc>Returns the minutes value of the date (0-59 range).</haxe_doc>
		</getMinutes>
		<getHours public="1" set="method" line="39">
			<f a=""><c path="Int"/></f>
			<haxe_doc>Returns the hours value of the date (0-23 range).</haxe_doc>
		</getHours>
		<getTime public="1" set="method" line="35">
			<f a=""><c path="Float"/></f>
			<haxe_doc>Returns the timestamp of the date. It's the number of milliseconds
		elapsed since 1st January 1970. It might only have a per-second precision
		depending on the platforms.</haxe_doc>
		</getTime>
		<mSeconds><c path="Float"/></mSeconds>
		<new public="1" set="method" line="31">
			<f a="year:month:day:hour:min:sec">
				<c path="Int"/>
				<c path="Int"/>
				<c path="Int"/>
				<c path="Int"/>
				<c path="Int"/>
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Creates a new date object.</haxe_doc>
		</new>
		<haxe_doc>The Date class is used for date manipulation. There is some extra functions
	available in the [DateTools] class.</haxe_doc>
		<meta><m n=":core_api"/></meta>
	</class>
	<class path="Enum" params="T" file="/usr/lib/haxe/std/Enum.hx" extern="1"><haxe_doc>An abstract type that represents an Enum.
	See [Type] for the haXe Reflection API.</haxe_doc></class>
	<class path="EnumValue" params="" file="/usr/lib/haxe/std/EnumValue.hx" extern="1"><haxe_doc>An abstract type that represents any enum value.
	See [Type] for the haXe Reflection API.</haxe_doc></class>
	<class path="Hash" params="T" file="/usr/lib/haxe/std/cpp/_std/Hash.hx">
		<toString public="1" set="method" line="76">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns an displayable representation of the hashtable content.</haxe_doc>
		</toString>
		<iterator public="1" set="method" line="61">
			<f a=""><t path="Iterator"><c path="Hash.T"/></t></f>
			<haxe_doc>Returns an iterator of all values in the hashtable.</haxe_doc>
		</iterator>
		<keys public="1" set="method" line="52">
			<f a=""><t path="Iterator"><c path="String"/></t></f>
			<haxe_doc>Returns an iterator of all keys in the hashtable.</haxe_doc>
		</keys>
		<remove public="1" set="method" line="45">
			<f a="key">
				<c path="String"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Removes a hashtable entry. Returns [true] if
		there was such entry.</haxe_doc>
		</remove>
		<exists public="1" set="method" line="41">
			<f a="key">
				<c path="String"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Tells if a value exists for the given key.
		In particular, it's useful to tells if a key has
		a [null] value versus no value.</haxe_doc>
		</exists>
		<get public="1" set="method" line="37">
			<f a="key">
				<c path="String"/>
				<t path="Null"><c path="Hash.T"/></t>
			</f>
			<haxe_doc>Get a value for the given key.</haxe_doc>
		</get>
		<set public="1" set="method" line="33">
			<f a="key:value">
				<c path="String"/>
				<c path="Hash.T"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Set a value for the given key.</haxe_doc>
		</set>
		<__Internal><d/></__Internal>
		<new public="1" set="method" line="29">
			<f a=""><e path="Void"/></f>
			<haxe_doc>Creates a new empty hashtable.</haxe_doc>
		</new>
		<haxe_doc>Hashtable over a set of elements, using [String] as keys.
	Other kind of keys are not possible on all platforms since they
	can't always be implemented efficiently.</haxe_doc>
		<meta><m n=":core_api"/></meta>
	</class>
	<class path="IntHash" params="T" file="/usr/lib/haxe/std/cpp/_std/IntHash.hx">
		<toString public="1" set="method" line="60">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns an displayable representation of the hashtable content.</haxe_doc>
		</toString>
		<iterator public="1" set="method" line="55">
			<f a=""><t path="Iterator"><c path="IntHash.T"/></t></f>
			<haxe_doc>Returns an iterator of all values in the hashtable.</haxe_doc>
		</iterator>
		<keys public="1" set="method" line="50">
			<f a=""><t path="Iterator"><c path="Int"/></t></f>
			<haxe_doc>Returns an iterator of all keys in the hashtable.</haxe_doc>
		</keys>
		<remove public="1" set="method" line="46">
			<f a="key">
				<c path="Int"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Removes a hashtable entry. Returns [true] if
		there was such entry.</haxe_doc>
		</remove>
		<exists public="1" set="method" line="42">
			<f a="key">
				<c path="Int"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Tells if a value exists for the given key.
		In particular, it's useful to tells if a key has
		a [null] value versus no value.</haxe_doc>
		</exists>
		<get public="1" set="method" line="38">
			<f a="key">
				<c path="Int"/>
				<t path="Null"><c path="IntHash.T"/></t>
			</f>
			<haxe_doc>Get a value for the given key.</haxe_doc>
		</get>
		<set public="1" set="method" line="34">
			<f a="key:value">
				<c path="Int"/>
				<c path="IntHash.T"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Set a value for the given key.</haxe_doc>
		</set>
		<h><d/></h>
		<new public="1" set="method" line="30">
			<f a=""><e path="Void"/></f>
			<haxe_doc>Creates a new empty hashtable.</haxe_doc>
		</new>
		<haxe_doc>Hashtable over a set of elements, using [Int] as keys.
	On Flash and Javascript, the underlying structure is an Object.</haxe_doc>
		<meta><m n=":core_api"/></meta>
	</class>
	<class path="IntIter" params="" file="/usr/lib/haxe/std/IntIter.hx">
		<next public="1" set="method" line="53">
			<f a=""><c path="Int"/></f>
			<haxe_doc>Moves to the next item of the iterator.</haxe_doc>
		</next>
		<hasNext public="1" set="method" line="46">
			<f a=""><e path="Bool"/></f>
			<haxe_doc>Returns true if the iterator has other items, false otherwise.</haxe_doc>
		</hasNext>
		<max><c path="Int"/></max>
		<min><c path="Int"/></min>
		<new public="1" set="method" line="38">
			<f a="min:max">
				<c path="Int"/>
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc><![CDATA[Iterate from [min] (inclusive) to [max] (exclusive).
		If [max <= min], the iterator will not act as a countdown.]]></haxe_doc>
		</new>
		<haxe_doc>Integer iterator. Used for interval implementation.</haxe_doc>
	</class>
	<class path="List" params="T" file="/usr/lib/haxe/std/List.hx">
		<map public="1" params="X" set="method" line="246">
			<f a="f">
				<f a="">
					<c path="List.T"/>
					<c path="map.X"/>
				</f>
				<c path="List"><c path="map.X"/></c>
			</f>
			<haxe_doc>Returns a new list where all elements have been converted
		by the function [f].</haxe_doc>
		</map>
		<filter public="1" set="method" line="230">
			<f a="f">
				<f a="">
					<c path="List.T"/>
					<e path="Bool"/>
				</f>
				<c path="List"><c path="List.T"/></c>
			</f>
			<haxe_doc>Returns a list filtered with [f]. The returned list
		will contain all elements [x] for which [f(x) = true].</haxe_doc>
		</filter>
		<join public="1" set="method" line="211">
			<f a="sep">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Join the element of the list by using the separator [sep].</haxe_doc>
		</join>
		<toString public="1" set="method" line="191">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a displayable representation of the String.</haxe_doc>
		</toString>
		<iterator public="1" set="method" line="152">
			<f a=""><t path="Iterator"><c path="List.T"/></t></f>
			<haxe_doc>Returns an iterator on the elements of the list.</haxe_doc>
		</iterator>
		<remove public="1" set="method" line="129">
			<f a="v">
				<c path="List.T"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Remove the first element that is [== v] from the list.
		Returns [true] if an element was removed, [false] otherwise.</haxe_doc>
		</remove>
		<clear public="1" set="method" line="119">
			<f a=""><e path="Void"/></f>
			<haxe_doc>Makes the list empty.</haxe_doc>
		</clear>
		<isEmpty public="1" set="method" line="112">
			<f a=""><e path="Bool"/></f>
			<haxe_doc>Tells if a list is empty.</haxe_doc>
		</isEmpty>
		<pop public="1" set="method" line="98">
			<f a=""><t path="Null"><c path="List.T"/></t></f>
			<haxe_doc>Removes the first element of the list and
		returns it or simply returns null if the
		list is empty.</haxe_doc>
		</pop>
		<last public="1" set="method" line="88">
			<f a=""><t path="Null"><c path="List.T"/></t></f>
			<haxe_doc>Returns the last element of the list, or null
		if the list is empty.</haxe_doc>
		</last>
		<first public="1" set="method" line="80">
			<f a=""><t path="Null"><c path="List.T"/></t></f>
			<haxe_doc>Returns the first element of the list, or null
		if the list is empty.</haxe_doc>
		</first>
		<push public="1" set="method" line="64">
			<f a="item">
				<c path="List.T"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Push an element at the beginning of the list.</haxe_doc>
		</push>
		<add public="1" set="method" line="51">
			<f a="item">
				<c path="List.T"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Add an element at the end of the list.</haxe_doc>
		</add>
		<length public="1" set="null">
			<c path="Int"/>
			<haxe_doc>The number of elements in this list.</haxe_doc>
		</length>
		<q><c path="Array"><d/></c></q>
		<h><c path="Array"><d/></c></h>
		<new public="1" set="method" line="44">
			<f a=""><e path="Void"/></f>
			<haxe_doc>Creates a new empty list.</haxe_doc>
		</new>
		<haxe_doc>A linked-list of elements. The list is composed of two-elements arrays
	that are chained together. It's optimized so that adding or removing an
	element doesn't imply to copy the whole array content everytime.</haxe_doc>
	</class>
	<class path="Math" params="" file="/usr/lib/haxe/std/Math.hx" extern="1">
		<PI public="1" set="null" static="1"><c path="Float"/></PI>
		<NaN public="1" set="null" static="1"><c path="Float"/></NaN>
		<NEGATIVE_INFINITY public="1" set="null" static="1"><c path="Float"/></NEGATIVE_INFINITY>
		<POSITIVE_INFINITY public="1" set="null" static="1"><c path="Float"/></POSITIVE_INFINITY>
		<abs public="1" set="method" static="1"><f a="v">
	<c path="Float"/>
	<c path="Float"/>
</f></abs>
		<min public="1" set="method" static="1"><f a="a:b">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
</f></min>
		<max public="1" set="method" static="1"><f a="a:b">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
</f></max>
		<sin public="1" set="method" static="1"><f a="v">
	<c path="Float"/>
	<c path="Float"/>
</f></sin>
		<cos public="1" set="method" static="1"><f a="v">
	<c path="Float"/>
	<c path="Float"/>
</f></cos>
		<atan2 public="1" set="method" static="1"><f a="y:x">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
</f></atan2>
		<tan public="1" set="method" static="1"><f a="v">
	<c path="Float"/>
	<c path="Float"/>
</f></tan>
		<exp public="1" set="method" static="1"><f a="v">
	<c path="Float"/>
	<c path="Float"/>
</f></exp>
		<log public="1" set="method" static="1"><f a="v">
	<c path="Float"/>
	<c path="Float"/>
</f></log>
		<sqrt public="1" set="method" static="1"><f a="v">
	<c path="Float"/>
	<c path="Float"/>
</f></sqrt>
		<round public="1" set="method" static="1"><f a="v">
	<c path="Float"/>
	<c path="Int"/>
</f></round>
		<floor public="1" set="method" static="1"><f a="v">
	<c path="Float"/>
	<c path="Int"/>
</f></floor>
		<ceil public="1" set="method" static="1"><f a="v">
	<c path="Float"/>
	<c path="Int"/>
</f></ceil>
		<atan public="1" set="method" static="1"><f a="v">
	<c path="Float"/>
	<c path="Float"/>
</f></atan>
		<asin public="1" set="method" static="1"><f a="v">
	<c path="Float"/>
	<c path="Float"/>
</f></asin>
		<acos public="1" set="method" static="1"><f a="v">
	<c path="Float"/>
	<c path="Float"/>
</f></acos>
		<pow public="1" set="method" static="1"><f a="v:exp">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
</f></pow>
		<random public="1" set="method" static="1"><f a=""><c path="Float"/></f></random>
		<isFinite public="1" set="method" static="1"><f a="f">
	<c path="Float"/>
	<e path="Bool"/>
</f></isFinite>
		<isNaN public="1" set="method" static="1"><f a="f">
	<c path="Float"/>
	<e path="Bool"/>
</f></isNaN>
		<haxe_doc>This class defines mathematical functions and constants.</haxe_doc>
	</class>
	<class path="Reflect" params="" file="/usr/lib/haxe/std/cpp/_std/Reflect.hx">
		<hasField public="1" set="method" line="29" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Tells if an object has a field set. This doesn't take into account the object prototype (class methods).</haxe_doc>
		</hasField>
		<field public="1" set="method" line="33" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc>Returns the field of an object, or null if [o] is not an object or doesn't have this field.</haxe_doc>
		</field>
		<setField public="1" get="inline" set="null" line="37" static="1">
			<f a="o:field:value">
				<d/>
				<c path="String"/>
				<d/>
				<e path="Void"/>
			</f>
			<haxe_doc>Set an object field value.</haxe_doc>
		</setField>
		<getProperty public="1" get="inline" set="null" line="42" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc>Similar to field but also supports property (might be slower).</haxe_doc>
		</getProperty>
		<setProperty public="1" get="inline" set="null" line="46" static="1">
			<f a="o:field:value">
				<d/>
				<c path="String"/>
				<d/>
				<e path="Void"/>
			</f>
			<haxe_doc>Similar to setField but also supports property (might be slower).</haxe_doc>
		</setProperty>
		<callMethod public="1" set="method" line="51" static="1">
			<f a="o:func:args">
				<d/>
				<d/>
				<c path="Array"><d/></c>
				<d/>
			</f>
			<haxe_doc>Call a method with the given object and arguments.</haxe_doc>
		</callMethod>
		<fields public="1" set="method" line="58" static="1">
			<f a="o">
				<d/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Returns the list of fields of an object, excluding its prototype (class methods).</haxe_doc>
		</fields>
		<isFunction public="1" set="method" line="65" static="1">
			<f a="f">
				<d/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Tells if a value is a function or not.</haxe_doc>
		</isFunction>
		<compare public="1" params="T" set="method" line="69" static="1">
			<f a="a:b">
				<c path="compare.T"/>
				<c path="compare.T"/>
				<c path="Int"/>
			</f>
			<haxe_doc>Generic comparison function, does not work for methods, see [compareMethods]</haxe_doc>
		</compare>
		<compareMethods public="1" set="method" line="73" static="1">
			<f a="f1:f2">
				<d/>
				<d/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Compare two methods closures. Returns true if it's the same method of the same instance.</haxe_doc>
		</compareMethods>
		<isObject public="1" set="method" line="81" static="1">
			<f a="v">
				<d/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Tells if a value is an object or not.</haxe_doc>
		</isObject>
		<deleteField public="1" set="method" line="88" static="1">
			<f a="o:f">
				<d/>
				<c path="String"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Delete an object field.</haxe_doc>
		</deleteField>
		<copy public="1" params="T" set="method" line="93" static="1">
			<f a="o">
				<c path="copy.T"/>
				<c path="copy.T"/>
			</f>
			<haxe_doc>Make a copy of the fields of an object.</haxe_doc>
		</copy>
		<makeVarArgs public="1" set="method" line="104" static="1">
			<f a="f">
				<f a="">
					<c path="Array"><d/></c>
					<d/>
				</f>
				<d/>
			</f>
			<haxe_doc>Transform a function taking an array of arguments into a function that can
		be called with any number of arguments.</haxe_doc>
		</makeVarArgs>
		<haxe_doc>The Reflect API is a way to manipulate values dynamicly through an
	abstract interface in an untyped manner. Use with care.</haxe_doc>
		<meta><m n=":core_api"/></meta>
	</class>
	<class path="Std" params="" file="/usr/lib/haxe/std/cpp/_std/Std.hx">
		<is public="1" set="method" line="27" static="1">
			<f a="v:t">
				<d/>
				<d/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Tells if a value v is of the type t.</haxe_doc>
		</is>
		<string public="1" set="method" line="31" static="1">
			<f a="s">
				<d/>
				<c path="String"/>
			</f>
			<haxe_doc>Convert any value to a String</haxe_doc>
		</string>
		<int public="1" set="method" line="35" static="1">
			<f a="x">
				<c path="Float"/>
				<c path="Int"/>
			</f>
			<haxe_doc>Convert a Float to an Int, rounded down.</haxe_doc>
		</int>
		<parseInt public="1" set="method" line="39" static="1">
			<f a="x">
				<c path="String"/>
				<t path="Null"><c path="Int"/></t>
			</f>
			<haxe_doc>Convert a String to an Int, parsing different possible representations. Returns [null] if could not be parsed.</haxe_doc>
		</parseInt>
		<parseFloat public="1" set="method" line="43" static="1">
			<f a="x">
				<c path="String"/>
				<c path="Float"/>
			</f>
			<haxe_doc>Convert a String to a Float, parsing different possible reprensations.</haxe_doc>
		</parseFloat>
		<random public="1" set="method" line="47" static="1">
			<f a="x">
				<c path="Int"/>
				<c path="Int"/>
			</f>
			<haxe_doc>Return a random integer between 0 included and x excluded.</haxe_doc>
		</random>
		<haxe_doc>The Std class provides standard methods for manipulating basic types.</haxe_doc>
		<meta><m n=":core_api"/></meta>
	</class>
	<enum path="Void" params="" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes"><haxe_doc>The standard Void type. Only [null] values can be of the type [Void].</haxe_doc></enum>
	<class path="Float" params="" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes" extern="1"><haxe_doc>The standard Float type, this is a double-precision IEEE 64bit float.</haxe_doc></class>
	<class path="Int" params="" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes" extern="1">
		<extends path="Float"/>
		<haxe_doc>The standard Int type. Its precision depends on the platform.</haxe_doc>
	</class>
	<typedef path="Null" params="T" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<c path="Null.T"/>
		<haxe_doc>[Null] can be useful in two cases. In order to document some methods
	that accepts or can return a [null] value, or for the Flash9 compiler and AS3
	generator to distinguish between base values that can be null and others that
	can't.</haxe_doc>
	</typedef>
	<enum path="Bool" params="" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<true/>
		<false/>
		<haxe_doc>The standard Boolean type is represented as an enum with two choices.</haxe_doc>
	</enum>
	<class path="Dynamic" params="T" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes" extern="1"><haxe_doc>Dynamic is an internal compiler type which has special behavior.
	See the haXe language reference for more informations.</haxe_doc></class>
	<typedef path="Iterator" params="T" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<a>
			<next set="method"><f a=""><c path="Iterator.T"/></f></next>
			<hasNext set="method"><f a=""><e path="Bool"/></f></hasNext>
		</a>
		<haxe_doc>An Iterator is a structure that permits to list a given container
	values. It can be used by your own data structures. See the haXe
	documentation for more informations.</haxe_doc>
	</typedef>
	<typedef path="Iterable" params="T" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<a><iterator set="method"><f a=""><t path="Iterator"><c path="Iterable.T"/></t></f></iterator></a>
		<haxe_doc>An Iterable is a data structure which has an iterator() method.
	See [Lambda] for generic functions on iterable structures.</haxe_doc>
	</typedef>
	<class path="ArrayAccess" params="T" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes" extern="1" interface="1"><haxe_doc>ArrayAccess is used to indicate a class that can be accessed using brackets.
	The type parameter represent the type of the elements stored.</haxe_doc></class>
	<class path="String" params="" file="/usr/lib/haxe/std/String.hx" extern="1">
		<fromCharCode public="1" set="method" static="1"><f a="code">
	<c path="Int"/>
	<c path="String"/>
</f></fromCharCode>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns the String itself.</haxe_doc>
		</toString>
		<substring public="1" set="method">
			<f a="startIndex:?endIndex">
				<c path="Int"/>
				<c path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc><![CDATA[Returns a part of the String, taking from [startIndex] to [endIndex] - 1.
		If [endIndex] is not specified, length is used.
		If [startIndex] or [endIndex] is smaller than 0, than 0 is used.
		If [startIndex] > [endIndex] then they are swaped.]]></haxe_doc>
		</substring>
		<substr public="1" set="method">
			<f a="pos:?len">
				<c path="Int"/>
				<c path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns a part of the String, taking [len] characters starting from [pos].
		If [len] is not specified, it takes all the remaining characters.</haxe_doc>
		</substr>
		<split public="1" set="method">
			<f a="delimiter">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Split the string using the specified delimiter.</haxe_doc>
		</split>
		<lastIndexOf public="1" set="method">
			<f a="str:?startIndex">
				<c path="String"/>
				<c path="Int"/>
				<c path="Int"/>
			</f>
			<haxe_doc>Similar to [indexOf] but returns the latest index.</haxe_doc>
		</lastIndexOf>
		<indexOf public="1" set="method">
			<f a="str:?startIndex">
				<c path="String"/>
				<c path="Int"/>
				<c path="Int"/>
			</f>
			<haxe_doc>Returns the index of first occurence of [value]
		Returns [1-1] if [value] is not found.
		The optional [startIndex] parameter allows you to specify at which character to start searching.
		The position returned is still relative to the beginning of the string.</haxe_doc>
		</indexOf>
		<charCodeAt public="1" set="method">
			<f a="index">
				<c path="Int"/>
				<t path="Null"><c path="Int"/></t>
			</f>
			<haxe_doc>Returns the character code at the given position.
		Returns [null] if outside of String bounds.</haxe_doc>
		</charCodeAt>
		<charAt public="1" set="method">
			<f a="index">
				<c path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the character at the given position.
		Returns the empty String if outside of String bounds.</haxe_doc>
		</charAt>
		<toLowerCase public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns an String where all characters have been lowercased.</haxe_doc>
		</toLowerCase>
		<toUpperCase public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns an String where all characters have been uppercased.</haxe_doc>
		</toUpperCase>
		<length public="1" set="null">
			<c path="Int"/>
			<haxe_doc>The number of characters in the String.</haxe_doc>
		</length>
		<new public="1" set="method">
			<f a="string">
				<c path="String"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Creates a copy from a given String.</haxe_doc>
		</new>
		<haxe_doc>The basic String class.</haxe_doc>
	</class>
	<class path="StringBuf" params="" file="/usr/lib/haxe/std/cpp/_std/StringBuf.hx">
		<toString public="1" get="inline" set="null" line="47">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns the content of the string buffer.
		The buffer is not emptied by this operation.</haxe_doc>
		</toString>
		<addChar public="1" get="inline" set="null" line="43">
			<f a="c">
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Adds a part of a string to the string buffer.</haxe_doc>
		</addChar>
		<addSub public="1" get="inline" set="null" line="39">
			<f a="s:pos:?len">
				<c path="String"/>
				<c path="Int"/>
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Adds a character to the string buffer.</haxe_doc>
		</addSub>
		<add public="1" get="inline" set="null" line="35">
			<f a="x">
				<d/>
				<e path="Void"/>
			</f>
			<haxe_doc>Adds the representation of any value to the string buffer.</haxe_doc>
		</add>
		<b><c path="Array"><d/></c></b>
		<new public="1" set="method" line="31">
			<f a=""><e path="Void"/></f>
			<haxe_doc>Creates a new string buffer.</haxe_doc>
		</new>
		<haxe_doc>A String buffer is an efficient way to build a big string by
	appending small elements together.</haxe_doc>
		<meta><m n=":core_api"/></meta>
	</class>
	<class path="StringTools" params="" file="/usr/lib/haxe/std/StringTools.hx">
		<urlEncode public="1" set="method" line="41" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Encode an URL by using the standard format.</haxe_doc>
		</urlEncode>
		<urlDecode public="1" set="method" line="68" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Decode an URL using the standard format.</haxe_doc>
		</urlDecode>
		<htmlEscape public="1" set="method" line="95" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Escape HTML special characters of the string.</haxe_doc>
		</htmlEscape>
		<htmlUnescape public="1" set="method" line="102" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Unescape HTML special characters of the string.</haxe_doc>
		</htmlUnescape>
		<startsWith public="1" set="method" line="113" static="1">
			<f a="s:start">
				<c path="String"/>
				<c path="String"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Tells if the string [s] starts with the string [start].</haxe_doc>
		</startsWith>
		<endsWith public="1" set="method" line="126" static="1">
			<f a="s:end">
				<c path="String"/>
				<c path="String"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Tells if the string [s] ends with the string [end].</haxe_doc>
		</endsWith>
		<isSpace public="1" set="method" line="141" static="1">
			<f a="s:pos">
				<c path="String"/>
				<c path="Int"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Tells if the character in the string [s] at position [pos] is a space.</haxe_doc>
		</isSpace>
		<ltrim public="1" set="method" line="149" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Removes spaces at the left of the String [s].</haxe_doc>
		</ltrim>
		<rtrim public="1" set="method" line="170" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Removes spaces at the right of the String [s].</haxe_doc>
		</rtrim>
		<trim public="1" set="method" line="192" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Removes spaces at the beginning and the end of the String [s].</haxe_doc>
		</trim>
		<rpad public="1" set="method" line="207" static="1">
			<f a="s:c:l">
				<c path="String"/>
				<c path="String"/>
				<c path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Pad the string [s] by appending [c] at its right until it reach [l] characters.</haxe_doc>
		</rpad>
		<lpad public="1" set="method" line="229" static="1">
			<f a="s:c:l">
				<c path="String"/>
				<c path="String"/>
				<c path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Pad the string [s] by appending [c] at its left until it reach [l] characters.</haxe_doc>
		</lpad>
		<replace public="1" set="method" line="254" static="1">
			<f a="s:sub:by">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Replace all occurences of the string [sub] in the string [s] by the string [by].</haxe_doc>
		</replace>
		<hex public="1" set="method" line="269" static="1">
			<f a="n:?digits">
				<c path="Int"/>
				<c path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Encode a number into a hexadecimal representation, with an optional number of zeros for left padding.</haxe_doc>
		</hex>
		<fastCodeAt public="1" get="inline" set="null" line="292" static="1">
			<f a="s:index">
				<c path="String"/>
				<c path="Int"/>
				<c path="Int"/>
			</f>
			<haxe_doc>Provides a fast native string charCodeAt access. Since the EOF value might vary depending on the platforms, always test with StringTools.isEOF.
		Only guaranteed to work if index in [0,s.length] range. Might not work with strings containing \0 char.</haxe_doc>
		</fastCodeAt>
		<isEOF public="1" get="inline" set="null" line="322" static="1"><f a="c">
	<c path="Int"/>
	<e path="Bool"/>
</f></isEOF>
		<haxe_doc>The StringTools class contains some extra functionalities for [String]
	manipulation. It's stored in a different class in order to prevent
	the standard [String] of being bloated and thus increasing the size of
	each application using it.</haxe_doc>
	</class>
	<class path="cpp.Lib" params="" file="/usr/lib/haxe/std/cpp/Lib.hx">
		<load public="1" set="method" line="32" static="1">
			<f a="lib:prim:nargs">
				<c path="String"/>
				<c path="String"/>
				<c path="Int"/>
				<d/>
			</f>
			<haxe_doc>Load and return a Cpp primitive from a DLL library.</haxe_doc>
		</load>
		<loadLazy public="1" set="method" line="44" static="1">
			<f a="lib:prim:nargs">
				<c path="String"/>
				<c path="String"/>
				<c path="Int"/>
				<d/>
			</f>
			<haxe_doc>Tries to load, and always returns a valid function, but the function may throw
		if called.</haxe_doc>
		</loadLazy>
		<rethrow public="1" set="method" line="60" static="1"><f a="inExp">
	<d/>
	<e path="Void"/>
</f></rethrow>
		<stringReference public="1" set="method" line="62" static="1"><f a="inExp">
	<d/>
	<e path="Void"/>
</f></stringReference>
		<print public="1" set="method" line="67" static="1">
			<f a="v">
				<d/>
				<e path="Void"/>
			</f>
			<haxe_doc>Print the specified value on the default output.</haxe_doc>
		</print>
		<haxeToNeko public="1" set="method" line="75" static="1">
			<f a="v">
				<d/>
				<d/>
			</f>
			<haxe_doc>This function is used to make porting from neko to cpp easy.
		It does not need to do anything because the c-code can work with any Dynamic</haxe_doc>
		</haxeToNeko>
		<nekoToHaxe public="1" set="method" line="83" static="1">
			<f a="v">
				<d/>
				<d/>
			</f>
			<haxe_doc>This function is used to make porting from neko to cpp easy.
		It does not need to do anything because the c-code can work with any Dynamic</haxe_doc>
		</nekoToHaxe>
		<println public="1" set="method" line="89" static="1">
			<f a="v">
				<d/>
				<e path="Void"/>
			</f>
			<haxe_doc>Print the specified value on the default output followed by a newline character.</haxe_doc>
		</println>
	</class>
	<class path="Sys" params="" file="/usr/lib/haxe/std/cpp/_std/Sys.hx">
		<print public="1" set="method" line="28" static="1">
			<f a="v">
				<d/>
				<e path="Void"/>
			</f>
			<haxe_doc>Print any value on the standard output.</haxe_doc>
		</print>
		<println public="1" set="method" line="32" static="1">
			<f a="v">
				<d/>
				<e path="Void"/>
			</f>
			<haxe_doc>Print any value on the standard output, followed by a newline</haxe_doc>
		</println>
		<stdin public="1" set="method" line="37" static="1">
			<f a=""><c path="haxe.io.Input"/></f>
			<haxe_doc>Returns the process standard input, from which you can read what user enters. Usually it will block until the user send a full input line. See [getChar] for an alternative.</haxe_doc>
		</stdin>
		<stdout public="1" set="method" line="41" static="1">
			<f a=""><c path="haxe.io.Output"/></f>
			<haxe_doc>Returns the process standard output on which you can write.</haxe_doc>
		</stdout>
		<stderr public="1" set="method" line="45" static="1">
			<f a=""><c path="haxe.io.Output"/></f>
			<haxe_doc>Returns the process standard error on which you can write.</haxe_doc>
		</stderr>
		<getChar public="1" set="method" line="49" static="1">
			<f a="echo">
				<e path="Bool"/>
				<c path="Int"/>
			</f>
			<haxe_doc>Read a single input character from the standard input (without blocking) and returns it. Setting [echo] to true will also display it on the output.</haxe_doc>
		</getChar>
		<args public="1" set="method" line="53" static="1">
			<f a=""><c path="Array"><c path="String"/></c></f>
			<haxe_doc>Returns all the arguments that were passed by the commandline.</haxe_doc>
		</args>
		<getEnv public="1" set="method" line="57" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the value of the given environment variable.</haxe_doc>
		</getEnv>
		<putEnv public="1" set="method" line="64" static="1">
			<f a="s:v">
				<c path="String"/>
				<c path="String"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Set the value of the given environment variable.</haxe_doc>
		</putEnv>
		<sleep public="1" set="method" line="68" static="1">
			<f a="seconds">
				<c path="Float"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Suspend the current execution for the given time (in seconds).</haxe_doc>
		</sleep>
		<setTimeLocale public="1" set="method" line="72" static="1">
			<f a="loc">
				<c path="String"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Change the current time locale, which will affect [DateTools.format] date formating.
		Returns true if the locale was successfully changed</haxe_doc>
		</setTimeLocale>
		<getCwd public="1" set="method" line="76" static="1">
			<f a=""><c path="String"/></f>
			<haxe_doc>Get the current working directory (usually the one in which the program was started)</haxe_doc>
		</getCwd>
		<setCwd public="1" set="method" line="80" static="1">
			<f a="s">
				<c path="String"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Change the current working directory.</haxe_doc>
		</setCwd>
		<systemName public="1" set="method" line="84" static="1">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns the name of the system you are running on. For instance :
			"Windows", "Linux", "BSD" and "Mac" depending on your desktop OS.</haxe_doc>
		</systemName>
		<escapeArgument set="method" line="88" static="1"><f a="arg">
	<c path="String"/>
	<c path="String"/>
</f></escapeArgument>
		<command public="1" set="method" line="102" static="1">
			<f a="cmd:?args">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
				<c path="Int"/>
			</f>
			<haxe_doc>Run the given command with the list of arguments. The command output will be printed on the same output as the current process.
		The current process will block until the command terminates and it will return the command result (0 if there was no error).
		Read the [sys.io.Process] api for a more complete way to start background processes.</haxe_doc>
		</command>
		<exit public="1" set="method" line="111" static="1">
			<f a="code">
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Exit the current process with the given error code.</haxe_doc>
		</exit>
		<time public="1" set="method" line="115" static="1">
			<f a=""><c path="Float"/></f>
			<haxe_doc>Gives the most precise timestamp value (in seconds).</haxe_doc>
		</time>
		<cpuTime public="1" set="method" line="119" static="1">
			<f a=""><c path="Float"/></f>
			<haxe_doc>Gives the most precise timestamp value (in seconds) but only account for the actual time spent running on the CPU for the current thread/process.</haxe_doc>
		</cpuTime>
		<executablePath public="1" set="method" line="123" static="1">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns the path to the current executable that we are running.</haxe_doc>
		</executablePath>
		<environment public="1" set="method" line="127" static="1">
			<f a=""><c path="Hash"><c path="String"/></c></f>
			<haxe_doc>Returns the whole environement variables.</haxe_doc>
		</environment>
		<get_env line="138" static="1"><f a="">
	<c path="String"/>
	<c path="String"/>
</f></get_env>
		<put_env line="139" static="1"><f a=":">
	<c path="String"/>
	<c path="String"/>
	<unknown/>
</f></put_env>
		<_sleep line="140" static="1"><f a="">
	<c path="Float"/>
	<unknown/>
</f></_sleep>
		<set_time_locale line="141" static="1"><f a="">
	<c path="String"/>
	<e path="Bool"/>
</f></set_time_locale>
		<get_cwd line="142" static="1"><f a=""><c path="String"/></f></get_cwd>
		<set_cwd line="143" static="1"><f a="">
	<c path="String"/>
	<unknown/>
</f></set_cwd>
		<sys_string line="144" static="1"><f a=""><c path="String"/></f></sys_string>
		<sys_command line="145" static="1"><f a="">
	<c path="String"/>
	<c path="Int"/>
</f></sys_command>
		<sys_exit line="146" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></sys_exit>
		<sys_time line="147" static="1"><f a=""><c path="Float"/></f></sys_time>
		<sys_cpu_time line="148" static="1"><f a=""><c path="Float"/></f></sys_cpu_time>
		<sys_exe_path line="149" static="1"><f a=""><c path="String"/></f></sys_exe_path>
		<sys_env line="150" static="1"><f a=""><c path="Array"><c path="String"/></c></f></sys_env>
		<file_stdin line="152" static="1"><f a=""><unknown/></f></file_stdin>
		<file_stdout line="153" static="1"><f a=""><unknown/></f></file_stdout>
		<file_stderr line="154" static="1"><f a=""><unknown/></f></file_stderr>
		<getch line="156" static="1"><f a="">
	<e path="Bool"/>
	<c path="Int"/>
</f></getch>
		<haxe_doc>This class gives you access to many base functionalities of system platforms. Looks in [sys] sub packages for more system APIs.</haxe_doc>
		<meta><m n=":core_api"/></meta>
	</class>
	<enum path="ValueType" params="" file="/usr/lib/haxe/std/cpp/_std/Type.hx" module="Type">
		<TUnknown/>
		<TObject/>
		<TNull/>
		<TInt/>
		<TFunction/>
		<TFloat/>
		<TEnum a="e"><c path="Enum"><d/></c></TEnum>
		<TClass a="c"><c path="Class"><d/></c></TClass>
		<TBool/>
	</enum>
	<class path="Type" params="" file="/usr/lib/haxe/std/cpp/_std/Type.hx">
		<getClass public="1" params="T" set="method" line="39" static="1">
			<f a="o">
				<c path="getClass.T"/>
				<c path="Class"><c path="getClass.T"/></c>
			</f>
			<haxe_doc>Returns the class of a value or [null] if this value is not a Class instance.</haxe_doc>
		</getClass>
		<getEnum public="1" set="method" line="50" static="1">
			<f a="o">
				<c path="EnumValue"/>
				<c path="Enum"><d/></c>
			</f>
			<haxe_doc>Returns the enum of a value or [null] if this value is not an Enum instance.</haxe_doc>
		</getEnum>
		<getSuperClass public="1" set="method" line="56" static="1">
			<f a="c">
				<c path="Class"><d/></c>
				<c path="Class"><d/></c>
			</f>
			<haxe_doc>Returns the super-class of a class, or null if no super class.</haxe_doc>
		</getSuperClass>
		<getClassName public="1" set="method" line="60" static="1">
			<f a="c">
				<c path="Class"><d/></c>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the complete name of a class.</haxe_doc>
		</getClassName>
		<getEnumName public="1" set="method" line="66" static="1">
			<f a="e">
				<c path="Enum"><d/></c>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the complete name of an enum.</haxe_doc>
		</getEnumName>
		<resolveClass public="1" set="method" line="70" static="1">
			<f a="name">
				<c path="String"/>
				<c path="Class"><d/></c>
			</f>
			<haxe_doc>Evaluates a class from a name. The class must have been compiled
		to be accessible.</haxe_doc>
		</resolveClass>
		<resolveEnum public="1" set="method" line="77" static="1">
			<f a="name">
				<c path="String"/>
				<c path="Enum"><d/></c>
			</f>
			<haxe_doc>Evaluates an enum from a name. The enum must have been compiled
		to be accessible.</haxe_doc>
		</resolveEnum>
		<createInstance public="1" params="T" set="method" line="84" static="1">
			<f a="cl:args">
				<c path="Class"><c path="createInstance.T"/></c>
				<c path="Array"><d/></c>
				<c path="createInstance.T"/>
			</f>
			<haxe_doc>Creates an instance of the given class with the list of constructor arguments.</haxe_doc>
		</createInstance>
		<createEmptyInstance public="1" params="T" set="method" line="90" static="1">
			<f a="cl">
				<c path="Class"><c path="createEmptyInstance.T"/></c>
				<c path="createEmptyInstance.T"/>
			</f>
			<haxe_doc>Similar to [Reflect.createInstance] excepts that the constructor is not called.
		This enables you to create an instance without any side-effect.</haxe_doc>
		</createEmptyInstance>
		<createEnum public="1" params="T" set="method" line="94" static="1">
			<f a="e:constr:?params">
				<c path="Enum"><c path="createEnum.T"/></c>
				<c path="String"/>
				<c path="Array"><d/></c>
				<c path="createEnum.T"/>
			</f>
			<haxe_doc>Create an instance of an enum by using a constructor name and parameters.</haxe_doc>
		</createEnum>
		<createEnumIndex public="1" params="T" set="method" line="100" static="1">
			<f a="e:index:?params">
				<c path="Enum"><c path="createEnumIndex.T"/></c>
				<c path="Int"/>
				<c path="Array"><d/></c>
				<c path="createEnumIndex.T"/>
			</f>
			<haxe_doc>Create an instance of an enum by using a constructor index and parameters.</haxe_doc>
		</createEnumIndex>
		<getInstanceFields public="1" set="method" line="106" static="1">
			<f a="c">
				<c path="Class"><d/></c>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Returns the list of instance fields.</haxe_doc>
		</getInstanceFields>
		<getClassFields public="1" set="method" line="110" static="1">
			<f a="c">
				<c path="Class"><d/></c>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Returns the list of a class static fields.</haxe_doc>
		</getClassFields>
		<getEnumConstructs public="1" set="method" line="114" static="1">
			<f a="e">
				<c path="Enum"><d/></c>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Returns all the available constructor names for an enum.</haxe_doc>
		</getEnumConstructs>
		<typeof public="1" set="method" line="118" static="1">
			<f a="v">
				<d/>
				<e path="ValueType"/>
			</f>
			<haxe_doc>Returns the runtime type of a value.</haxe_doc>
		</typeof>
		<enumEq public="1" params="T" set="method" line="134" static="1">
			<f a="a:b">
				<c path="enumEq.T"/>
				<c path="enumEq.T"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Recursively compare two enums constructors and parameters.</haxe_doc>
		</enumEq>
		<enumConstructor public="1" set="method" line="138" static="1">
			<f a="e">
				<c path="EnumValue"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the constructor of an enum</haxe_doc>
		</enumConstructor>
		<enumParameters public="1" set="method" line="142" static="1">
			<f a="e">
				<c path="EnumValue"/>
				<c path="Array"><d/></c>
			</f>
			<haxe_doc>Returns the parameters of an enum</haxe_doc>
		</enumParameters>
		<enumIndex public="1" get="inline" set="null" line="147" static="1">
			<f a="e">
				<c path="EnumValue"/>
				<c path="Int"/>
			</f>
			<haxe_doc>Returns the index of the constructor of an enum</haxe_doc>
		</enumIndex>
		<allEnums public="1" params="T" set="method" line="151" static="1">
			<f a="e">
				<c path="Enum"><c path="allEnums.T"/></c>
				<c path="Array"><c path="allEnums.T"/></c>
			</f>
			<haxe_doc>Returns the list of all enum values that don't take any parameter.</haxe_doc>
		</allEnums>
		<haxe_doc>The haXe Reflection API enables you to retreive informations about any value,
	Classes and Enums at runtime.</haxe_doc>
		<meta><m n=":core_api"/></meta>
	</class>
	<typedef path="cpp.FileSystem" params="" file="/usr/lib/haxe/std/cpp/FileSystem.hx"><c path="sys.FileSystem"/></typedef>
	<typedef path="cpp.Sys" params="" file="/usr/lib/haxe/std/cpp/Sys.hx"><c path="Sys"/></typedef>
	<typedef path="cpp.io.File" params="" file="/usr/lib/haxe/std/cpp/io/File.hx"><c path="sys.io.File"/></typedef>
	<typedef path="cpp.io.FileInput" params="" file="/usr/lib/haxe/std/cpp/io/FileInput.hx"><c path="sys.io.FileInput"/></typedef>
	<typedef path="cpp.io.FileOutput" params="" file="/usr/lib/haxe/std/cpp/io/FileOutput.hx"><c path="sys.io.FileOutput"/></typedef>
	<typedef path="cpp.io.Path" params="" file="/usr/lib/haxe/std/cpp/io/Path.hx"><c path="haxe.io.Path"/></typedef>
	<class path="cpp.rtti.FieldNumericIntegerLookup" params="" file="/usr/lib/haxe/std/cpp/rtti/FieldNumericIntegerLookup.hx" interface="1"><haxe_doc>If you implement this interface, then the backend will generate code that
	allows fast numeric access to fields by integer id.  This should speed up the CFFI.</haxe_doc></class>
	<class path="cpp.vm.Gc" params="" file="/usr/lib/haxe/std/cpp/vm/Gc.hx">
		<enable public="1" set="method" line="5" static="1"><f a="inEnable">
	<e path="Bool"/>
	<e path="Void"/>
</f></enable>
		<run public="1" set="method" line="10" static="1"><f a="major">
	<e path="Bool"/>
	<e path="Void"/>
</f></run>
		<compact public="1" set="method" line="15" static="1"><f a=""><e path="Void"/></f></compact>
		<memUsage public="1" set="method" line="20" static="1"><f a=""><c path="Int"/></f></memUsage>
		<trace public="1" set="method" line="25" static="1"><f a="sought:?printInstances">
	<c path="Class"><d/></c>
	<e path="Bool"/>
	<c path="Int"/>
</f></trace>
		<versionCheck public="1" set="method" line="30" static="1"><f a=""><e path="Bool"/></f></versionCheck>
		<doNotKill public="1" set="method" line="32" static="1"><f a="inObject">
	<d/>
	<e path="Void"/>
</f></doNotKill>
		<getNextZombie public="1" set="method" line="37" static="1"><f a=""><d/></f></getNextZombie>
		<safePoint public="1" set="method" line="42" static="1"><f a=""><e path="Void"/></f></safePoint>
		<enterGCFreeZone public="1" set="method" line="47" static="1"><f a=""><e path="Void"/></f></enterGCFreeZone>
		<exitGCFreeZone public="1" set="method" line="52" static="1"><f a=""><e path="Void"/></f></exitGCFreeZone>
	</class>
	<class path="cpp.zip.Compress" params="" file="/usr/lib/haxe/std/cpp/zip/Compress.hx">
		<run public="1" set="method" line="47" static="1"><f a="s:level">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></run>
		<_deflate_init line="58" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></_deflate_init>
		<_deflate_bound line="59" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
</f></_deflate_bound>
		<_deflate_buffer line="60" static="1"><f a="::::">
	<d/>
	<t path="haxe.io.BytesData"/>
	<c path="Int"/>
	<t path="haxe.io.BytesData"/>
	<c path="Int"/>
	<a>
		<write><c path="Int"/></write>
		<read><c path="Int"/></read>
		<done><e path="Bool"/></done>
	</a>
</f></_deflate_buffer>
		<_deflate_end line="61" static="1"><f a="">
	<d/>
	<unknown/>
</f></_deflate_end>
		<_set_flush_mode line="62" static="1"><f a=":">
	<d/>
	<c path="String"/>
	<unknown/>
</f></_set_flush_mode>
		<close public="1" set="method" line="43"><f a=""><e path="Void"/></f></close>
		<setFlushMode public="1" set="method" line="39"><f a="f">
	<e path="cpp.zip.Flush"/>
	<e path="Void"/>
</f></setFlushMode>
		<execute public="1" set="method" line="35"><f a="src:srcPos:dst:dstPos">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<a>
		<write><c path="Int"/></write>
		<read><c path="Int"/></read>
		<done><e path="Bool"/></done>
	</a>
</f></execute>
		<s><d/></s>
		<new public="1" set="method" line="31"><f a="level">
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="cpp.zip.Flush" params="" file="/usr/lib/haxe/std/cpp/zip/Flush.hx">
		<SYNC/>
		<NO/>
		<FULL/>
		<FINISH/>
		<BLOCK/>
	</enum>
	<class path="cpp.zip.Uncompress" params="" file="/usr/lib/haxe/std/cpp/zip/Uncompress.hx">
		<run public="1" set="method" line="46" static="1"><f a="src:?bufsize">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></run>
		<_inflate_init line="64" static="1"><f a="">
	<t path="Null"><c path="Int"/></t>
	<unknown/>
</f></_inflate_init>
		<_inflate_buffer line="65" static="1"><f a="::::">
	<d/>
	<t path="haxe.io.BytesData"/>
	<c path="Int"/>
	<t path="haxe.io.BytesData"/>
	<c path="Int"/>
	<a>
		<write><c path="Int"/></write>
		<read><c path="Int"/></read>
		<done><e path="Bool"/></done>
	</a>
</f></_inflate_buffer>
		<_inflate_end line="66" static="1"><f a="">
	<d/>
	<unknown/>
</f></_inflate_end>
		<_set_flush_mode line="67" static="1"><f a=":">
	<d/>
	<unknown/>
	<unknown/>
</f></_set_flush_mode>
		<close public="1" set="method" line="42"><f a=""><e path="Void"/></f></close>
		<setFlushMode public="1" set="method" line="38"><f a="f">
	<e path="cpp.zip.Flush"/>
	<e path="Void"/>
</f></setFlushMode>
		<this_run public="1" set="method" line="34"><f a="src:srcPos:dst:dstPos">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<a>
		<write><c path="Int"/></write>
		<read><c path="Int"/></read>
		<done><e path="Bool"/></done>
	</a>
</f></this_run>
		<s><d/></s>
		<new public="1" set="method" line="30"><f a="windowBits">
	<t path="Null"><c path="Int"/></t>
	<e path="Void"/>
</f></new>
	</class>
	<typedef path="flash.display.Sprite" params="" file="/home/joshua/Development/Haxe/nme/nme/display/Sprite.hx"><t path="nme.display.Sprite"/></typedef>
	<class path="format.display.FrameLabel" params="" file="/home/joshua/Development/Haxe/nme/format/display/FrameLabel.hx">
		<name public="1" set="null"><c path="String"/></name>
		<frame public="1" set="null"><c path="Int"/></frame>
		<new public="1" set="method" line="11"><f a="frame:name">
	<c path="Int"/>
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.IEventDispatcher" params="" file="/home/joshua/Development/Haxe/nme/native/events/IEventDispatcher.hx" interface="1">
		<willTrigger public="1" set="method"><f a="type">
	<c path="String"/>
	<e path="Bool"/>
</f></willTrigger>
		<removeEventListener public="1" set="method"><f a="type:listener:?useCapture">
	<c path="String"/>
	<t path="native.events.Function"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></removeEventListener>
		<hasEventListener public="1" set="method"><f a="type">
	<c path="String"/>
	<e path="Bool"/>
</f></hasEventListener>
		<dispatchEvent public="1" set="method"><f a="event">
	<c path="native.events.Event"/>
	<e path="Bool"/>
</f></dispatchEvent>
		<addEventListener public="1" set="method"><f a="type:listener:?useCapture:?priority:?useWeakReference">
	<c path="String"/>
	<t path="native.events.Function"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></addEventListener>
	</class>
	<class path="native.events.EventDispatcher" params="" file="/home/joshua/Development/Haxe/nme/native/events/EventDispatcher.hx">
		<implements path="native.events.IEventDispatcher"/>
		<willTrigger public="1" set="method" line="166"><f a="type">
	<c path="String"/>
	<e path="Bool"/>
</f></willTrigger>
		<toString public="1" set="method" line="159"><f a=""><c path="String"/></f></toString>
		<removeEventListener public="1" set="method" line="131"><f a="type:listener:?capture">
	<c path="String"/>
	<t path="native.events.Function"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></removeEventListener>
		<hasEventListener public="1" set="method" line="110"><f a="type">
	<c path="String"/>
	<e path="Bool"/>
</f></hasEventListener>
		<DispatchIOErrorEvent public="1" set="method" line="102"><f a=""><e path="Void"/></f></DispatchIOErrorEvent>
		<dispatchEvent public="1" set="method" line="50"><f a="event">
	<c path="native.events.Event"/>
	<e path="Bool"/>
</f></dispatchEvent>
		<DispatchCompleteEvent public="1" set="method" line="42"><f a=""><e path="Void"/></f></DispatchCompleteEvent>
		<addEventListener public="1" set="method" line="25"><f a="type:listener:?useCapture:?priority:?useWeakReference">
	<c path="String"/>
	<t path="native.events.Function"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></addEventListener>
		<nmeTarget>
			<c path="native.events.IEventDispatcher"/>
			<haxe_doc>@private</haxe_doc>
		</nmeTarget>
		<nmeEventMap>
			<t path="native.events.EventMap"/>
			<haxe_doc>@private</haxe_doc>
		</nmeEventMap>
		<new public="1" set="method" line="17"><f a="?target">
	<c path="native.events.IEventDispatcher"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.IBitmapDrawable" params="" file="/home/joshua/Development/Haxe/nme/native/display/IBitmapDrawable.hx" interface="1"><nmeDrawToSurface public="1" set="method">
	<f a="inSurface:matrix:colorTransform:blendMode:clipRect:smoothing">
		<d/>
		<c path="native.geom.Matrix"/>
		<c path="native.geom.ColorTransform"/>
		<c path="String"/>
		<c path="native.geom.Rectangle"/>
		<e path="Bool"/>
		<e path="Void"/>
	</f>
	<haxe_doc>@private</haxe_doc>
</nmeDrawToSurface></class>
	<class path="native.Loader" params="" file="/home/joshua/Development/Haxe/nme/native/Loader.hx">
		<moduleInit line="16" static="1"><e path="Bool"/></moduleInit>
		<moduleName line="17" static="1"><c path="String"/></moduleName>
		<findHaxeLib public="1" set="method" line="29" static="1"><f a="inLib">
	<c path="String"/>
	<c path="String"/>
</f></findHaxeLib>
		<load public="1" set="method" line="70" static="1"><f a="func:args">
	<c path="String"/>
	<c path="Int"/>
	<d/>
</f></load>
		<loaderTrace public="1" set="method" line="140" static="1"><f a="inStr">
	<c path="String"/>
	<e path="Void"/>
</f></loaderTrace>
		<sysName set="method" line="156" static="1"><f a=""><a><substr set="null"><f a="">
	<c path="Int"/>
	<a><toLowerCase set="null"><f a=""><c path="String"/></f></toLowerCase></a>
</f></substr></a></f></sysName>
		<tryLoad public="1" set="method" line="169" static="1"><f a="inName:func:args">
	<c path="String"/>
	<c path="String"/>
	<c path="Int"/>
	<d/>
</f></tryLoad>
	</class>
	<class path="sys.io.Process" params="" file="/usr/lib/haxe/std/cpp/_std/sys/io/Process.hx">
		<_run line="126" static="1"><f a=":">
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
	<unknown/>
</f></_run>
		<_exit line="127" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></_exit>
		<_pid line="128" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></_pid>
		<_close line="129" static="1"><f a="">
	<d/>
	<unknown/>
</f></_close>
		<kill public="1" set="method" line="122"><f a=""><e path="Void"/></f></kill>
		<close public="1" set="method" line="118"><f a=""><e path="Void"/></f></close>
		<exitCode public="1" set="method" line="114"><f a=""><c path="Int"/></f></exitCode>
		<getPid public="1" set="method" line="110"><f a=""><c path="Int"/></f></getPid>
		<stdin public="1" set="null"><c path="haxe.io.Output"/></stdin>
		<stderr public="1" set="null"><c path="haxe.io.Input"/></stderr>
		<stdout public="1" set="null"><c path="haxe.io.Input"/></stdout>
		<p><d/></p>
		<new public="1" set="method" line="103"><f a="cmd:args">
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
	<e path="Void"/>
</f></new>
		<meta><m n=":core_api"/></meta>
	</class>
	<class path="haxe.io.Output" params="" file="/usr/lib/haxe/std/haxe/io/Output.hx">
		<LN2 line="34" static="1"><c path="Float"/></LN2>
		<_float_bytes line="364" static="1"><f a=":">
	<c path="Float"/>
	<e path="Bool"/>
	<t path="haxe.io.BytesData"/>
</f></_float_bytes>
		<_double_bytes line="365" static="1"><f a=":">
	<c path="Float"/>
	<e path="Bool"/>
	<t path="haxe.io.BytesData"/>
</f></_double_bytes>
		<writeString public="1" set="method" line="348"><f a="s">
	<c path="String"/>
	<e path="Void"/>
</f></writeString>
		<writeInput public="1" set="method" line="326"><f a="i:?bufsize">
	<c path="haxe.io.Input"/>
	<c path="Int"/>
	<e path="Void"/>
</f></writeInput>
		<prepare public="1" set="method" line="323">
			<f a="nbytes">
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Inform that we are about to write at least a specified number of bytes.
		The underlying implementation can allocate proper working space depending
		on this information, or simply ignore it. This is not a mandatory call
		but a tip and is only used in some specific cases.</haxe_doc>
		</prepare>
		<writeInt32 public="1" set="method" line="303"><f a="x">
	<c path="haxe.Int32"/>
	<e path="Void"/>
</f></writeInt32>
		<writeUInt30 public="1" set="method" line="288"><f a="x">
	<c path="Int"/>
	<e path="Void"/>
</f></writeUInt30>
		<writeInt31 public="1" set="method" line="271"><f a="x">
	<c path="Int"/>
	<e path="Void"/>
</f></writeInt31>
		<writeUInt24 public="1" set="method" line="258"><f a="x">
	<c path="Int"/>
	<e path="Void"/>
</f></writeUInt24>
		<writeInt24 public="1" set="method" line="253"><f a="x">
	<c path="Int"/>
	<e path="Void"/>
</f></writeInt24>
		<writeUInt16 public="1" set="method" line="242"><f a="x">
	<c path="Int"/>
	<e path="Void"/>
</f></writeUInt16>
		<writeInt16 public="1" set="method" line="237"><f a="x">
	<c path="Int"/>
	<e path="Void"/>
</f></writeInt16>
		<writeInt8 public="1" set="method" line="231"><f a="x">
	<c path="Int"/>
	<e path="Void"/>
</f></writeInt8>
		<writeDouble public="1" set="method" line="154"><f a="x">
	<c path="Float"/>
	<e path="Void"/>
</f></writeDouble>
		<writeFloat public="1" set="method" line="100"><f a="x">
	<c path="Float"/>
	<e path="Void"/>
</f></writeFloat>
		<writeFullBytes public="1" set="method" line="92"><f a="s:pos:len">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></writeFullBytes>
		<write public="1" set="method" line="81"><f a="s">
	<c path="haxe.io.Bytes"/>
	<e path="Void"/>
</f></write>
		<setEndian set="method" line="74"><f a="b">
	<e path="Bool"/>
	<e path="Bool"/>
</f></setEndian>
		<close public="1" set="method" line="71"><f a=""><e path="Void"/></f></close>
		<flush public="1" set="method" line="68"><f a=""><e path="Void"/></f></flush>
		<writeBytes public="1" set="method" line="45"><f a="s:pos:len">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></writeBytes>
		<writeByte public="1" set="method" line="41"><f a="c">
	<c path="Int"/>
	<e path="Void"/>
</f></writeByte>
		<bigEndian public="1" set="setEndian"><e path="Bool"/></bigEndian>
		<haxe_doc>An Output is an abstract write. A specific output implementation will only
	have to override the [writeChar] and maybe the [write], [flush] and [close]
	methods. See [File.write] and [String.write] for two ways of creating an
	Output.</haxe_doc>
	</class>
	<class path="sys.io._Process.Stdin" params="" file="/usr/lib/haxe/std/cpp/_std/sys/io/Process.hx" private="1" module="sys.io.Process">
		<extends path="haxe.io.Output"/>
		<_stdin_write line="56" static="1"><f a=":::">
	<d/>
	<t path="haxe.io.BytesData"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></_stdin_write>
		<_stdin_close line="57" static="1"><f a="">
	<d/>
	<unknown/>
</f></_stdin_close>
		<writeBytes public="1" set="method" line="47" override="1"><f a="buf:pos:len">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></writeBytes>
		<writeByte public="1" set="method" line="42" override="1"><f a="c">
	<c path="Int"/>
	<e path="Void"/>
</f></writeByte>
		<close public="1" set="method" line="37" override="1"><f a=""><e path="Void"/></f></close>
		<buf><c path="haxe.io.Bytes"/></buf>
		<p><d/></p>
		<new public="1" set="method" line="32"><f a="p">
	<unknown/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="haxe.io.Bytes" params="" file="/usr/lib/haxe/std/haxe/io/Bytes.hx">
		<alloc public="1" set="method" line="259" static="1"><f a="length">
	<c path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></alloc>
		<ofString public="1" set="method" line="291" static="1"><f a="s">
	<c path="String"/>
	<c path="haxe.io.Bytes"/>
</f></ofString>
		<ofData public="1" set="method" line="340" static="1"><f a="b">
	<t path="haxe.io.BytesData"/>
	<c path="haxe.io.Bytes"/>
</f></ofData>
		<getData public="1" get="inline" set="null" line="255"><f a=""><t path="haxe.io.BytesData"/></f></getData>
		<toHex public="1" set="method" line="241"><f a=""><c path="String"/></f></toHex>
		<toString public="1" set="method" line="218"><f a=""><c path="String"/></f></toString>
		<readString public="1" set="method" line="168"><f a="pos:len">
	<c path="Int"/>
	<c path="Int"/>
	<c path="String"/>
</f></readString>
		<compare public="1" set="method" line="130"><f a="other">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
</f></compare>
		<sub public="1" set="method" line="103"><f a="pos:len">
	<c path="Int"/>
	<c path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></sub>
		<blit public="1" set="method" line="71"><f a="pos:src:srcpos:len">
	<c path="Int"/>
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></blit>
		<set public="1" get="inline" set="null" line="53"><f a="pos:v">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></set>
		<get public="1" get="inline" set="null" line="37"><f a="pos">
	<c path="Int"/>
	<c path="Int"/>
</f></get>
		<b><t path="haxe.io.BytesData"/></b>
		<length public="1" set="null"><c path="Int"/></length>
		<new set="method" line="32"><f a="length:b">
	<c path="Int"/>
	<t path="haxe.io.BytesData"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="haxe.io.Input" params="" file="/usr/lib/haxe/std/haxe/io/Input.hx">
		<_float_of_bytes line="425" static="1"><f a=":">
	<t path="haxe.io.BytesData"/>
	<e path="Bool"/>
	<c path="Float"/>
</f></_float_of_bytes>
		<_double_of_bytes line="426" static="1"><f a=":">
	<t path="haxe.io.BytesData"/>
	<e path="Bool"/>
	<c path="Float"/>
</f></_double_of_bytes>
		<readString public="1" set="method" line="408"><f a="len">
	<c path="Int"/>
	<c path="String"/>
</f></readString>
		<readInt32 public="1" set="method" line="393"><f a=""><c path="haxe.Int32"/></f></readInt32>
		<readUInt30 public="1" set="method" line="384"><f a=""><c path="Int"/></f></readUInt30>
		<readInt31 public="1" set="method" line="367"><f a=""><c path="Int"/></f></readInt31>
		<readUInt24 public="1" set="method" line="360"><f a=""><c path="Int"/></f></readUInt24>
		<readInt24 public="1" set="method" line="350"><f a=""><c path="Int"/></f></readInt24>
		<readUInt16 public="1" set="method" line="344"><f a=""><c path="Int"/></f></readUInt16>
		<readInt16 public="1" set="method" line="335"><f a=""><c path="Int"/></f></readInt16>
		<readInt8 public="1" set="method" line="328"><f a=""><c path="Int"/></f></readInt8>
		<readDouble public="1" set="method" line="255"><f a=""><c path="Float"/></f></readDouble>
		<readFloat public="1" set="method" line="201"><f a=""><c path="Float"/></f></readFloat>
		<readLine public="1" set="method" line="184"><f a=""><c path="String"/></f></readLine>
		<readUntil public="1" set="method" line="176"><f a="end">
	<c path="Int"/>
	<c path="String"/>
</f></readUntil>
		<read public="1" set="method" line="164"><f a="nbytes">
	<c path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></read>
		<readFullBytes public="1" set="method" line="156"><f a="s:pos:len">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></readFullBytes>
		<readAll public="1" set="method" line="80"><f a="?bufsize">
	<c path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></readAll>
		<setEndian set="method" line="73"><f a="b">
	<e path="Bool"/>
	<e path="Bool"/>
</f></setEndian>
		<close public="1" set="method" line="70"><f a=""><e path="Void"/></f></close>
		<readBytes public="1" set="method" line="49"><f a="s:pos:len">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></readBytes>
		<readByte public="1" set="method" line="40"><f a=""><c path="Int"/></f></readByte>
		<bigEndian public="1" set="setEndian"><e path="Bool"/></bigEndian>
		<haxe_doc>An Input is an abstract reader. See other classes in the [haxe.io] package
	for several possible implementations.</haxe_doc>
	</class>
	<class path="sys.io._Process.Stdout" params="" file="/usr/lib/haxe/std/cpp/_std/sys/io/Process.hx" private="1" module="sys.io.Process">
		<extends path="haxe.io.Input"/>
		<_stdout_read line="90" static="1"><f a=":::">
	<d/>
	<t path="haxe.io.BytesData"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></_stdout_read>
		<_stderr_read line="91" static="1"><f a=":::">
	<d/>
	<t path="haxe.io.BytesData"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></_stderr_read>
		<readBytes public="1" set="method" line="79" override="1"><f a="str:pos:len">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></readBytes>
		<readByte public="1" set="method" line="73" override="1"><f a=""><c path="Int"/></f></readByte>
		<buf><c path="haxe.io.Bytes"/></buf>
		<out><e path="Bool"/></out>
		<p><d/></p>
		<new public="1" set="method" line="67"><f a="p:out">
	<unknown/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.DisplayObject" params="" file="/home/joshua/Development/Haxe/nme/native/display/DisplayObject.hx">
		<extends path="native.events.EventDispatcher"/>
		<implements path="native.display.IBitmapDrawable"/>
		<nme_create_display_object line="708" static="1"><f a=""><unknown/></f></nme_create_display_object>
		<nme_display_object_get_graphics line="709" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_display_object_get_graphics>
		<nme_display_object_draw_to_surface line="710" static="1"><f a=":::::">
	<d/>
	<d/>
	<c path="native.geom.Matrix"/>
	<c path="native.geom.ColorTransform"/>
	<c path="String"/>
	<c path="native.geom.Rectangle"/>
	<unknown/>
</f></nme_display_object_draw_to_surface>
		<nme_display_object_get_id line="711" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_display_object_get_id>
		<nme_display_object_get_x line="712" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_display_object_get_x>
		<nme_display_object_set_x line="713" static="1"><f a=":">
	<d/>
	<c path="Float"/>
	<unknown/>
</f></nme_display_object_set_x>
		<nme_display_object_get_y line="714" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_display_object_get_y>
		<nme_display_object_set_y line="715" static="1"><f a=":">
	<d/>
	<c path="Float"/>
	<unknown/>
</f></nme_display_object_set_y>
		<nme_display_object_get_scale_x line="716" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_display_object_get_scale_x>
		<nme_display_object_set_scale_x line="717" static="1"><f a=":">
	<d/>
	<c path="Float"/>
	<unknown/>
</f></nme_display_object_set_scale_x>
		<nme_display_object_get_scale_y line="718" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_display_object_get_scale_y>
		<nme_display_object_set_scale_y line="719" static="1"><f a=":">
	<d/>
	<c path="Float"/>
	<unknown/>
</f></nme_display_object_set_scale_y>
		<nme_display_object_get_mouse_x line="720" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_display_object_get_mouse_x>
		<nme_display_object_get_mouse_y line="721" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_display_object_get_mouse_y>
		<nme_display_object_get_rotation line="722" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_display_object_get_rotation>
		<nme_display_object_set_rotation line="723" static="1"><f a=":">
	<d/>
	<c path="Float"/>
	<unknown/>
</f></nme_display_object_set_rotation>
		<nme_display_object_get_bg line="724" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_display_object_get_bg>
		<nme_display_object_set_bg line="725" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_display_object_set_bg>
		<nme_display_object_get_name line="726" static="1"><f a="">
	<d/>
	<c path="String"/>
</f></nme_display_object_get_name>
		<nme_display_object_set_name line="727" static="1"><f a=":">
	<d/>
	<c path="String"/>
	<unknown/>
</f></nme_display_object_set_name>
		<nme_display_object_get_width line="728" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_display_object_get_width>
		<nme_display_object_set_width line="729" static="1"><f a=":">
	<d/>
	<c path="Float"/>
	<unknown/>
</f></nme_display_object_set_width>
		<nme_display_object_get_height line="730" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_display_object_get_height>
		<nme_display_object_set_height line="731" static="1"><f a=":">
	<d/>
	<c path="Float"/>
	<unknown/>
</f></nme_display_object_set_height>
		<nme_display_object_get_alpha line="732" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_display_object_get_alpha>
		<nme_display_object_set_alpha line="733" static="1"><f a=":">
	<d/>
	<c path="Float"/>
	<unknown/>
</f></nme_display_object_set_alpha>
		<nme_display_object_get_blend_mode line="734" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_display_object_get_blend_mode>
		<nme_display_object_set_blend_mode line="735" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_display_object_set_blend_mode>
		<nme_display_object_get_cache_as_bitmap line="736" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_display_object_get_cache_as_bitmap>
		<nme_display_object_set_cache_as_bitmap line="737" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_display_object_set_cache_as_bitmap>
		<nme_display_object_get_pedantic_bitmap_caching line="738" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_display_object_get_pedantic_bitmap_caching>
		<nme_display_object_set_pedantic_bitmap_caching line="739" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_display_object_set_pedantic_bitmap_caching>
		<nme_display_object_get_pixel_snapping line="740" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_display_object_get_pixel_snapping>
		<nme_display_object_set_pixel_snapping line="741" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_display_object_set_pixel_snapping>
		<nme_display_object_get_visible line="742" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_display_object_get_visible>
		<nme_display_object_set_visible line="743" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_display_object_set_visible>
		<nme_display_object_set_filters line="744" static="1"><f a=":">
	<d/>
	<c path="Array"><d/></c>
	<unknown/>
</f></nme_display_object_set_filters>
		<nme_display_object_global_to_local line="745" static="1"><f a=":">
	<d/>
	<c path="native.geom.Point"/>
	<unknown/>
</f></nme_display_object_global_to_local>
		<nme_display_object_local_to_global line="746" static="1"><f a=":">
	<d/>
	<c path="native.geom.Point"/>
	<unknown/>
</f></nme_display_object_local_to_global>
		<nme_display_object_set_scale9_grid line="747" static="1"><f a=":">
	<d/>
	<c path="native.geom.Rectangle"/>
	<unknown/>
</f></nme_display_object_set_scale9_grid>
		<nme_display_object_set_scroll_rect line="748" static="1"><f a=":">
	<d/>
	<c path="native.geom.Rectangle"/>
	<unknown/>
</f></nme_display_object_set_scroll_rect>
		<nme_display_object_set_mask line="749" static="1"><f a=":">
	<d/>
	<t path="Null"><unknown/></t>
	<unknown/>
</f></nme_display_object_set_mask>
		<nme_display_object_set_matrix line="750" static="1"><f a=":">
	<d/>
	<c path="native.geom.Matrix"/>
	<unknown/>
</f></nme_display_object_set_matrix>
		<nme_display_object_get_matrix line="751" static="1"><f a="::">
	<d/>
	<c path="native.geom.Matrix"/>
	<e path="Bool"/>
	<unknown/>
</f></nme_display_object_get_matrix>
		<nme_display_object_get_color_transform line="752" static="1"><f a="::">
	<d/>
	<c path="native.geom.ColorTransform"/>
	<e path="Bool"/>
	<unknown/>
</f></nme_display_object_get_color_transform>
		<nme_display_object_set_color_transform line="753" static="1"><f a=":">
	<d/>
	<c path="native.geom.ColorTransform"/>
	<unknown/>
</f></nme_display_object_set_color_transform>
		<nme_display_object_get_pixel_bounds line="754" static="1"><f a=":">
	<d/>
	<c path="native.geom.Rectangle"/>
	<unknown/>
</f></nme_display_object_get_pixel_bounds>
		<nme_display_object_get_bounds line="755" static="1"><f a=":::">
	<d/>
	<d/>
	<c path="native.geom.Rectangle"/>
	<e path="Bool"/>
	<unknown/>
</f></nme_display_object_get_bounds>
		<nme_display_object_hit_test_point line="756" static="1"><f a="::::">
	<d/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
</f></nme_display_object_hit_test_point>
		<set_y set="method" line="693"><f a="inVal">
	<c path="Float"/>
	<c path="Float"/>
</f></set_y>
		<get_y set="method" line="692"><f a=""><c path="Float"/></f></get_y>
		<set_x set="method" line="684"><f a="inVal">
	<c path="Float"/>
	<c path="Float"/>
</f></set_x>
		<get_x set="method" line="683"><f a=""><c path="Float"/></f></get_x>
		<set_width set="method" line="675"><f a="inVal">
	<c path="Float"/>
	<c path="Float"/>
</f></set_width>
		<get_width set="method" line="674"><f a=""><c path="Float"/></f></get_width>
		<set_visible set="method" line="666"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_visible>
		<get_visible set="method" line="665"><f a=""><e path="Bool"/></f></get_visible>
		<set_transform set="method" line="656"><f a="inTransform">
	<c path="native.geom.Transform"/>
	<c path="native.geom.Transform"/>
</f></set_transform>
		<get_transform set="method" line="655"><f a=""><c path="native.geom.Transform"/></f></get_transform>
		<get_stage set="method" line="645"><f a=""><c path="native.display.Stage"/></f></get_stage>
		<set_scrollRect set="method" line="636"><f a="inRect">
	<c path="native.geom.Rectangle"/>
	<c path="native.geom.Rectangle"/>
</f></set_scrollRect>
		<get_scrollRect set="method" line="635"><f a=""><c path="native.geom.Rectangle"/></f></get_scrollRect>
		<set_scaleY set="method" line="627"><f a="inVal">
	<c path="Float"/>
	<c path="Float"/>
</f></set_scaleY>
		<get_scaleY set="method" line="626"><f a=""><c path="Float"/></f></get_scaleY>
		<set_scaleX set="method" line="618"><f a="inVal">
	<c path="Float"/>
	<c path="Float"/>
</f></set_scaleX>
		<get_scaleX set="method" line="617"><f a=""><c path="Float"/></f></get_scaleX>
		<set_scale9Grid set="method" line="608"><f a="inRect">
	<c path="native.geom.Rectangle"/>
	<c path="native.geom.Rectangle"/>
</f></set_scale9Grid>
		<get_scale9Grid set="method" line="607"><f a=""><c path="native.geom.Rectangle"/></f></get_scale9Grid>
		<set_rotation set="method" line="599"><f a="inVal">
	<c path="Float"/>
	<c path="Float"/>
</f></set_rotation>
		<get_rotation set="method" line="598"><f a=""><c path="Float"/></f></get_rotation>
		<get_parent set="method" line="595"><f a=""><c path="native.display.DisplayObjectContainer"/></f></get_parent>
		<set_name set="method" line="587"><f a="inVal">
	<c path="String"/>
	<c path="String"/>
</f></set_name>
		<get_name set="method" line="586"><f a=""><c path="String"/></f></get_name>
		<get_mouseY set="method" line="583"><f a=""><c path="Float"/></f></get_mouseY>
		<get_mouseX set="method" line="582"><f a=""><c path="Float"/></f></get_mouseX>
		<set_mask set="method" line="573"><f a="inObject">
	<c path="native.display.DisplayObject"/>
	<c path="native.display.DisplayObject"/>
</f></set_mask>
		<set_height set="method" line="565"><f a="inVal">
	<c path="Float"/>
	<c path="Float"/>
</f></set_height>
		<get_height set="method" line="564"><f a=""><c path="Float"/></f></get_height>
		<get_graphics set="method" line="554"><f a=""><c path="native.display.Graphics"/></f></get_graphics>
		<set_filters set="method" line="532"><f a="inFilters">
	<c path="Array"><d/></c>
	<c path="Array"><d/></c>
</f></set_filters>
		<get_filters set="method" line="518"><f a=""><c path="Array"><d/></c></f></get_filters>
		<set_pixelSnapping set="method" line="501"><f a="inVal">
	<e path="native.display.PixelSnapping"/>
	<e path="native.display.PixelSnapping"/>
</f></set_pixelSnapping>
		<get_pixelSnapping set="method" line="493"><f a=""><e path="native.display.PixelSnapping"/></f></get_pixelSnapping>
		<set_pedanticBitmapCaching set="method" line="485"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_pedanticBitmapCaching>
		<get_pedanticBitmapCaching set="method" line="484"><f a=""><e path="Bool"/></f></get_pedanticBitmapCaching>
		<set_cacheAsBitmap set="method" line="477"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_cacheAsBitmap>
		<get_cacheAsBitmap set="method" line="476"><f a=""><e path="Bool"/></f></get_cacheAsBitmap>
		<set_blendMode set="method" line="468"><f a="inMode">
	<e path="native.display.BlendMode"/>
	<e path="native.display.BlendMode"/>
</f></set_blendMode>
		<get_blendMode set="method" line="460"><f a=""><e path="native.display.BlendMode"/></f></get_blendMode>
		<set_opaqueBackground set="method" line="448"><f a="inBG">
	<t path="Null"><c path="Int"/></t>
	<t path="Null"><c path="Int"/></t>
</f></set_opaqueBackground>
		<get_opaqueBackground set="method" line="437"><f a=""><t path="Null"><c path="Int"/></t></f></get_opaqueBackground>
		<set_alpha set="method" line="429"><f a="inAlpha">
	<c path="Float"/>
	<c path="Float"/>
</f></set_alpha>
		<get_alpha set="method" line="428"><f a=""><c path="Float"/></f></get_alpha>
		<toString public="1" set="method" line="414" override="1"><f a=""><c path="String"/></f></toString>
		<nmeSetParent public="1" set="method" line="384">
			<f a="inParent">
				<c path="native.display.DisplayObjectContainer"/>
				<c path="native.display.DisplayObjectContainer"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeSetParent>
		<nmeSetMatrix public="1" set="method" line="377">
			<f a="inMatrix">
				<c path="native.geom.Matrix"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeSetMatrix>
		<nmeSetColorTransform public="1" set="method" line="370">
			<f a="inTrans">
				<c path="native.geom.ColorTransform"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeSetColorTransform>
		<nmeOnRemoved set="method" line="349">
			<f a="inObj:inWasOnStage">
				<c path="native.display.DisplayObject"/>
				<e path="Bool"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeOnRemoved>
		<nmeOnAdded set="method" line="328">
			<f a="inObj:inIsOnStage">
				<c path="native.display.DisplayObject"/>
				<e path="Bool"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeOnAdded>
		<nmeGetPixelBounds public="1" set="method" line="319">
			<f a=""><c path="native.geom.Rectangle"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeGetPixelBounds>
		<nmeGetObjectsUnderPoint public="1" set="method" line="311">
			<f a="point:result">
				<c path="native.geom.Point"/>
				<c path="Array"><c path="native.display.DisplayObject"/></c>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeGetObjectsUnderPoint>
		<nmeGetMatrix public="1" set="method" line="302">
			<f a=""><c path="native.geom.Matrix"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeGetMatrix>
		<nmeGetInteractiveObjectStack public="1" set="method" line="289">
			<f a="outStack">
				<c path="Array"><c path="native.display.InteractiveObject"/></c>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeGetInteractiveObjectStack>
		<nmeGetConcatenatedMatrix public="1" set="method" line="280">
			<f a=""><c path="native.geom.Matrix"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeGetConcatenatedMatrix>
		<nmeGetConcatenatedColorTransform public="1" set="method" line="271">
			<f a=""><c path="native.geom.ColorTransform"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeGetConcatenatedColorTransform>
		<nmeGetColorTransform public="1" set="method" line="262">
			<f a=""><c path="native.geom.ColorTransform"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeGetColorTransform>
		<nmeFireEvent set="method" line="206">
			<f a="inEvt">
				<c path="native.events.Event"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeFireEvent>
		<nmeFindByID set="method" line="197">
			<f a="inID">
				<c path="Int"/>
				<c path="native.display.DisplayObject"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeFindByID>
		<nmeDrawToSurface public="1" set="method" line="189">
			<f a="inSurface:matrix:colorTransform:blendMode:clipRect:smoothing">
				<d/>
				<c path="native.geom.Matrix"/>
				<c path="native.geom.ColorTransform"/>
				<c path="String"/>
				<c path="native.geom.Rectangle"/>
				<e path="Bool"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeDrawToSurface>
		<nmeDispatchEvent public="1" set="method" line="175">
			<f a="inEvt">
				<c path="native.events.Event"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeDispatchEvent>
		<nmeBroadcast public="1" set="method" line="168">
			<f a="inEvt">
				<c path="native.events.Event"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeBroadcast>
		<nmeAsInteractiveObject set="method" line="161">
			<f a=""><c path="native.display.InteractiveObject"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeAsInteractiveObject>
		<localToGlobal public="1" set="method" line="152"><f a="inLocal">
	<c path="native.geom.Point"/>
	<c path="native.geom.Point"/>
</f></localToGlobal>
		<hitTestPoint public="1" set="method" line="145"><f a="x:y:?shapeFlag">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Bool"/>
	<e path="Bool"/>
</f></hitTestPoint>
		<hitTestObject public="1" set="method" line="118"><f a="object">
	<c path="native.display.DisplayObject"/>
	<e path="Bool"/>
</f></hitTestObject>
		<globalToLocal public="1" set="method" line="109"><f a="inGlobal">
	<c path="native.geom.Point"/>
	<c path="native.geom.Point"/>
</f></globalToLocal>
		<getRect public="1" set="method" line="100"><f a="targetCoordinateSpace">
	<c path="native.display.DisplayObject"/>
	<c path="native.geom.Rectangle"/>
</f></getRect>
		<getBounds public="1" set="method" line="91"><f a="targetCoordinateSpace">
	<c path="native.display.DisplayObject"/>
	<c path="native.geom.Rectangle"/>
</f></getBounds>
		<dispatchEvent public="1" set="method" line="73" override="1"><f a="event">
	<c path="native.events.Event"/>
	<e path="Bool"/>
</f></dispatchEvent>
		<nmeScrollRect>
			<c path="native.geom.Rectangle"/>
			<haxe_doc>@private</haxe_doc>
		</nmeScrollRect>
		<nmeScale9Grid>
			<c path="native.geom.Rectangle"/>
			<haxe_doc>@private</haxe_doc>
		</nmeScale9Grid>
		<nmeParent>
			<c path="native.display.DisplayObjectContainer"/>
			<haxe_doc>@private</haxe_doc>
		</nmeParent>
		<nmeID>
			<c path="Int"/>
			<haxe_doc>@private</haxe_doc>
		</nmeID>
		<nmeGraphicsCache>
			<c path="native.display.Graphics"/>
			<haxe_doc>@private</haxe_doc>
		</nmeGraphicsCache>
		<nmeFilters>
			<c path="Array"><d/></c>
			<haxe_doc>@private</haxe_doc>
		</nmeFilters>
		<nmeHandle public="1">
			<d/>
			<haxe_doc>@private</haxe_doc>
		</nmeHandle>
		<y public="1" get="get_y" set="set_y"><c path="Float"/></y>
		<x public="1" get="get_x" set="set_x"><c path="Float"/></x>
		<width public="1" get="get_width" set="set_width"><c path="Float"/></width>
		<visible public="1" get="get_visible" set="set_visible"><e path="Bool"/></visible>
		<transform public="1" get="get_transform" set="set_transform"><c path="native.geom.Transform"/></transform>
		<stage public="1" get="get_stage" set="null"><c path="native.display.Stage"/></stage>
		<scrollRect public="1" get="get_scrollRect" set="set_scrollRect"><c path="native.geom.Rectangle"/></scrollRect>
		<scaleY public="1" get="get_scaleY" set="set_scaleY"><c path="Float"/></scaleY>
		<scaleX public="1" get="get_scaleX" set="set_scaleX"><c path="Float"/></scaleX>
		<scale9Grid public="1" get="get_scale9Grid" set="set_scale9Grid"><c path="native.geom.Rectangle"/></scale9Grid>
		<rotation public="1" get="get_rotation" set="set_rotation"><c path="Float"/></rotation>
		<parent public="1" get="get_parent" set="null"><c path="native.display.DisplayObjectContainer"/></parent>
		<opaqueBackground public="1" get="get_opaqueBackground" set="set_opaqueBackground"><t path="Null"><c path="Int"/></t></opaqueBackground>
		<name public="1" get="get_name" set="set_name"><c path="String"/></name>
		<mouseY public="1" get="get_mouseY" set="null"><c path="Float"/></mouseY>
		<mouseX public="1" get="get_mouseX" set="null"><c path="Float"/></mouseX>
		<mask public="1" set="set_mask"><c path="native.display.DisplayObject"/></mask>
		<height public="1" get="get_height" set="set_height"><c path="Float"/></height>
		<graphics public="1" get="get_graphics" set="null"><c path="native.display.Graphics"/></graphics>
		<filters public="1" get="get_filters" set="set_filters"><c path="Array"><d/></c></filters>
		<pixelSnapping public="1" get="get_pixelSnapping" set="set_pixelSnapping"><e path="native.display.PixelSnapping"/></pixelSnapping>
		<pedanticBitmapCaching public="1" get="get_pedanticBitmapCaching" set="set_pedanticBitmapCaching"><e path="Bool"/></pedanticBitmapCaching>
		<cacheAsBitmap public="1" get="get_cacheAsBitmap" set="set_cacheAsBitmap"><e path="Bool"/></cacheAsBitmap>
		<blendMode public="1" get="get_blendMode" set="set_blendMode"><e path="native.display.BlendMode"/></blendMode>
		<alpha public="1" get="get_alpha" set="set_alpha"><c path="Float"/></alpha>
		<new public="1" set="method" line="61"><f a="inHandle:inType">
	<d/>
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.InteractiveObject" params="" file="/home/joshua/Development/Haxe/nme/native/display/InteractiveObject.hx">
		<extends path="native.display.DisplayObject"/>
		<nme_display_object_set_mouse_enabled line="97" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_display_object_set_mouse_enabled>
		<nme_display_object_set_needs_soft_keyboard line="98" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_display_object_set_needs_soft_keyboard>
		<nme_display_object_get_needs_soft_keyboard line="99" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_display_object_get_needs_soft_keyboard>
		<nme_display_object_set_moves_for_soft_keyboard line="100" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_display_object_set_moves_for_soft_keyboard>
		<nme_display_object_get_moves_for_soft_keyboard line="101" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_display_object_get_moves_for_soft_keyboard>
		<nme_display_object_request_soft_keyboard line="102" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_display_object_request_soft_keyboard>
		<get_needsSoftKeyboard set="method" line="83"><f a=""><e path="Bool"/></f></get_needsSoftKeyboard>
		<set_needsSoftKeyboard set="method" line="75"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_needsSoftKeyboard>
		<get_moveForSoftKeyboard set="method" line="68"><f a=""><e path="Bool"/></f></get_moveForSoftKeyboard>
		<set_moveForSoftKeyboard set="method" line="60"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_moveForSoftKeyboard>
		<set_mouseEnabled set="method" line="51"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_mouseEnabled>
		<get_mouseEnabled set="method" line="50"><f a=""><e path="Bool"/></f></get_mouseEnabled>
		<requestSoftKeyboard public="1" set="method" line="36"><f a=""><e path="Bool"/></f></requestSoftKeyboard>
		<nmeAsInteractiveObject set="method" line="29" override="1">
			<f a=""><c path="native.display.InteractiveObject"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeAsInteractiveObject>
		<nmeMouseEnabled>
			<e path="Bool"/>
			<haxe_doc>@private</haxe_doc>
		</nmeMouseEnabled>
		<needsSoftKeyboard public="1" get="get_needsSoftKeyboard" set="set_needsSoftKeyboard"><e path="Bool"/></needsSoftKeyboard>
		<moveForSoftKeyboard public="1" get="get_moveForSoftKeyboard" set="set_moveForSoftKeyboard"><e path="Bool"/></moveForSoftKeyboard>
		<mouseEnabled public="1" get="get_mouseEnabled" set="set_mouseEnabled"><e path="Bool"/></mouseEnabled>
		<doubleClickEnabled public="1"><e path="Bool"/></doubleClickEnabled>
		<new public="1" set="method" line="19"><f a="inHandle:inType">
	<d/>
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.DisplayObjectContainer" params="" file="/home/joshua/Development/Haxe/nme/native/display/DisplayObjectContainer.hx">
		<extends path="native.display.InteractiveObject"/>
		<nme_create_display_object_container line="408" static="1"><f a=""><unknown/></f></nme_create_display_object_container>
		<nme_doc_add_child line="409" static="1"><f a=":">
	<d/>
	<d/>
	<unknown/>
</f></nme_doc_add_child>
		<nme_doc_remove_child line="410" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_doc_remove_child>
		<nme_doc_set_child_index line="411" static="1"><f a="::">
	<d/>
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_doc_set_child_index>
		<nme_doc_get_mouse_children line="412" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_doc_get_mouse_children>
		<nme_doc_set_mouse_children line="413" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_doc_set_mouse_children>
		<nme_doc_swap_children line="414" static="1"><f a="::">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_doc_swap_children>
		<set_tabChildren set="method" line="398"><f a="inValue">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_tabChildren>
		<get_tabChildren set="method" line="397"><f a=""><e path="Bool"/></f></get_tabChildren>
		<get_numChildren set="method" line="396"><f a=""><c path="Int"/></f></get_numChildren>
		<set_mouseChildren set="method" line="388"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_mouseChildren>
		<get_mouseChildren set="method" line="387"><f a=""><e path="Bool"/></f></get_mouseChildren>
		<swapChildrenAt public="1" set="method" line="373"><f a="index1:index2">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></swapChildrenAt>
		<swapChildren public="1" set="method" line="362"><f a="child1:child2">
	<c path="native.display.DisplayObject"/>
	<c path="native.display.DisplayObject"/>
	<e path="Void"/>
</f></swapChildren>
		<setChildIndex public="1" set="method" line="355"><f a="child:index">
	<c path="native.display.DisplayObject"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setChildIndex>
		<removeChildAt public="1" set="method" line="340"><f a="index">
	<c path="Int"/>
	<c path="native.display.DisplayObject"/>
</f></removeChildAt>
		<removeChild public="1" set="method" line="322"><f a="child">
	<c path="native.display.DisplayObject"/>
	<c path="native.display.DisplayObject"/>
</f></removeChild>
		<nmeSwapChildrenAt get="inline" set="null" line="305">
			<f a="index1:index2">
				<c path="Int"/>
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeSwapChildrenAt>
		<nmeSetChildIndex get="inline" set="null" line="235">
			<f a="child:index">
				<c path="native.display.DisplayObject"/>
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeSetChildIndex>
		<nmeRemoveChildFromArray public="1" set="method" line="221">
			<f a="child">
				<c path="native.display.DisplayObject"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeRemoveChildFromArray>
		<nmeOnRemoved set="method" line="211" override="1">
			<f a="inObj:inWasOnStage">
				<c path="native.display.DisplayObject"/>
				<e path="Bool"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeOnRemoved>
		<nmeOnAdded set="method" line="201" override="1">
			<f a="inObj:inIsOnStage">
				<c path="native.display.DisplayObject"/>
				<e path="Bool"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeOnAdded>
		<nmeGetObjectsUnderPoint public="1" set="method" line="191" override="1">
			<f a="point:result">
				<c path="native.geom.Point"/>
				<c path="Array"><c path="native.display.DisplayObject"/></c>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeGetObjectsUnderPoint>
		<nmeGetChildIndex set="method" line="181">
			<f a="child">
				<c path="native.display.DisplayObject"/>
				<c path="Int"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeGetChildIndex>
		<nmeFindByID set="method" line="162" override="1">
			<f a="inID">
				<c path="Int"/>
				<c path="native.display.DisplayObject"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeFindByID>
		<nmeBroadcast public="1" set="method" line="134" override="1">
			<f a="inEvt">
				<c path="native.events.Event"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeBroadcast>
		<nmeAddChild get="inline" set="null" line="111">
			<f a="child">
				<c path="native.display.DisplayObject"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeAddChild>
		<getObjectsUnderPoint public="1" set="method" line="102"><f a="point">
	<c path="native.geom.Point"/>
	<c path="Array"><c path="native.display.DisplayObject"/></c>
</f></getObjectsUnderPoint>
		<getChildIndex public="1" set="method" line="95"><f a="child">
	<c path="native.display.DisplayObject"/>
	<c path="Int"/>
</f></getChildIndex>
		<getChildByName public="1" set="method" line="85"><f a="name">
	<c path="String"/>
	<c path="native.display.DisplayObject"/>
</f></getChildByName>
		<getChildAt public="1" set="method" line="72"><f a="index">
	<c path="Int"/>
	<c path="native.display.DisplayObject"/>
</f></getChildAt>
		<contains public="1" set="method" line="55"><f a="child">
	<c path="native.display.DisplayObject"/>
	<e path="Bool"/>
</f></contains>
		<areInaccessibleObjectsUnderPoint public="1" set="method" line="48"><f a="point">
	<c path="native.geom.Point"/>
	<e path="Bool"/>
</f></areInaccessibleObjectsUnderPoint>
		<addChildAt public="1" set="method" line="39"><f a="child:index">
	<c path="native.display.DisplayObject"/>
	<c path="Int"/>
	<c path="native.display.DisplayObject"/>
</f></addChildAt>
		<addChild public="1" set="method" line="31"><f a="child">
	<c path="native.display.DisplayObject"/>
	<c path="native.display.DisplayObject"/>
</f></addChild>
		<nmeChildren>
			<c path="Array"><c path="native.display.DisplayObject"/></c>
			<haxe_doc>@private</haxe_doc>
		</nmeChildren>
		<tabChildren public="1" get="get_tabChildren" set="set_tabChildren"><e path="Bool"/></tabChildren>
		<numChildren public="1" get="get_numChildren" set="null"><c path="Int"/></numChildren>
		<mouseChildren public="1" get="get_mouseChildren" set="set_mouseChildren"><e path="Bool"/></mouseChildren>
		<new public="1" set="method" line="23"><f a="inHandle:inType">
	<d/>
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.Sprite" params="" file="/home/joshua/Development/Haxe/nme/native/display/Sprite.hx">
		<extends path="native.display.DisplayObjectContainer"/>
		<stopDrag public="1" set="method" line="39"><f a=""><e path="Void"/></f></stopDrag>
		<startDrag public="1" set="method" line="31"><f a="?lockCenter:?bounds">
	<e path="Bool"/>
	<c path="native.geom.Rectangle"/>
	<e path="Void"/>
</f></startDrag>
		<nmeGetType set="method" line="22">
			<f a=""><c path="String"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeGetType>
		<useHandCursor public="1"><e path="Bool"/></useHandCursor>
		<buttonMode public="1"><e path="Bool"/></buttonMode>
		<new public="1" set="method" line="15"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="format.display.MovieClip" params="" file="/home/joshua/Development/Haxe/nme/format/display/MovieClip.hx">
		<extends path="native.display.Sprite"/>
		<unflatten public="1" set="method" line="97"><f a=""><e path="Void"/></f></unflatten>
		<stop public="1" set="method" line="90"><f a=""><e path="Void"/></f></stop>
		<prevFrame public="1" set="method" line="83"><f a=""><e path="Void"/></f></prevFrame>
		<play public="1" set="method" line="76"><f a=""><e path="Void"/></f></play>
		<nextFrame public="1" set="method" line="62"><f a=""><e path="Void"/></f></nextFrame>
		<gotoAndStop public="1" set="method" line="55"><f a="frame:?scene">
	<d/>
	<c path="String"/>
	<e path="Void"/>
</f></gotoAndStop>
		<gotoAndPlay public="1" set="method" line="48"><f a="frame:?scene">
	<d/>
	<c path="String"/>
	<e path="Void"/>
</f></gotoAndPlay>
		<flatten public="1" set="method" line="41"><f a=""><e path="Void"/></f></flatten>
		<trackAsMenu public="1"><e path="Bool"/></trackAsMenu>
		<totalFrames public="1" set="null"><c path="Int"/></totalFrames>
		<framesLoaded public="1" set="null"><c path="Int"/></framesLoaded>
		<enabled public="1"><e path="Bool"/></enabled>
		<currentLabels public="1" set="null"><c path="Array"><c path="format.display.FrameLabel"/></c></currentLabels>
		<currentLabel public="1" set="null"><c path="String"/></currentLabel>
		<currentFrameLabel public="1" set="null"><c path="String"/></currentFrameLabel>
		<currentFrame public="1" set="null"><c path="Int"/></currentFrame>
		<new set="method" line="34"><f a=""><e path="Void"/></f></new>
		<haxe_doc>* Base class for MovieClip-related format libraries
 * 
 * Cannot use flash.display.MovieClip, because it does
 * not allow the addition for frames or frame labels at
 * runtime, asynchronously</haxe_doc>
	</class>
	<class path="haxe.Int32" params="" file="/usr/lib/haxe/std/cpp/_std/haxe/Int32.hx" extern="1">
		<make public="1" set="method" static="1"><f a="a:b">
	<c path="Int"/>
	<c path="Int"/>
	<c path="haxe.Int32"/>
</f></make>
		<ofInt public="1" set="method" static="1"><f a="x">
	<c path="Int"/>
	<c path="haxe.Int32"/>
</f></ofInt>
		<toInt public="1" set="method" static="1"><f a="x">
	<c path="haxe.Int32"/>
	<c path="Int"/>
</f></toInt>
		<add public="1" set="method" static="1"><f a="a:b">
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
</f></add>
		<sub public="1" set="method" static="1"><f a="a:b">
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
</f></sub>
		<mul public="1" set="method" static="1"><f a="a:b">
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
</f></mul>
		<div public="1" set="method" static="1"><f a="a:b">
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
</f></div>
		<mod public="1" set="method" static="1"><f a="a:b">
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
</f></mod>
		<shl public="1" set="method" static="1"><f a="a:b">
	<c path="haxe.Int32"/>
	<c path="Int"/>
	<c path="haxe.Int32"/>
</f></shl>
		<shr public="1" set="method" static="1"><f a="a:b">
	<c path="haxe.Int32"/>
	<c path="Int"/>
	<c path="haxe.Int32"/>
</f></shr>
		<ushr public="1" set="method" static="1"><f a="a:b">
	<c path="haxe.Int32"/>
	<c path="Int"/>
	<c path="haxe.Int32"/>
</f></ushr>
		<and public="1" set="method" static="1"><f a="a:b">
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
</f></and>
		<or public="1" set="method" static="1"><f a="a:b">
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
</f></or>
		<xor public="1" set="method" static="1"><f a="a:b">
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
</f></xor>
		<neg public="1" set="method" static="1"><f a="a">
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
</f></neg>
		<complement public="1" set="method" static="1"><f a="a">
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
</f></complement>
		<compare public="1" set="method" static="1"><f a="a:b">
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
	<c path="Int"/>
</f></compare>
		<isNeg public="1" set="method" static="1"><f a="a">
	<c path="haxe.Int32"/>
	<e path="Bool"/>
</f></isNeg>
		<isZero public="1" set="method" static="1"><f a="a">
	<c path="haxe.Int32"/>
	<e path="Bool"/>
</f></isZero>
		<ucompare public="1" set="method" static="1"><f a="a:b">
	<c path="haxe.Int32"/>
	<c path="haxe.Int32"/>
	<c path="Int"/>
</f></ucompare>
		<toNativeInt public="1" set="method" static="1"><f a="a">
	<c path="haxe.Int32"/>
	<c path="Int"/>
</f></toNativeInt>
		<meta><m n=":native"><e>cpp.CppInt32__</e></m></meta>
	</class>
	<class path="haxe.Log" params="" file="/usr/lib/haxe/std/haxe/Log.hx">
		<trace public="1" set="dynamic" line="29" static="1"><f a="v:?infos">
	<d/>
	<t path="haxe.PosInfos"/>
	<e path="Void"/>
</f></trace>
		<clear public="1" set="dynamic" line="54" static="1"><f a=""><e path="Void"/></f></clear>
	</class>
	<typedef path="haxe.PosInfos" params="" file="/usr/lib/haxe/std/haxe/PosInfos.hx"><a>
	<methodName><c path="String"/></methodName>
	<lineNumber><c path="Int"/></lineNumber>
	<fileName><c path="String"/></fileName>
	<customParams>
		<c path="Array"><d/></c>
		<meta><m n=":optional"/></meta>
	</customParams>
	<className><c path="String"/></className>
</a></typedef>
	<class path="haxe.Serializer" params="" file="/usr/lib/haxe/std/haxe/Serializer.hx">
		<USE_CACHE public="1" line="34" static="1">
			<e path="Bool"/>
			<haxe_doc>If the values you are serializing can contain
		circular references or objects repetitions, you should
		set USE_CACHE to true to prevent infinite loops.</haxe_doc>
		</USE_CACHE>
		<USE_ENUM_INDEX public="1" line="40" static="1">
			<e path="Bool"/>
			<haxe_doc>Use constructor indexes for enums instead of names.
		This is less reliable but more compact.</haxe_doc>
		</USE_ENUM_INDEX>
		<BASE64 line="42" static="1"><c path="String"/></BASE64>
		<run public="1" set="method" line="436" static="1">
			<f a="v">
				<d/>
				<c path="String"/>
			</f>
			<haxe_doc>Serialize a single value and return the string.</haxe_doc>
		</run>
		<serializeException public="1" set="method" line="417"><f a="e">
	<d/>
	<e path="Void"/>
</f></serializeException>
		<serialize public="1" set="method" line="158"><f a="v">
	<d/>
	<e path="Void"/>
</f></serialize>
		<serializeFields set="method" line="150"><f a="v">
	<unknown/>
	<e path="Void"/>
</f></serializeFields>
		<serializeRef set="method" line="113"><f a="v">
	<unknown/>
	<e path="Bool"/>
</f></serializeRef>
		<serializeString set="method" line="94"><f a="s">
	<c path="String"/>
	<e path="Void"/>
</f></serializeString>
		<toString public="1" set="method" line="60"><f a=""><c path="String"/></f></toString>
		<useEnumIndex public="1"><e path="Bool"/></useEnumIndex>
		<useCache public="1"><e path="Bool"/></useCache>
		<scount><c path="Int"/></scount>
		<shash><c path="Hash"><c path="Int"/></c></shash>
		<cache><c path="Array"><d/></c></cache>
		<buf><c path="StringBuf"/></buf>
		<new public="1" set="method" line="51"><f a=""><e path="Void"/></f></new>
	</class>
	<typedef path="haxe.TimerList" params="" file="/home/joshua/Development/Haxe/nme/haxe/Timer.hx" module="haxe.Timer"><c path="Array"><c path="haxe.Timer"/></c></typedef>
	<class path="haxe.Timer" params="" file="/home/joshua/Development/Haxe/nme/haxe/Timer.hx">
		<sRunningTimers line="106" static="1"><t path="haxe.TimerList"/></sRunningTimers>
		<measure public="1" params="T" set="method" line="123" static="1"><f a="f:?pos">
	<f a=""><c path="measure.T"/></f>
	<t path="haxe.PosInfos"/>
	<c path="measure.T"/>
</f></measure>
		<nmeNextWake public="1" set="method" line="154" static="1">
			<f a="limit">
				<c path="Float"/>
				<c path="Float"/>
			</f>
			<haxe_doc>* @private</haxe_doc>
		</nmeNextWake>
		<nmeCheckTimers public="1" set="method" line="196" static="1">
			<f a=""><e path="Void"/></f>
			<haxe_doc>* @private</haxe_doc>
		</nmeCheckTimers>
		<GetMS set="method" line="209" static="1"><f a=""><c path="Float"/></f></GetMS>
		<delay public="1" set="method" line="217" static="1"><f a="f:time">
	<f a=""><e path="Void"/></f>
	<c path="Int"/>
	<c path="haxe.Timer"/>
</f></delay>
		<stamp public="1" set="method" line="231" static="1"><f a=""><c path="Float"/></f></stamp>
		<nme_time_stamp line="238" static="1"><f a=""><c path="Float"/></f></nme_time_stamp>
		<nmeCheck set="method" line="181"><f a="inTime">
	<c path="Float"/>
	<e path="Void"/>
</f></nmeCheck>
		<stop public="1" set="method" line="139"><f a=""><e path="Void"/></f></stop>
		<run public="1" set="dynamic" line="132"><f a=""><e path="Void"/></f></run>
		<mRunning><e path="Bool"/></mRunning>
		<mFireAt><c path="Float"/></mFireAt>
		<mTime><c path="Float"/></mTime>
		<new public="1" set="method" line="113"><f a="time">
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<typedef path="haxe.TypeResolver" params="" file="/usr/lib/haxe/std/haxe/Unserializer.hx" module="haxe.Unserializer"><a>
	<resolveEnum set="method"><f a="name">
	<c path="String"/>
	<c path="Enum"><d/></c>
</f></resolveEnum>
	<resolveClass set="method"><f a="name">
	<c path="String"/>
	<c path="Class"><d/></c>
</f></resolveClass>
</a></typedef>
	<class path="haxe.Unserializer" params="" file="/usr/lib/haxe/std/haxe/Unserializer.hx">
		<DEFAULT_RESOLVER public="1" line="34" static="1"><t path="haxe.TypeResolver"/></DEFAULT_RESOLVER>
		<BASE64 line="36" static="1"><c path="String"/></BASE64>
		<CODES line="39" static="1"><c path="Array"><c path="Int"/></c></CODES>
		<initCodes set="method" line="41" static="1"><f a=""><c path="Array"><c path="Int"/></c></f></initCodes>
		<run public="1" set="method" line="351" static="1">
			<f a="v">
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc>Unserialize a single value and return it.</haxe_doc>
		</run>
		<unserialize public="1" set="method" line="151"><f a=""><d/></f></unserialize>
		<unserializeEnum set="method" line="139"><f a="edecl:tag">
	<c path="Enum"><unknown/></c>
	<c path="String"/>
	<unknown/>
</f></unserializeEnum>
		<unserializeObject set="method" line="124"><f a="o">
	<a/>
	<e path="Void"/>
</f></unserializeObject>
		<readDigits set="method" line="99"><f a=""><c path="Int"/></f></readDigits>
		<get get="inline" set="null" line="95"><f a="p">
	<c path="Int"/>
	<c path="Int"/>
</f></get>
		<getResolver public="1" set="method" line="91"><f a=""><t path="haxe.TypeResolver"/></f></getResolver>
		<setResolver public="1" set="method" line="81"><f a="r">
	<t path="haxe.TypeResolver"/>
	<e path="Void"/>
</f></setResolver>
		<resolver><t path="haxe.TypeResolver"/></resolver>
		<scache><c path="Array"><c path="String"/></c></scache>
		<cache><c path="Array"><d/></c></cache>
		<length><c path="Int"/></length>
		<pos><c path="Int"/></pos>
		<buf><c path="String"/></buf>
		<new public="1" set="method" line="64"><f a="buf">
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="haxe.io.BytesBuffer" params="" file="/usr/lib/haxe/std/haxe/io/BytesBuffer.hx">
		<getBytes public="1" set="method" line="126">
			<f a=""><c path="haxe.io.Bytes"/></f>
			<haxe_doc>Returns either a copy or a reference of the current bytes.
		Once called, the buffer can no longer be used.</haxe_doc>
		</getBytes>
		<addBytes public="1" get="inline" set="null" line="100"><f a="src:pos:len">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></addBytes>
		<add public="1" get="inline" set="null" line="81"><f a="src">
	<c path="haxe.io.Bytes"/>
	<e path="Void"/>
</f></add>
		<addByte public="1" get="inline" set="null" line="63"><f a="byte">
	<c path="Int"/>
	<e path="Void"/>
</f></addByte>
		<b><t path="haxe.io.BytesData"/></b>
		<new public="1" set="method" line="45"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="haxe.io.Unsigned_char__" params="" file="/usr/lib/haxe/std/haxe/io/BytesData.hx" module="haxe.io.BytesData" extern="1"/>
	<typedef path="haxe.io.BytesData" params="" file="/usr/lib/haxe/std/haxe/io/BytesData.hx"><c path="Array"><c path="haxe.io.Unsigned_char__"/></c></typedef>
	<class path="haxe.io.Eof" params="" file="/usr/lib/haxe/std/haxe/io/Eof.hx">
		<toString set="method" line="33"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="31"><f a=""><e path="Void"/></f></new>
		<haxe_doc>This exception is raised when reading while data is no longer available in the [Input].</haxe_doc>
	</class>
	<enum path="haxe.io.Error" params="" file="/usr/lib/haxe/std/haxe/io/Error.hx">
		<Overflow><haxe_doc>An integer value is outside its allowed range</haxe_doc></Overflow>
		<OutsideBounds><haxe_doc>An operation on Bytes is outside of its valid range</haxe_doc></OutsideBounds>
		<Custom a="e">
			<d/>
			<haxe_doc>Other errors</haxe_doc>
		</Custom>
		<Blocked><haxe_doc>The IO is set into nonblocking mode and some data cannot be read or written</haxe_doc></Blocked>
		<haxe_doc>The possible IO errors that can occur</haxe_doc>
	</enum>
	<class path="haxe.io.Path" params="" file="/usr/lib/haxe/std/haxe/io/Path.hx">
		<withoutExtension public="1" set="method" line="60" static="1"><f a="path">
	<c path="String"/>
	<c path="String"/>
</f></withoutExtension>
		<withoutDirectory public="1" set="method" line="66" static="1"><f a="path">
	<c path="String"/>
	<c path="String"/>
</f></withoutDirectory>
		<directory public="1" set="method" line="72" static="1"><f a="path">
	<c path="String"/>
	<c path="String"/>
</f></directory>
		<extension public="1" set="method" line="79" static="1"><f a="path">
	<c path="String"/>
	<c path="String"/>
</f></extension>
		<withExtension public="1" set="method" line="86" static="1"><f a="path:ext">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></withExtension>
		<toString public="1" set="method" line="56"><f a=""><c path="String"/></f></toString>
		<backslash public="1"><e path="Bool"/></backslash>
		<file public="1"><c path="String"/></file>
		<dir public="1"><c path="String"/></dir>
		<ext public="1"><c path="String"/></ext>
		<new public="1" set="method" line="34"><f a="path">
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.Lib" params="" file="/home/joshua/Development/Haxe/nme/native/Lib.hx">
		<FULLSCREEN public="1" line="28" static="1"><c path="Int"/></FULLSCREEN>
		<BORDERLESS public="1" line="29" static="1"><c path="Int"/></BORDERLESS>
		<RESIZABLE public="1" line="30" static="1"><c path="Int"/></RESIZABLE>
		<HARDWARE public="1" line="31" static="1"><c path="Int"/></HARDWARE>
		<VSYNC public="1" line="32" static="1"><c path="Int"/></VSYNC>
		<HW_AA public="1" line="33" static="1"><c path="Int"/></HW_AA>
		<HW_AA_HIRES public="1" line="34" static="1"><c path="Int"/></HW_AA_HIRES>
		<ALLOW_SHADERS public="1" line="35" static="1"><c path="Int"/></ALLOW_SHADERS>
		<REQUIRE_SHADERS public="1" line="36" static="1"><c path="Int"/></REQUIRE_SHADERS>
		<DEPTH_BUFFER public="1" line="37" static="1"><c path="Int"/></DEPTH_BUFFER>
		<STENCIL_BUFFER public="1" line="38" static="1"><c path="Int"/></STENCIL_BUFFER>
		<current public="1" get="get_current" set="null" static="1"><c path="native.display.MovieClip"/></current>
		<initHeight public="1" set="null" static="1"><c path="Int"/></initHeight>
		<initWidth public="1" set="null" static="1"><c path="Int"/></initWidth>
		<stage public="1" get="get_stage" set="null" static="1"><c path="native.display.Stage"/></stage>
		<nmeCurrent line="45" static="1"><c path="native.display.MovieClip"/></nmeCurrent>
		<nmeMainFrame line="46" static="1"><d/></nmeMainFrame>
		<nmeStage line="47" static="1"><c path="native.display.Stage"/></nmeStage>
		<sIsInit line="48" static="1"><e path="Bool"/></sIsInit>
		<company public="1" set="null" static="1"><c path="String"/></company>
		<version public="1" set="null" static="1"><c path="String"/></version>
		<packageName public="1" set="null" static="1"><c path="String"/></packageName>
		<file public="1" set="null" static="1"><c path="String"/></file>
		<close public="1" set="method" line="56" static="1"><f a=""><e path="Void"/></f></close>
		<create public="1" set="method" line="64" static="1"><f a="inOnLoaded:inWidth:inHeight:?inFrameRate:?inColour:?inFlags:?inTitle:?inIcon">
	<f a=""><e path="Void"/></f>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Float"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="String"/>
	<c path="native.display.BitmapData"/>
	<e path="Void"/>
</f></create>
		<createManagedStage public="1" set="method" line="101" static="1"><f a="inWidth:inHeight:?inFlags">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="native.display.ManagedStage"/>
</f></createManagedStage>
		<exit public="1" set="method" line="114" static="1"><f a=""><e path="Void"/></f></exit>
		<forceClose public="1" set="method" line="135" static="1"><f a=""><e path="Void"/></f></forceClose>
		<getTimer public="1" set="method" line="144" static="1"><f a=""><c path="Int"/></f></getTimer>
		<getURL public="1" set="method" line="152" static="1"><f a="url:?target">
	<c path="native.net.URLRequest"/>
	<c path="String"/>
	<e path="Void"/>
</f></getURL>
		<nmeSetCurrentStage public="1" set="method" line="159" static="1">
			<f a="inStage">
				<c path="native.display.Stage"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeSetCurrentStage>
		<pause public="1" set="method" line="166" static="1"><f a=""><e path="Void"/></f></pause>
		<postUICallback public="1" set="method" line="173" static="1"><f a="inCallback">
	<f a=""><e path="Void"/></f>
	<e path="Void"/>
</f></postUICallback>
		<resume public="1" set="method" line="186" static="1"><f a=""><e path="Void"/></f></resume>
		<setIcon public="1" set="method" line="201" static="1"><f a="path">
	<c path="String"/>
	<e path="Void"/>
</f></setIcon>
		<setPackage public="1" set="method" line="210" static="1"><f a="inCompany:inFile:inPack:inVersion">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<e path="Void"/>
</f></setPackage>
		<get_current set="method" line="229" static="1"><f a=""><c path="native.display.MovieClip"/></f></get_current>
		<get_stage set="method" line="245" static="1"><f a=""><c path="native.display.Stage"/></f></get_stage>
		<nme_set_package line="265" static="1"><f a=":::">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<unknown/>
</f></nme_set_package>
		<nme_get_frame_stage line="266" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_get_frame_stage>
		<nme_get_url line="267" static="1"><f a="">
	<c path="String"/>
	<unknown/>
</f></nme_get_url>
		<nme_pause_animation line="268" static="1"><f a=""><unknown/></f></nme_pause_animation>
		<nme_resume_animation line="269" static="1"><f a=""><unknown/></f></nme_resume_animation>
	</class>
	<class path="native.Memory" params="" file="/home/joshua/Development/Haxe/nme/native/Memory.hx">
		<gcRef static="1"><c path="native.utils.ByteArray"/></gcRef>
		<len static="1"><c path="Int"/></len>
		<select public="1" set="method" line="24" static="1"><f a="inBytes">
	<c path="native.utils.ByteArray"/>
	<e path="Void"/>
</f></select>
		<getByte public="1" get="inline" set="null" line="128" static="1"><f a="addr">
	<c path="Int"/>
	<c path="Int"/>
</f></getByte>
		<getDouble public="1" get="inline" set="null" line="136" static="1"><f a="addr">
	<c path="Int"/>
	<c path="Float"/>
</f></getDouble>
		<getFloat public="1" get="inline" set="null" line="144" static="1"><f a="addr">
	<c path="Int"/>
	<c path="Float"/>
</f></getFloat>
		<getI32 public="1" get="inline" set="null" line="152" static="1"><f a="addr">
	<c path="Int"/>
	<c path="Int"/>
</f></getI32>
		<getUI16 public="1" get="inline" set="null" line="160" static="1"><f a="addr">
	<c path="Int"/>
	<c path="Int"/>
</f></getUI16>
		<setByte public="1" get="inline" set="null" line="168" static="1"><f a="addr:v">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setByte>
		<setDouble public="1" get="inline" set="null" line="176" static="1"><f a="addr:v">
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></setDouble>
		<setFloat public="1" get="inline" set="null" line="184" static="1"><f a="addr:v">
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></setFloat>
		<setI16 public="1" get="inline" set="null" line="192" static="1"><f a="addr:v">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setI16>
		<setI32 public="1" get="inline" set="null" line="200" static="1"><f a="addr:v">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setI32>
	</class>
	<class path="native.display.Bitmap" params="" file="/home/joshua/Development/Haxe/nme/native/display/Bitmap.hx">
		<extends path="native.display.DisplayObject"/>
		<set_smoothing set="method" line="75"><f a="inSmooth">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_smoothing>
		<set_bitmapData set="method" line="65"><f a="inBitmapData">
	<c path="native.display.BitmapData"/>
	<c path="native.display.BitmapData"/>
</f></set_bitmapData>
		<nmeRebuild set="method" line="38"><f a=""><e path="Void"/></f></nmeRebuild>
		<mGraphics><c path="native.display.Graphics"/></mGraphics>
		<smoothing public="1" set="set_smoothing"><e path="Bool"/></smoothing>
		<bitmapData public="1" set="set_bitmapData"><c path="native.display.BitmapData"/></bitmapData>
		<new public="1" set="method" line="18"><f a="?bitmapData:?pixelSnapping:?smoothing">
	<c path="native.display.BitmapData"/>
	<e path="native.display.PixelSnapping"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.BitmapData" params="" file="/home/joshua/Development/Haxe/nme/native/display/BitmapData.hx">
		<implements path="native.display.IBitmapDrawable"/>
		<CLEAR public="1" line="18" static="1"><c path="Int"/></CLEAR>
		<BLACK public="1" line="19" static="1"><t path="native.display.BitmapInt32"/></BLACK>
		<WHITE public="1" line="20" static="1"><t path="native.display.BitmapInt32"/></WHITE>
		<RED public="1" line="21" static="1"><t path="native.display.BitmapInt32"/></RED>
		<GREEN public="1" line="22" static="1"><t path="native.display.BitmapInt32"/></GREEN>
		<BLUE public="1" line="23" static="1"><t path="native.display.BitmapInt32"/></BLUE>
		<PNG public="1" get="inline" set="null" line="24" static="1"><c path="String"/></PNG>
		<JPG public="1" get="inline" set="null" line="25" static="1"><c path="String"/></JPG>
		<TRANSPARENT public="1" line="27" static="1"><c path="Int"/></TRANSPARENT>
		<HARDWARE public="1" line="28" static="1"><c path="Int"/></HARDWARE>
		<FORMAT_8888 public="1" line="29" static="1"><c path="Int"/></FORMAT_8888>
		<FORMAT_4444 public="1" line="30" static="1"><c path="Int"/></FORMAT_4444>
		<FORMAT_565 public="1" line="31" static="1"><c path="Int"/></FORMAT_565>
		<createColor public="1" get="inline" set="null" line="119" static="1"><f a="inRGB:?inAlpha">
	<c path="Int"/>
	<c path="Int"/>
	<t path="native.display.BitmapInt32"/>
</f></createColor>
		<extractAlpha public="1" get="inline" set="null" line="174" static="1"><f a="v">
	<t path="native.display.BitmapInt32"/>
	<c path="Int"/>
</f></extractAlpha>
		<extractColor public="1" get="inline" set="null" line="185" static="1"><f a="v">
	<t path="native.display.BitmapInt32"/>
	<c path="Int"/>
</f></extractColor>
		<getRGBAPixels public="1" get="inline" set="null" line="257" static="1"><f a="bitmapData">
	<c path="native.display.BitmapData"/>
	<c path="native.utils.ByteArray"/>
</f></getRGBAPixels>
		<load public="1" set="method" line="302" static="1"><f a="inFilename:?format">
	<c path="String"/>
	<c path="Int"/>
	<c path="native.display.BitmapData"/>
</f></load>
		<loadFromBytes public="1" set="method" line="311" static="1"><f a="inBytes:?inRawAlpha">
	<c path="native.utils.ByteArray"/>
	<c path="native.utils.ByteArray"/>
	<c path="native.display.BitmapData"/>
</f></loadFromBytes>
		<loadFromHaxeBytes public="1" set="method" line="320" static="1"><f a="inBytes:?inRawAlpha">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
	<c path="native.display.BitmapData"/>
</f></loadFromHaxeBytes>
		<nme_bitmap_data_create line="452" static="1"><f a=":::::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<t path="Null"><e path="Bool"/></t>
	<unknown/>
</f></nme_bitmap_data_create>
		<nme_bitmap_data_load line="453" static="1"><f a=":">
	<c path="String"/>
	<c path="Int"/>
	<unknown/>
</f></nme_bitmap_data_load>
		<nme_bitmap_data_from_bytes line="454" static="1"><f a=":">
	<c path="native.utils.ByteArray"/>
	<c path="native.utils.ByteArray"/>
	<unknown/>
</f></nme_bitmap_data_from_bytes>
		<nme_bitmap_data_clear line="455" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_bitmap_data_clear>
		<nme_bitmap_data_clone line="456" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_bitmap_data_clone>
		<nme_bitmap_data_apply_filter line="457" static="1"><f a="::::">
	<d/>
	<d/>
	<c path="native.geom.Rectangle"/>
	<c path="native.geom.Point"/>
	<c path="native.filters.BitmapFilter"/>
	<unknown/>
</f></nme_bitmap_data_apply_filter>
		<nme_bitmap_data_color_transform line="458" static="1"><f a="::">
	<d/>
	<c path="native.geom.Rectangle"/>
	<c path="native.geom.ColorTransform"/>
	<unknown/>
</f></nme_bitmap_data_color_transform>
		<nme_bitmap_data_copy line="459" static="1"><f a="::::">
	<d/>
	<c path="native.geom.Rectangle"/>
	<d/>
	<c path="native.geom.Point"/>
	<e path="Bool"/>
	<unknown/>
</f></nme_bitmap_data_copy>
		<nme_bitmap_data_copy_channel line="460" static="1"><f a=":::::">
	<d/>
	<c path="native.geom.Rectangle"/>
	<d/>
	<c path="native.geom.Point"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_bitmap_data_copy_channel>
		<nme_bitmap_data_fill line="461" static="1"><f a=":::">
	<d/>
	<c path="native.geom.Rectangle"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_bitmap_data_fill>
		<nme_bitmap_data_get_pixels line="462" static="1"><f a=":">
	<d/>
	<c path="native.geom.Rectangle"/>
	<c path="native.utils.ByteArray"/>
</f></nme_bitmap_data_get_pixels>
		<nme_bitmap_data_get_pixel line="463" static="1"><f a="::">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></nme_bitmap_data_get_pixel>
		<nme_bitmap_data_get_pixel32 line="464" static="1"><f a="::">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
	<t path="native.display.BitmapInt32"/>
</f></nme_bitmap_data_get_pixel32>
		<nme_bitmap_data_get_pixel_rgba line="465" static="1"><unknown/></nme_bitmap_data_get_pixel_rgba>
		<nme_bitmap_data_get_array line="467" static="1"><f a="::">
	<d/>
	<c path="native.geom.Rectangle"/>
	<c path="Array"><c path="Int"/></c>
	<unknown/>
</f></nme_bitmap_data_get_array>
		<nme_bitmap_data_get_color_bounds_rect line="469" static="1"><f a="::::">
	<d/>
	<t path="native.display.BitmapInt32"/>
	<t path="native.display.BitmapInt32"/>
	<e path="Bool"/>
	<c path="native.geom.Rectangle"/>
	<unknown/>
</f></nme_bitmap_data_get_color_bounds_rect>
		<nme_bitmap_data_scroll line="470" static="1"><f a="::">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_bitmap_data_scroll>
		<nme_bitmap_data_set_pixel line="471" static="1"><f a=":::">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_bitmap_data_set_pixel>
		<nme_bitmap_data_set_pixel32 line="472" static="1"><f a=":::">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
	<t path="native.display.BitmapInt32"/>
	<unknown/>
</f></nme_bitmap_data_set_pixel32>
		<nme_bitmap_data_set_pixel_rgba line="473" static="1"><unknown/></nme_bitmap_data_set_pixel_rgba>
		<nme_bitmap_data_set_bytes line="474" static="1"><f a=":::">
	<d/>
	<c path="native.geom.Rectangle"/>
	<c path="native.utils.ByteArray"/>
	<c path="Int"/>
	<unknown/>
</f></nme_bitmap_data_set_bytes>
		<nme_bitmap_data_set_format line="475" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_bitmap_data_set_format>
		<nme_bitmap_data_set_array line="477" static="1"><f a="::">
	<d/>
	<c path="native.geom.Rectangle"/>
	<c path="Array"><c path="Int"/></c>
	<unknown/>
</f></nme_bitmap_data_set_array>
		<nme_bitmap_data_create_hardware_surface line="478" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_bitmap_data_create_hardware_surface>
		<nme_bitmap_data_destroy_hardware_surface line="479" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_bitmap_data_destroy_hardware_surface>
		<nme_bitmap_data_generate_filter_rect line="481" static="1"><f a="::">
	<c path="native.geom.Rectangle"/>
	<c path="native.filters.BitmapFilter"/>
	<c path="native.geom.Rectangle"/>
	<unknown/>
</f></nme_bitmap_data_generate_filter_rect>
		<nme_render_surface_to_surface line="482" static="1"><f a="::::::">
	<d/>
	<d/>
	<c path="native.geom.Matrix"/>
	<c path="native.geom.ColorTransform"/>
	<c path="String"/>
	<c path="native.geom.Rectangle"/>
	<e path="Bool"/>
	<unknown/>
</f></nme_render_surface_to_surface>
		<nme_bitmap_data_height line="483" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_bitmap_data_height>
		<nme_bitmap_data_width line="484" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_bitmap_data_width>
		<nme_bitmap_data_get_transparent line="485" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_bitmap_data_get_transparent>
		<nme_bitmap_data_set_flags line="486" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_bitmap_data_set_flags>
		<nme_bitmap_data_encode line="487" static="1"><f a="::">
	<d/>
	<c path="String"/>
	<c path="Float"/>
	<c path="native.utils.ByteArray"/>
</f></nme_bitmap_data_encode>
		<nme_bitmap_data_dump_bits line="488" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_bitmap_data_dump_bits>
		<nme_bitmap_data_noise line="489" static="1"><f a=":::::">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Bool"/>
	<unknown/>
</f></nme_bitmap_data_noise>
		<get_transparent set="method" line="442"><f a=""><e path="Bool"/></f></get_transparent>
		<get_height set="method" line="441"><f a=""><c path="Int"/></f></get_height>
		<get_width set="method" line="440"><f a=""><c path="Int"/></f></get_width>
		<get_rect set="method" line="439"><f a=""><c path="native.geom.Rectangle"/></f></get_rect>
		<noise public="1" set="method" line="425"><f a="randomSeed:?low:?high:?channelOptions:?grayScale">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></noise>
		<setFormat public="1" set="method" line="418"><f a="format">
	<c path="Int"/>
	<e path="Void"/>
</f></setFormat>
		<unlock public="1" set="method" line="411"><f a="?changeRect">
	<c path="native.geom.Rectangle"/>
	<e path="Void"/>
</f></unlock>
		<setVector public="1" set="method" line="393"><f a="rect:inPixels">
	<c path="native.geom.Rectangle"/>
	<c path="Array"><c path="Int"/></c>
	<e path="Void"/>
</f></setVector>
		<setPixels public="1" set="method" line="383"><f a="rect:pixels">
	<c path="native.geom.Rectangle"/>
	<c path="native.utils.ByteArray"/>
	<e path="Void"/>
</f></setPixels>
		<setPixel32 public="1" set="method" line="372"><f a="inX:inY:inColour">
	<c path="Int"/>
	<c path="Int"/>
	<t path="native.display.BitmapInt32"/>
	<e path="Void"/>
</f></setPixel32>
		<setPixel public="1" set="method" line="365"><f a="inX:inY:inColour">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setPixel>
		<setFlags public="1" set="method" line="357"><f a="inFlags">
	<c path="Int"/>
	<e path="Void"/>
</f></setFlags>
		<scroll public="1" set="method" line="350"><f a="inDX:inDY">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></scroll>
		<perlinNoise public="1" set="method" line="342"><f a="baseX:baseY:numOctaves:randomSeed:stitch:fractalNoise:?channelOptions:?grayScale:?offsets">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Bool"/>
	<c path="Array"><c path="native.geom.Point"/></c>
	<e path="Void"/>
</f></perlinNoise>
		<nmeDrawToSurface public="1" set="method" line="334">
			<f a="inSurface:matrix:colorTransform:blendMode:clipRect:smoothing">
				<d/>
				<c path="native.geom.Matrix"/>
				<c path="native.geom.ColorTransform"/>
				<c path="String"/>
				<c path="native.geom.Rectangle"/>
				<e path="Bool"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeDrawToSurface>
		<lock public="1" set="method" line="327"><f a=""><e path="Void"/></f></lock>
		<getVector public="1" set="method" line="280"><f a="rect">
	<c path="native.geom.Rectangle"/>
	<c path="Array"><c path="Int"/></c>
</f></getVector>
		<getPixels public="1" set="method" line="248"><f a="rect">
	<c path="native.geom.Rectangle"/>
	<c path="native.utils.ByteArray"/>
</f></getPixels>
		<getPixel32 public="1" set="method" line="237"><f a="x:y">
	<c path="Int"/>
	<c path="Int"/>
	<t path="native.display.BitmapInt32"/>
</f></getPixel32>
		<getPixel public="1" set="method" line="230"><f a="x:y">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></getPixel>
		<getColorBoundsRect public="1" set="method" line="221"><f a="mask:color:?findColor">
	<t path="native.display.BitmapInt32"/>
	<t path="native.display.BitmapInt32"/>
	<e path="Bool"/>
	<c path="native.geom.Rectangle"/>
</f></getColorBoundsRect>
		<generateFilterRect public="1" set="method" line="212"><f a="sourceRect:filter">
	<c path="native.geom.Rectangle"/>
	<c path="native.filters.BitmapFilter"/>
	<c path="native.geom.Rectangle"/>
</f></generateFilterRect>
		<fillRectEx public="1" set="method" line="205"><f a="rect:inColour:?inAlpha">
	<c path="native.geom.Rectangle"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></fillRectEx>
		<fillRect public="1" set="method" line="196"><f a="rect:inColour">
	<c path="native.geom.Rectangle"/>
	<t path="native.display.BitmapInt32"/>
	<e path="Void"/>
</f></fillRect>
		<encode public="1" set="method" line="167"><f a="inFormat:?inQuality">
	<c path="String"/>
	<c path="Float"/>
	<c path="native.utils.ByteArray"/>
</f></encode>
		<dumpBits public="1" set="method" line="160"><f a=""><e path="Void"/></f></dumpBits>
		<draw public="1" set="method" line="153"><f a="source:?matrix:?colorTransform:?blendMode:?clipRect:?smoothing">
	<c path="native.display.IBitmapDrawable"/>
	<c path="native.geom.Matrix"/>
	<c path="native.geom.ColorTransform"/>
	<e path="native.display.BlendMode"/>
	<c path="native.geom.Rectangle"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></draw>
		<dispose public="1" set="method" line="146"><f a=""><e path="Void"/></f></dispose>
		<destroyHardwareSurface public="1" set="method" line="138"><f a=""><e path="Void"/></f></destroyHardwareSurface>
		<createHardwareSurface public="1" set="method" line="131"><f a=""><e path="Void"/></f></createHardwareSurface>
		<copyPixels public="1" set="method" line="112"><f a="sourceBitmapData:sourceRect:destPoint:?alphaBitmapData:?alphaPoint:?mergeAlpha">
	<c path="native.display.BitmapData"/>
	<c path="native.geom.Rectangle"/>
	<c path="native.geom.Point"/>
	<c path="native.display.BitmapData"/>
	<c path="native.geom.Point"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></copyPixels>
		<copyChannel public="1" set="method" line="105"><f a="sourceBitmapData:sourceRect:destPoint:inSourceChannel:inDestChannel">
	<c path="native.display.BitmapData"/>
	<c path="native.geom.Rectangle"/>
	<c path="native.geom.Point"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></copyChannel>
		<colorTransform public="1" set="method" line="98"><f a="rect:colorTransform">
	<c path="native.geom.Rectangle"/>
	<c path="native.geom.ColorTransform"/>
	<e path="Void"/>
</f></colorTransform>
		<clone public="1" set="method" line="89"><f a=""><c path="native.display.BitmapData"/></f></clone>
		<clear public="1" set="method" line="82"><f a="color">
	<c path="Int"/>
	<e path="Void"/>
</f></clear>
		<applyFilter public="1" set="method" line="75"><f a="sourceBitmapData:sourceRect:destPoint:filter">
	<c path="native.display.BitmapData"/>
	<c path="native.geom.Rectangle"/>
	<c path="native.geom.Point"/>
	<c path="native.filters.BitmapFilter"/>
	<e path="Void"/>
</f></applyFilter>
		<nmeHandle public="1">
			<d/>
			<haxe_doc>@private</haxe_doc>
		</nmeHandle>
		<width public="1" get="get_width" set="null"><c path="Int"/></width>
		<transparent public="1" get="get_transparent" set="null"><e path="Bool"/></transparent>
		<rect public="1" get="get_rect" set="null"><c path="native.geom.Rectangle"/></rect>
		<height public="1" get="get_height" set="null"><c path="Int"/></height>
		<new public="1" set="method" line="41"><f a="inWidth:inHeight:?inTransparent:?inFillRGBA:?inGPUMode">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Bool"/>
	<t path="native.display.BitmapInt32"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.OptimizedPerlin" params="" file="/home/joshua/Development/Haxe/nme/native/display/BitmapData.hx" module="native.display.BitmapData">
		<P line="498" static="1"><c path="Array"><c path="Int"/></c></P>
		<seedOffset set="method" line="716"><f a="iSeed">
	<c path="Int"/>
	<e path="Void"/>
</f></seedOffset>
		<octFreqPers set="method" line="693"><f a="fPersistence">
	<c path="Float"/>
	<e path="Void"/>
</f></octFreqPers>
		<fill public="1" set="method" line="576"><f a="bitmap:_x:_y:_z:?_">
	<c path="native.display.BitmapData"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
	<e path="Void"/>
</f></fill>
		<baseFactor><c path="Float"/></baseFactor>
		<iZoffset><c path="Float"/></iZoffset>
		<iYoffset><c path="Float"/></iYoffset>
		<iXoffset><c path="Float"/></iXoffset>
		<fPersMax><c path="Float"/></fPersMax>
		<aOctPers><c path="Array"><c path="Float"/></c></aOctPers>
		<aOctFreq><c path="Array"><c path="Float"/></c></aOctFreq>
		<octaves><c path="Int"/></octaves>
		<new public="1" set="method" line="567"><f a="?seed:?octaves:?falloff">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.BitmapDataChannel" params="" file="/home/joshua/Development/Haxe/nme/native/display/BitmapDataChannel.hx">
		<ALPHA public="1" get="inline" set="null" line="7" static="1"><c path="Int"/></ALPHA>
		<BLUE public="1" get="inline" set="null" line="8" static="1"><c path="Int"/></BLUE>
		<GREEN public="1" get="inline" set="null" line="9" static="1"><c path="Int"/></GREEN>
		<RED public="1" get="inline" set="null" line="10" static="1"><c path="Int"/></RED>
	</class>
	<typedef path="native.display.BitmapInt32" params="" file="/home/joshua/Development/Haxe/nme/native/display/BitmapInt32.hx"><c path="Int"/></typedef>
	<enum path="native.display.BlendMode" params="" file="/home/joshua/Development/Haxe/nme/native/display/BlendMode.hx">
		<SUBTRACT/>
		<SCREEN/>
		<OVERLAY/>
		<NORMAL/>
		<MULTIPLY/>
		<LIGHTEN/>
		<LAYER/>
		<INVERT/>
		<HARDLIGHT/>
		<ERASE/>
		<DIFFERENCE/>
		<DARKEN/>
		<ALPHA/>
		<ADD/>
	</enum>
	<enum path="native.display.CapsStyle" params="" file="/home/joshua/Development/Haxe/nme/native/display/CapsStyle.hx">
		<SQUARE/>
		<ROUND/>
		<NONE/>
	</enum>
	<class path="native.display.DirectRenderer" params="" file="/home/joshua/Development/Haxe/nme/native/display/DirectRenderer.hx">
		<extends path="native.display.DisplayObject"/>
		<nme_direct_renderer_create line="44" static="1"><f a=""><unknown/></f></nme_direct_renderer_create>
		<nme_direct_renderer_set line="45" static="1"><f a=":">
	<d/>
	<f a="inRect">
		<d/>
		<e path="Void"/>
	</f>
	<unknown/>
</f></nme_direct_renderer_set>
		<render public="1" set="dynamic" line="30"><f a="inRect">
	<c path="native.geom.Rectangle"/>
	<e path="Void"/>
</f></render>
		<nmeOnRender set="method" line="23"><f a="inRect">
	<d/>
	<e path="Void"/>
</f></nmeOnRender>
		<new public="1" set="method" line="13"><f a="?inType">
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="native.display.GradientType" params="" file="/home/joshua/Development/Haxe/nme/native/display/GradientType.hx">
		<RADIAL/>
		<LINEAR/>
	</enum>
	<class path="native.display.Graphics" params="" file="/home/joshua/Development/Haxe/nme/native/display/Graphics.hx">
		<TILE_SCALE public="1" get="inline" set="null" line="12" static="1"><c path="Int"/></TILE_SCALE>
		<TILE_ROTATION public="1" get="inline" set="null" line="13" static="1"><c path="Int"/></TILE_ROTATION>
		<TILE_RGB public="1" get="inline" set="null" line="14" static="1"><c path="Int"/></TILE_RGB>
		<TILE_ALPHA public="1" get="inline" set="null" line="15" static="1"><c path="Int"/></TILE_ALPHA>
		<TILE_TRANS_2x2 public="1" get="inline" set="null" line="16" static="1"><c path="Int"/></TILE_TRANS_2x2>
		<TILE_SMOOTH get="inline" set="null" line="17" static="1"><c path="Int"/></TILE_SMOOTH>
		<TILE_BLEND_NORMAL public="1" get="inline" set="null" line="18" static="1"><c path="Int"/></TILE_BLEND_NORMAL>
		<TILE_BLEND_ADD public="1" get="inline" set="null" line="19" static="1"><c path="Int"/></TILE_BLEND_ADD>
		<RGBA public="1" get="inline" set="null" line="211" static="1"><f a="inRGB:?inA">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></RGBA>
		<nme_gfx_clear line="229" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_gfx_clear>
		<nme_gfx_begin_fill line="230" static="1"><f a="::">
	<d/>
	<c path="Int"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gfx_begin_fill>
		<nme_gfx_begin_bitmap_fill line="231" static="1"><f a="::::">
	<d/>
	<d/>
	<c path="native.geom.Matrix"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<unknown/>
</f></nme_gfx_begin_bitmap_fill>
		<nme_gfx_line_bitmap_fill line="232" static="1"><f a="::::">
	<d/>
	<d/>
	<c path="native.geom.Matrix"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<unknown/>
</f></nme_gfx_line_bitmap_fill>
		<nme_gfx_begin_gradient_fill line="233" static="1"><f a="::::::::">
	<d/>
	<c path="Int"/>
	<c path="Array"><d/></c>
	<c path="Array"><d/></c>
	<c path="Array"><d/></c>
	<c path="native.geom.Matrix"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gfx_begin_gradient_fill>
		<nme_gfx_line_gradient_fill line="234" static="1"><f a="::::::::">
	<d/>
	<c path="Int"/>
	<c path="Array"><d/></c>
	<c path="Array"><d/></c>
	<c path="Array"><d/></c>
	<c path="native.geom.Matrix"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gfx_line_gradient_fill>
		<nme_gfx_end_fill line="235" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_gfx_end_fill>
		<nme_gfx_line_style line="236" static="1"><f a="::::::::">
	<d/>
	<t path="Null"><c path="Float"/></t>
	<c path="Int"/>
	<c path="Float"/>
	<e path="Bool"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gfx_line_style>
		<nme_gfx_move_to line="237" static="1"><f a="::">
	<d/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gfx_move_to>
		<nme_gfx_line_to line="238" static="1"><f a="::">
	<d/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gfx_line_to>
		<nme_gfx_curve_to line="239" static="1"><f a="::::">
	<d/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gfx_curve_to>
		<nme_gfx_arc_to line="240" static="1"><f a="::::">
	<d/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gfx_arc_to>
		<nme_gfx_draw_ellipse line="241" static="1"><f a="::::">
	<d/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gfx_draw_ellipse>
		<nme_gfx_draw_data line="242" static="1"><f a=":">
	<d/>
	<c path="Array"><d/></c>
	<unknown/>
</f></nme_gfx_draw_data>
		<nme_gfx_draw_datum line="243" static="1"><f a=":">
	<d/>
	<d/>
	<unknown/>
</f></nme_gfx_draw_datum>
		<nme_gfx_draw_rect line="244" static="1"><f a="::::">
	<d/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gfx_draw_rect>
		<nme_gfx_draw_path line="245" static="1"><f a=":::">
	<d/>
	<c path="Array"><c path="Int"/></c>
	<c path="Array"><c path="Float"/></c>
	<e path="Bool"/>
	<unknown/>
</f></nme_gfx_draw_path>
		<nme_gfx_draw_tiles line="246" static="1"><f a=":::">
	<d/>
	<d/>
	<c path="Array"><c path="Float"/></c>
	<c path="Int"/>
	<unknown/>
</f></nme_gfx_draw_tiles>
		<nme_gfx_draw_points line="247" static="1"><f a=":::::">
	<d/>
	<c path="Array"><c path="Float"/></c>
	<c path="Array"><c path="Int"/></c>
	<c path="Int"/>
	<e path="Bool"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gfx_draw_points>
		<nme_gfx_draw_round_rect line="248" static="1"><f a="::::::">
	<d/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<t path="Null"><c path="Float"/></t>
	<unknown/>
</f></nme_gfx_draw_round_rect>
		<nme_gfx_draw_triangles line="249" static="1"><f a=":::::::">
	<d/>
	<c path="Array"><c path="Float"/></c>
	<c path="Array"><c path="Int"/></c>
	<c path="Array"><c path="Float"/></c>
	<c path="Int"/>
	<c path="Array"><c path="Int"/></c>
	<c path="Int"/>
	<c path="Array"><c path="Float"/></c>
	<unknown/>
</f></nme_gfx_draw_triangles>
		<moveTo public="1" set="method" line="204"><f a="inX:inY">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></moveTo>
		<lineTo public="1" set="method" line="197"><f a="inX:inY">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></lineTo>
		<lineStyle public="1" set="method" line="190"><f a="?thickness:?color:?alpha:?pixelHinting:?scaleMode:?caps:?joints:?miterLimit">
	<c path="Float"/>
	<c path="Int"/>
	<c path="Float"/>
	<e path="Bool"/>
	<e path="native.display.LineScaleMode"/>
	<e path="native.display.CapsStyle"/>
	<e path="native.display.JointStyle"/>
	<c path="Float"/>
	<e path="Void"/>
</f></lineStyle>
		<lineGradientStyle public="1" set="method" line="176"><f a="type:colors:alphas:ratios:?matrix:?spreadMethod:?interpolationMethod:?focalPointRatio">
	<e path="native.display.GradientType"/>
	<c path="Array"><d/></c>
	<c path="Array"><d/></c>
	<c path="Array"><d/></c>
	<c path="native.geom.Matrix"/>
	<e path="native.display.SpreadMethod"/>
	<e path="native.display.InterpolationMethod"/>
	<c path="Float"/>
	<e path="Void"/>
</f></lineGradientStyle>
		<lineBitmapStyle public="1" set="method" line="169"><f a="bitmap:?matrix:?repeat:?smooth">
	<c path="native.display.BitmapData"/>
	<c path="native.geom.Matrix"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></lineBitmapStyle>
		<endFill public="1" set="method" line="162"><f a=""><e path="Void"/></f></endFill>
		<drawTriangles public="1" set="method" line="154"><f a="vertices:?indices:?uvtData:?culling:?colours:?blendMode:?viewport">
	<c path="Array"><c path="Float"/></c>
	<c path="Array"><c path="Int"/></c>
	<c path="Array"><c path="Float"/></c>
	<e path="native.display.TriangleCulling"/>
	<c path="Array"><c path="Int"/></c>
	<c path="Int"/>
	<c path="Array"><c path="Float"/></c>
	<e path="Void"/>
</f></drawTriangles>
		<drawTiles public="1" set="method" line="142">
			<f a="sheet:inXYID:?inSmooth:?inFlags">
				<c path="native.display.Tilesheet"/>
				<c path="Array"><c path="Float"/></c>
				<e path="Bool"/>
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</drawTiles>
		<drawPath public="1" set="method" line="135"><f a="commands:data:?winding">
	<c path="Array"><c path="Int"/></c>
	<c path="Array"><c path="Float"/></c>
	<c path="String"/>
	<e path="Void"/>
</f></drawPath>
		<drawRoundRect public="1" set="method" line="128"><f a="inX:inY:inWidth:inHeight:inRadX:?inRadY">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></drawRoundRect>
		<drawRect public="1" set="method" line="121"><f a="inX:inY:inWidth:inHeight">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></drawRect>
		<drawPoints public="1" set="method" line="114"><f a="inXY:?inPointRGBA:?inDefaultRGBA:?inSize">
	<c path="Array"><c path="Float"/></c>
	<c path="Array"><c path="Int"/></c>
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></drawPoints>
		<drawGraphicsDatum public="1" set="method" line="107"><f a="graphicsDatum">
	<c path="native.display.IGraphicsData"/>
	<e path="Void"/>
</f></drawGraphicsDatum>
		<drawGraphicsData public="1" set="method" line="95"><f a="graphicsData">
	<c path="Array"><c path="native.display.IGraphicsData"/></c>
	<e path="Void"/>
</f></drawGraphicsData>
		<drawEllipse public="1" set="method" line="88"><f a="inX:inY:inWidth:inHeight">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></drawEllipse>
		<drawCircle public="1" set="method" line="81"><f a="inX:inY:inRadius">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></drawCircle>
		<curveTo public="1" set="method" line="74"><f a="inCX:inCY:inX:inY">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></curveTo>
		<clear public="1" set="method" line="67"><f a=""><e path="Void"/></f></clear>
		<beginGradientFill public="1" set="method" line="53"><f a="type:colors:alphas:ratios:?matrix:?spreadMethod:?interpolationMethod:?focalPointRatio">
	<e path="native.display.GradientType"/>
	<c path="Array"><d/></c>
	<c path="Array"><d/></c>
	<c path="Array"><d/></c>
	<c path="native.geom.Matrix"/>
	<e path="native.display.SpreadMethod"/>
	<e path="native.display.InterpolationMethod"/>
	<c path="Float"/>
	<e path="Void"/>
</f></beginGradientFill>
		<beginFill public="1" set="method" line="46"><f a="color:?alpha">
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></beginFill>
		<beginBitmapFill public="1" set="method" line="39"><f a="bitmap:?matrix:?repeat:?smooth">
	<c path="native.display.BitmapData"/>
	<c path="native.geom.Matrix"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></beginBitmapFill>
		<arcTo public="1" set="method" line="32"><f a="inCX:inCY:inX:inY">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></arcTo>
		<nmeHandle>
			<d/>
			<haxe_doc>@private</haxe_doc>
		</nmeHandle>
		<new public="1" set="method" line="25"><f a="inHandle">
	<d/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.IGraphicsData" params="" file="/home/joshua/Development/Haxe/nme/native/display/IGraphicsData.hx">
		<nmeHandle public="1">
			<d/>
			<haxe_doc>@private</haxe_doc>
		</nmeHandle>
		<new public="1" set="method" line="11"><f a="inHandle">
	<d/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.GraphicsEndFill" params="" file="/home/joshua/Development/Haxe/nme/native/display/GraphicsEndFill.hx">
		<extends path="native.display.IGraphicsData"/>
		<nme_graphics_end_fill_create line="18" static="1"><f a=""><unknown/></f></nme_graphics_end_fill_create>
		<new public="1" set="method" line="11"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="native.display.GraphicsPath" params="" file="/home/joshua/Development/Haxe/nme/native/display/GraphicsPath.hx">
		<extends path="native.display.IGraphicsData"/>
		<nme_graphics_path_create line="105" static="1"><f a="::">
	<c path="Array"><c path="Int"/></c>
	<c path="Array"><c path="Float"/></c>
	<e path="Bool"/>
	<unknown/>
</f></nme_graphics_path_create>
		<nme_graphics_path_curve_to line="106" static="1"><f a="::::">
	<d/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_graphics_path_curve_to>
		<nme_graphics_path_line_to line="107" static="1"><f a="::">
	<d/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_graphics_path_line_to>
		<nme_graphics_path_move_to line="108" static="1"><f a="::">
	<d/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_graphics_path_move_to>
		<nme_graphics_path_wline_to line="109" static="1"><f a="::">
	<d/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_graphics_path_wline_to>
		<nme_graphics_path_wmove_to line="110" static="1"><f a="::">
	<d/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_graphics_path_wmove_to>
		<nme_graphics_path_get_commands line="111" static="1"><f a=":">
	<d/>
	<c path="Array"><c path="Int"/></c>
	<unknown/>
</f></nme_graphics_path_get_commands>
		<nme_graphics_path_set_commands line="112" static="1"><f a=":">
	<d/>
	<c path="Array"><c path="Int"/></c>
	<unknown/>
</f></nme_graphics_path_set_commands>
		<nme_graphics_path_get_data line="113" static="1"><f a=":">
	<d/>
	<c path="Array"><c path="Float"/></c>
	<unknown/>
</f></nme_graphics_path_get_data>
		<nme_graphics_path_set_data line="114" static="1"><f a=":">
	<d/>
	<c path="Array"><c path="Float"/></c>
	<unknown/>
</f></nme_graphics_path_set_data>
		<set_data set="method" line="90"><f a="inData">
	<c path="Array"><c path="Float"/></c>
	<c path="Array"><c path="Float"/></c>
</f></set_data>
		<get_data set="method" line="81"><f a=""><c path="Array"><c path="Float"/></c></f></get_data>
		<set_commands set="method" line="73"><f a="inCommands">
	<c path="Array"><c path="Int"/></c>
	<c path="Array"><c path="Int"/></c>
</f></set_commands>
		<get_commands set="method" line="64"><f a=""><c path="Array"><c path="Int"/></c></f></get_commands>
		<wideMoveTo public="1" set="method" line="50"><f a="x:y">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></wideMoveTo>
		<wideLineTo public="1" set="method" line="43"><f a="x:y">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></wideLineTo>
		<moveTo public="1" set="method" line="36"><f a="x:y">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></moveTo>
		<lineTo public="1" set="method" line="29"><f a="x:y">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></lineTo>
		<curveTo public="1" set="method" line="22"><f a="controlX:controlY:anchorX:anchorY">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></curveTo>
		<data public="1" get="get_data" set="set_data"><c path="Array"><c path="Float"/></c></data>
		<commands public="1" get="get_commands" set="set_commands"><c path="Array"><c path="Int"/></c></commands>
		<new public="1" set="method" line="15"><f a="?commands:?data:?winding">
	<c path="Array"><c path="Int"/></c>
	<c path="Array"><c path="Float"/></c>
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.GraphicsPathWinding" params="" file="/home/joshua/Development/Haxe/nme/native/display/GraphicsPathWinding.hx">
		<EVEN_ODD public="1" get="inline" set="null" line="7" static="1"><c path="String"/></EVEN_ODD>
		<NON_ZERO public="1" get="inline" set="null" line="8" static="1"><c path="String"/></NON_ZERO>
	</class>
	<class path="native.display.GraphicsSolidFill" params="" file="/home/joshua/Development/Haxe/nme/native/display/GraphicsSolidFill.hx">
		<extends path="native.display.IGraphicsData"/>
		<nme_graphics_solid_fill_create line="18" static="1"><f a=":">
	<c path="Int"/>
	<c path="Float"/>
	<unknown/>
</f></nme_graphics_solid_fill_create>
		<new public="1" set="method" line="11"><f a="?color:?alpha">
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.GraphicsStroke" params="" file="/home/joshua/Development/Haxe/nme/native/display/GraphicsStroke.hx">
		<extends path="native.display.IGraphicsData"/>
		<nme_graphics_stroke_create line="18" static="1"><f a="::::::">
	<t path="Null"><c path="Float"/></t>
	<e path="Bool"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Float"/>
	<t path="Null"><unknown/></t>
	<unknown/>
</f></nme_graphics_stroke_create>
		<new public="1" set="method" line="11"><f a="?thickness:?pixelHinting:?scaleMode:?caps:?joints:?miterLimit:?fill">
	<c path="Float"/>
	<e path="Bool"/>
	<e path="native.display.LineScaleMode"/>
	<e path="native.display.CapsStyle"/>
	<e path="native.display.JointStyle"/>
	<c path="Float"/>
	<c path="native.display.IGraphicsData"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="native.display.InterpolationMethod" params="" file="/home/joshua/Development/Haxe/nme/native/display/InterpolationMethod.hx">
		<RGB/>
		<LINEAR_RGB/>
	</enum>
	<enum path="native.display.JointStyle" params="" file="/home/joshua/Development/Haxe/nme/native/display/JointStyle.hx">
		<ROUND/>
		<MITER/>
		<BEVEL/>
	</enum>
	<enum path="native.display.LineScaleMode" params="" file="/home/joshua/Development/Haxe/nme/native/display/LineScaleMode.hx">
		<VERTICAL/>
		<OPENGL/>
		<NORMAL/>
		<NONE/>
		<HORIZONTAL/>
	</enum>
	<class path="native.display.Loader" params="" file="/home/joshua/Development/Haxe/nme/native/display/Loader.hx">
		<extends path="native.display.Sprite"/>
		<onData set="method" line="122"><f a="event">
	<c path="native.events.Event"/>
	<e path="Void"/>
</f></onData>
		<unload public="1" set="method" line="88"><f a=""><e path="Void"/></f></unload>
		<loadBytes public="1" set="method" line="77"><f a="bytes">
	<c path="native.utils.ByteArray"/>
	<e path="Void"/>
</f></loadBytes>
		<load public="1" set="method" line="69"><f a="request">
	<c path="native.net.URLRequest"/>
	<e path="Void"/>
</f></load>
		<doLoad set="method" line="38"><f a="inBytes">
	<c path="native.utils.ByteArray"/>
	<e path="Bool"/>
</f></doLoad>
		<nmeSWF>
			<c path="native.display.MovieClip"/>
			<haxe_doc>@private</haxe_doc>
		</nmeSWF>
		<nmeImage>
			<c path="native.display.BitmapData"/>
			<haxe_doc>@private</haxe_doc>
		</nmeImage>
		<contentLoaderInfo public="1" set="null"><c path="native.display.LoaderInfo"/></contentLoaderInfo>
		<content public="1" set="null"><c path="native.display.DisplayObject"/></content>
		<new public="1" set="method" line="27"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="native.net.URLLoader" params="" file="/home/joshua/Development/Haxe/nme/native/net/URLLoader.hx">
		<extends path="native.events.EventDispatcher"/>
		<activeLoaders line="36" static="1">
			<c path="List"><c path="native.net.URLLoader"/></c>
			<haxe_doc>@private</haxe_doc>
		</activeLoaders>
		<urlInvalid get="inline" set="null" line="37" static="1"><c path="Int"/></urlInvalid>
		<urlInit get="inline" set="null" line="38" static="1"><c path="Int"/></urlInit>
		<urlLoading get="inline" set="null" line="39" static="1"><c path="Int"/></urlLoading>
		<urlComplete get="inline" set="null" line="40" static="1"><c path="Int"/></urlComplete>
		<urlError get="inline" set="null" line="41" static="1"><c path="Int"/></urlError>
		<hasActive public="1" set="method" line="78" static="1"><f a=""><e path="Bool"/></f></hasActive>
		<initialize public="1" set="method" line="85" static="1"><f a="inCACertFilePath">
	<c path="String"/>
	<e path="Void"/>
</f></initialize>
		<nmeLoadPending public="1" set="method" line="159" static="1">
			<f a=""><e path="Bool"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeLoadPending>
		<nmePollData public="1" set="method" line="166" static="1">
			<f a=""><e path="Void"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmePollData>
		<nme_curl_create line="272" static="1"><f a="">
	<c path="native.net.URLRequest"/>
	<unknown/>
</f></nme_curl_create>
		<nme_curl_process_loaders line="273" static="1"><f a=""><unknown/></f></nme_curl_process_loaders>
		<nme_curl_update_loader line="274" static="1"><f a=":">
	<d/>
	<c path="native.net.URLLoader"/>
	<unknown/>
</f></nme_curl_update_loader>
		<nme_curl_get_code line="275" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_curl_get_code>
		<nme_curl_get_error_message line="276" static="1"><f a="">
	<d/>
	<c path="String"/>
</f></nme_curl_get_error_message>
		<nme_curl_get_data line="277" static="1"><f a="">
	<d/>
	<c path="native.utils.ByteArray"/>
</f></nme_curl_get_data>
		<nme_curl_get_cookies line="278" static="1"><f a="">
	<d/>
	<c path="Array"><c path="String"/></c>
</f></nme_curl_get_cookies>
		<nme_curl_initialize line="279" static="1"><f a="">
	<c path="String"/>
	<unknown/>
</f></nme_curl_initialize>
		<update set="method" line="202">
			<f a=""><e path="Void"/></f>
			<haxe_doc>@private</haxe_doc>
		</update>
		<dispatchHTTPStatus set="method" line="195">
			<f a="code">
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</dispatchHTTPStatus>
		<onError set="method" line="187">
			<f a="msg">
				<c path="String"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</onError>
		<nmeDataComplete set="method" line="139">
			<f a=""><e path="Void"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeDataComplete>
		<load public="1" set="method" line="92"><f a="request">
	<c path="native.net.URLRequest"/>
	<e path="Void"/>
</f></load>
		<getCookies public="1" set="method" line="71"><f a=""><c path="Array"><c path="String"/></c></f></getCookies>
		<close public="1" set="method" line="64"><f a=""><e path="Void"/></f></close>
		<nmeOnComplete public="1">
			<f a="">
				<d/>
				<e path="Bool"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeOnComplete>
		<state>
			<c path="Int"/>
			<haxe_doc>@private</haxe_doc>
		</state>
		<nmeHandle>
			<d/>
			<haxe_doc>@private</haxe_doc>
		</nmeHandle>
		<dataFormat public="1"><e path="native.net.URLLoaderDataFormat"/></dataFormat>
		<data public="1"><d/></data>
		<bytesTotal public="1" set="null"><c path="Int"/></bytesTotal>
		<bytesLoaded public="1" set="null"><c path="Int"/></bytesLoaded>
		<new public="1" set="method" line="48"><f a="?request">
	<c path="native.net.URLRequest"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.LoaderInfo" params="" file="/home/joshua/Development/Haxe/nme/native/display/LoaderInfo.hx">
		<extends path="native.net.URLLoader"/>
		<create public="1" set="method" line="50" static="1"><f a="ldr">
	<c path="native.display.Loader"/>
	<c path="native.display.LoaderInfo"/>
</f></create>
		<get_bytes set="method" line="106"><f a=""><c path="native.utils.ByteArray"/></f></get_bytes>
		<onURLLoaded set="method" line="92"><f a="event">
	<c path="native.events.Event"/>
	<e path="Void"/>
</f></onURLLoaded>
		<load public="1" set="method" line="60" override="1"><f a="request">
	<c path="native.net.URLRequest"/>
	<e path="Void"/>
</f></load>
		<pendingURL><c path="String"/></pendingURL>
		<width public="1" set="null"><c path="Int"/></width>
		<url public="1" set="null"><c path="String"/></url>
		<sharedEvents public="1" set="null"><c path="native.events.EventDispatcher"/></sharedEvents>
		<sameDomain public="1" set="null"><e path="Bool"/></sameDomain>
		<parentAllowsChild public="1" set="null"><e path="Bool"/></parentAllowsChild>
		<parameters public="1" set="null"><d><c path="String"/></d></parameters>
		<loaderURL public="1" set="null"><c path="String"/></loaderURL>
		<loader public="1" set="null"><c path="native.display.Loader"/></loader>
		<height public="1" set="null"><c path="Int"/></height>
		<frameRate public="1" set="null"><c path="Float"/></frameRate>
		<contentType public="1"><c path="String"/></contentType>
		<content public="1"><c path="native.display.DisplayObject"/></content>
		<childAllowsParent public="1" set="null"><e path="Bool"/></childAllowsParent>
		<bytes public="1" get="get_bytes" set="null"><c path="native.utils.ByteArray"/></bytes>
		<new set="method" line="35"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="native.events.Event" params="" file="/home/joshua/Development/Haxe/nme/native/events/Event.hx">
		<ACTIVATE public="1" line="8" static="1"><c path="String"/></ACTIVATE>
		<ADDED public="1" line="9" static="1"><c path="String"/></ADDED>
		<ADDED_TO_STAGE public="1" line="10" static="1"><c path="String"/></ADDED_TO_STAGE>
		<CANCEL public="1" line="11" static="1"><c path="String"/></CANCEL>
		<CHANGE public="1" line="12" static="1"><c path="String"/></CHANGE>
		<CLOSE public="1" line="13" static="1"><c path="String"/></CLOSE>
		<COMPLETE public="1" line="14" static="1"><c path="String"/></COMPLETE>
		<CONNECT public="1" line="15" static="1"><c path="String"/></CONNECT>
		<CONTEXT3D_CREATE public="1" line="16" static="1"><c path="String"/></CONTEXT3D_CREATE>
		<DEACTIVATE public="1" line="17" static="1"><c path="String"/></DEACTIVATE>
		<ENTER_FRAME public="1" line="18" static="1"><c path="String"/></ENTER_FRAME>
		<ID3 public="1" line="19" static="1"><c path="String"/></ID3>
		<INIT public="1" line="20" static="1"><c path="String"/></INIT>
		<MOUSE_LEAVE public="1" line="21" static="1"><c path="String"/></MOUSE_LEAVE>
		<OPEN public="1" line="22" static="1"><c path="String"/></OPEN>
		<REMOVED public="1" line="23" static="1"><c path="String"/></REMOVED>
		<REMOVED_FROM_STAGE public="1" line="24" static="1"><c path="String"/></REMOVED_FROM_STAGE>
		<RENDER public="1" line="25" static="1"><c path="String"/></RENDER>
		<RESIZE public="1" line="26" static="1"><c path="String"/></RESIZE>
		<SCROLL public="1" line="27" static="1"><c path="String"/></SCROLL>
		<SELECT public="1" line="28" static="1"><c path="String"/></SELECT>
		<SOUND_COMPLETE public="1" line="29" static="1"><c path="String"/></SOUND_COMPLETE>
		<TAB_CHILDREN_CHANGE public="1" line="30" static="1"><c path="String"/></TAB_CHILDREN_CHANGE>
		<TAB_ENABLED_CHANGE public="1" line="31" static="1"><c path="String"/></TAB_ENABLED_CHANGE>
		<TAB_INDEX_CHANGE public="1" line="32" static="1"><c path="String"/></TAB_INDEX_CHANGE>
		<UNLOAD public="1" line="33" static="1"><c path="String"/></UNLOAD>
		<get_type set="method" line="132"><f a=""><c path="String"/></f></get_type>
		<set_target set="method" line="131"><f a="v">
	<d/>
	<d/>
</f></set_target>
		<get_target set="method" line="130"><f a=""><d/></f></get_target>
		<get_eventPhase set="method" line="129"><f a=""><c path="Int"/></f></get_eventPhase>
		<set_currentTarget set="method" line="128"><f a="v">
	<d/>
	<d/>
</f></set_currentTarget>
		<get_currentTarget set="method" line="127"><f a=""><d/></f></get_currentTarget>
		<get_cancelable set="method" line="126"><f a=""><e path="Bool"/></f></get_cancelable>
		<get_bubbles set="method" line="125"><f a=""><e path="Bool"/></f></get_bubbles>
		<toString public="1" set="method" line="111"><f a=""><c path="String"/></f></toString>
		<stopPropagation public="1" set="method" line="103"><f a=""><e path="Void"/></f></stopPropagation>
		<stopImmediatePropagation public="1" set="method" line="95"><f a=""><e path="Void"/></f></stopImmediatePropagation>
		<nmeSetPhase public="1" set="method" line="87">
			<f a="inPhase">
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeSetPhase>
		<nmeGetIsCancelledNow public="1" set="method" line="80">
			<f a=""><e path="Bool"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeGetIsCancelledNow>
		<nmeGetIsCancelled public="1" set="method" line="73">
			<f a=""><e path="Bool"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeGetIsCancelled>
		<clone public="1" set="method" line="66"><f a=""><c path="native.events.Event"/></f></clone>
		<nmeIsCancelledNow>
			<e path="Bool"/>
			<haxe_doc>@private</haxe_doc>
		</nmeIsCancelledNow>
		<nmeIsCancelled>
			<e path="Bool"/>
			<haxe_doc>@private</haxe_doc>
		</nmeIsCancelled>
		<_type>
			<c path="String"/>
			<haxe_doc>@private</haxe_doc>
		</_type>
		<_target>
			<d/>
			<haxe_doc>@private</haxe_doc>
		</_target>
		<_eventPhase>
			<c path="Int"/>
			<haxe_doc>@private</haxe_doc>
		</_eventPhase>
		<_currentTarget>
			<d/>
			<haxe_doc>@private</haxe_doc>
		</_currentTarget>
		<_cancelable>
			<e path="Bool"/>
			<haxe_doc>@private</haxe_doc>
		</_cancelable>
		<_bubbles>
			<e path="Bool"/>
			<haxe_doc>@private</haxe_doc>
		</_bubbles>
		<type public="1" get="get_type" set="null"><c path="String"/></type>
		<target public="1" get="get_target" set="set_target"><d/></target>
		<eventPhase public="1" get="get_eventPhase" set="null"><c path="Int"/></eventPhase>
		<currentTarget public="1" get="get_currentTarget" set="set_currentTarget"><d/></currentTarget>
		<cancelable public="1" get="get_cancelable" set="null"><e path="Bool"/></cancelable>
		<bubbles public="1" get="get_bubbles" set="null"><e path="Bool"/></bubbles>
		<new public="1" set="method" line="52"><f a="type:?bubbles:?cancelable">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.MouseEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/MouseEvent.hx">
		<extends path="native.events.Event"/>
		<DOUBLE_CLICK public="1" line="12" static="1"><c path="String"/></DOUBLE_CLICK>
		<CLICK public="1" line="13" static="1"><c path="String"/></CLICK>
		<MIDDLE_CLICK public="1" line="14" static="1"><c path="String"/></MIDDLE_CLICK>
		<MIDDLE_MOUSE_DOWN public="1" line="15" static="1"><c path="String"/></MIDDLE_MOUSE_DOWN>
		<MIDDLE_MOUSE_UP public="1" line="16" static="1"><c path="String"/></MIDDLE_MOUSE_UP>
		<MOUSE_DOWN public="1" line="17" static="1"><c path="String"/></MOUSE_DOWN>
		<MOUSE_MOVE public="1" line="18" static="1"><c path="String"/></MOUSE_MOVE>
		<MOUSE_OUT public="1" line="19" static="1"><c path="String"/></MOUSE_OUT>
		<MOUSE_OVER public="1" line="20" static="1"><c path="String"/></MOUSE_OVER>
		<MOUSE_UP public="1" line="21" static="1"><c path="String"/></MOUSE_UP>
		<MOUSE_WHEEL public="1" line="22" static="1"><c path="String"/></MOUSE_WHEEL>
		<RIGHT_CLICK public="1" line="23" static="1"><c path="String"/></RIGHT_CLICK>
		<RIGHT_MOUSE_DOWN public="1" line="24" static="1"><c path="String"/></RIGHT_MOUSE_DOWN>
		<RIGHT_MOUSE_UP public="1" line="25" static="1"><c path="String"/></RIGHT_MOUSE_UP>
		<ROLL_OUT public="1" line="26" static="1"><c path="String"/></ROLL_OUT>
		<ROLL_OVER public="1" line="27" static="1"><c path="String"/></ROLL_OVER>
		<efLeftDown line="42" static="1"><c path="Int"/></efLeftDown>
		<efShiftDown line="43" static="1"><c path="Int"/></efShiftDown>
		<efCtrlDown line="44" static="1"><c path="Int"/></efCtrlDown>
		<efAltDown line="45" static="1"><c path="Int"/></efAltDown>
		<efCommandDown line="46" static="1"><c path="Int"/></efCommandDown>
		<nmeCreate public="1" set="method" line="74" static="1">
			<f a="inType:inEvent:inLocal:inTarget">
				<c path="String"/>
				<d/>
				<c path="native.geom.Point"/>
				<c path="native.display.InteractiveObject"/>
				<c path="native.events.MouseEvent"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeCreate>
		<updateAfterEvent public="1" set="method" line="108"><f a=""><e path="Void"/></f></updateAfterEvent>
		<toString public="1" set="method" line="101" override="1"><f a=""><c path="String"/></f></toString>
		<nmeCreateSimilar public="1" set="method" line="86">
			<f a="inType:?related:?targ">
				<c path="String"/>
				<c path="native.display.InteractiveObject"/>
				<c path="native.display.InteractiveObject"/>
				<c path="native.events.MouseEvent"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeCreateSimilar>
		<clone public="1" set="method" line="67" override="1"><f a=""><c path="native.events.Event"/></f></clone>
		<stageY public="1"><c path="Float"/></stageY>
		<stageX public="1"><c path="Float"/></stageX>
		<shiftKey public="1"><e path="Bool"/></shiftKey>
		<relatedObject public="1"><c path="native.display.InteractiveObject"/></relatedObject>
		<localY public="1"><c path="Float"/></localY>
		<localX public="1"><c path="Float"/></localX>
		<delta public="1"><c path="Int"/></delta>
		<ctrlKey public="1"><e path="Bool"/></ctrlKey>
		<commandKey public="1"><e path="Bool"/></commandKey>
		<clickCount public="1"><c path="Int"/></clickCount>
		<buttonDown public="1"><e path="Bool"/></buttonDown>
		<altKey public="1"><e path="Bool"/></altKey>
		<new public="1" set="method" line="49"><f a="type:?bubbles:?cancelable:?localX:?localY:?relatedObject:?ctrlKey:?altKey:?shiftKey:?buttonDown:?delta:?commandKey:?clickCount">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="native.display.InteractiveObject"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.TouchEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/TouchEvent.hx">
		<extends path="native.events.MouseEvent"/>
		<TOUCH_BEGIN public="1" line="12" static="1"><c path="String"/></TOUCH_BEGIN>
		<TOUCH_END public="1" line="13" static="1"><c path="String"/></TOUCH_END>
		<TOUCH_MOVE public="1" line="14" static="1"><c path="String"/></TOUCH_MOVE>
		<TOUCH_OUT public="1" line="15" static="1"><c path="String"/></TOUCH_OUT>
		<TOUCH_OVER public="1" line="16" static="1"><c path="String"/></TOUCH_OVER>
		<TOUCH_ROLL_OUT public="1" line="17" static="1"><c path="String"/></TOUCH_ROLL_OUT>
		<TOUCH_ROLL_OVER public="1" line="18" static="1"><c path="String"/></TOUCH_ROLL_OVER>
		<TOUCH_TAP public="1" line="19" static="1"><c path="String"/></TOUCH_TAP>
		<nmeCreate public="1" set="method" line="40" static="1"><f a="inType:inEvent:inLocal:inTarget:sizeX:sizeY">
	<c path="String"/>
	<d/>
	<c path="native.geom.Point"/>
	<c path="native.display.InteractiveObject"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="native.events.TouchEvent"/>
</f></nmeCreate>
		<nmeCreateSimilar public="1" set="method" line="52" override="1"><f a="inType:?related:?targ">
	<c path="String"/>
	<c path="native.display.InteractiveObject"/>
	<c path="native.display.InteractiveObject"/>
	<c path="native.events.MouseEvent"/>
</f></nmeCreateSimilar>
		<sizeY public="1"><c path="Float"/></sizeY>
		<sizeX public="1"><c path="Float"/></sizeX>
		<touchPointID public="1"><c path="Int"/></touchPointID>
		<isPrimaryTouchPoint public="1"><e path="Bool"/></isPrimaryTouchPoint>
		<new public="1" set="method" line="28"><f a="type:?bubbles:?cancelable:?in_localX:?in_localY:?in_sizeX:?in_sizeY:?in_relatedObject:?in_ctrlKey:?in_altKey:?in_shiftKey:?in_buttonDown:?in_delta:?in_commandKey:?in_clickCount">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="native.display.InteractiveObject"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.Stage" params="" file="/home/joshua/Development/Haxe/nme/native/display/Stage.hx">
		<extends path="native.display.DisplayObjectContainer"/>
		<nmeEarlyWakeup public="1" line="38" static="1">
			<c path="Float"/>
			<haxe_doc>* Time, in seconds, we wake up before the frame is due.  We then do a
	 * "busy wait" to ensure the frame comes at the right time.  By increasing this number,
	 * the frame rate will be more constant, but the busy wait will take more CPU.
	 * @private</haxe_doc>
		</nmeEarlyWakeup>
		<OrientationPortrait public="1" line="40" static="1"><c path="Int"/></OrientationPortrait>
		<OrientationPortraitUpsideDown public="1" line="41" static="1"><c path="Int"/></OrientationPortraitUpsideDown>
		<OrientationLandscapeRight public="1" line="42" static="1"><c path="Int"/></OrientationLandscapeRight>
		<OrientationLandscapeLeft public="1" line="43" static="1"><c path="Int"/></OrientationLandscapeLeft>
		<OrientationFaceUp public="1" line="44" static="1"><c path="Int"/></OrientationFaceUp>
		<OrientationFaceDown public="1" line="45" static="1"><c path="Int"/></OrientationFaceDown>
		<efLeftDown line="68" static="1"><c path="Int"/></efLeftDown>
		<efShiftDown line="69" static="1"><c path="Int"/></efShiftDown>
		<efCtrlDown line="70" static="1"><c path="Int"/></efCtrlDown>
		<efAltDown line="71" static="1"><c path="Int"/></efAltDown>
		<efCommandDown line="72" static="1"><c path="Int"/></efCommandDown>
		<efLocationRight line="73" static="1"><c path="Int"/></efLocationRight>
		<efNoNativeClick line="74" static="1"><c path="Int"/></efNoNativeClick>
		<nmeMouseChanges line="75" static="1"><c path="Array"><c path="String"/></c></nmeMouseChanges>
		<nmeTouchChanges line="76" static="1"><c path="Array"><c path="String"/></c></nmeTouchChanges>
		<sClickEvents line="77" static="1"><c path="Array"><c path="String"/></c></sClickEvents>
		<sDownEvents line="78" static="1"><c path="Array"><c path="String"/></c></sDownEvents>
		<sUpEvents line="79" static="1"><c path="Array"><c path="String"/></c></sUpEvents>
		<getOrientation public="1" set="dynamic" line="128" static="1"><f a=""><c path="Int"/></f></getOrientation>
		<getNormalOrientation public="1" set="dynamic" line="135" static="1"><f a=""><c path="Int"/></f></getNormalOrientation>
		<setFixedOrientation public="1" set="method" line="866" static="1"><f a="inOrientation">
	<c path="Int"/>
	<e path="Void"/>
</f></setFixedOrientation>
		<shouldRotateInterface public="1" set="dynamic" line="874" static="1"><f a="inOrientation">
	<c path="Int"/>
	<e path="Bool"/>
</f></shouldRotateInterface>
		<nme_set_stage_handler line="1039" static="1"><f a=":::">
	<d/>
	<f a="inEvent">
		<d/>
		<d/>
	</f>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_set_stage_handler>
		<nme_render_stage line="1040" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_render_stage>
		<nme_stage_get_focus_id line="1041" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_stage_get_focus_id>
		<nme_stage_set_focus line="1042" static="1"><f a="::">
	<d/>
	<unknown/>
	<c path="Int"/>
	<unknown/>
</f></nme_stage_set_focus>
		<nme_stage_get_focus_rect line="1043" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_stage_get_focus_rect>
		<nme_stage_set_focus_rect line="1044" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_stage_set_focus_rect>
		<nme_stage_is_opengl line="1045" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_stage_is_opengl>
		<nme_stage_get_stage_width line="1046" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_stage_get_stage_width>
		<nme_stage_get_stage_height line="1047" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_stage_get_stage_height>
		<nme_stage_get_dpi_scale line="1048" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_stage_get_dpi_scale>
		<nme_stage_get_scale_mode line="1049" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_stage_get_scale_mode>
		<nme_stage_set_scale_mode line="1050" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_stage_set_scale_mode>
		<nme_stage_get_align line="1051" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_stage_get_align>
		<nme_stage_set_align line="1052" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_stage_set_align>
		<nme_stage_get_quality line="1053" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_stage_get_quality>
		<nme_stage_set_quality line="1054" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_stage_set_quality>
		<nme_stage_get_display_state line="1055" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_stage_get_display_state>
		<nme_stage_set_display_state line="1056" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_stage_set_display_state>
		<nme_stage_set_next_wake line="1057" static="1"><f a=":">
	<d/>
	<c path="Float"/>
	<unknown/>
</f></nme_stage_set_next_wake>
		<nme_stage_request_render line="1058" static="1"><unknown/></nme_stage_request_render>
		<nme_stage_show_cursor line="1059" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_stage_show_cursor>
		<nme_stage_set_fixed_orientation line="1060" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_stage_set_fixed_orientation>
		<nme_stage_get_orientation line="1061" static="1"><f a=""><c path="Int"/></f></nme_stage_get_orientation>
		<nme_stage_get_normal_orientation line="1062" static="1"><f a=""><c path="Int"/></f></nme_stage_get_normal_orientation>
		<get_stageWidth set="method" line="1025"><f a=""><c path="Int"/></f></get_stageWidth>
		<get_stageHeight set="method" line="1018"><f a=""><c path="Int"/></f></get_stageHeight>
		<set_stageFocusRect set="method" line="1010"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_stageFocusRect>
		<get_stageFocusRect set="method" line="1009"><f a=""><e path="Bool"/></f></get_stageFocusRect>
		<get_stage set="method" line="1002" override="1"><f a=""><c path="native.display.Stage"/></f></get_stage>
		<set_scaleMode set="method" line="994"><f a="inMode">
	<e path="native.display.StageScaleMode"/>
	<e path="native.display.StageScaleMode"/>
</f></set_scaleMode>
		<get_scaleMode set="method" line="986"><f a=""><e path="native.display.StageScaleMode"/></f></get_scaleMode>
		<set_quality set="method" line="978"><f a="inQuality">
	<e path="native.display.StageQuality"/>
	<e path="native.display.StageQuality"/>
</f></set_quality>
		<get_quality set="method" line="970"><f a=""><e path="native.display.StageQuality"/></f></get_quality>
		<get_isOpenGL set="method" line="963"><f a=""><e path="Bool"/></f></get_isOpenGL>
		<set_frameRate set="method" line="954"><f a="inRate">
	<c path="Float"/>
	<c path="Float"/>
</f></set_frameRate>
		<set_focus set="method" line="943"><f a="inObject">
	<c path="native.display.InteractiveObject"/>
	<c path="native.display.InteractiveObject"/>
</f></set_focus>
		<get_focus set="method" line="934"><f a=""><c path="native.display.InteractiveObject"/></f></get_focus>
		<get_dpiScale set="method" line="927"><f a=""><c path="Float"/></f></get_dpiScale>
		<set_displayState set="method" line="919"><f a="inState">
	<e path="native.display.StageDisplayState"/>
	<e path="native.display.StageDisplayState"/>
</f></set_displayState>
		<get_displayState set="method" line="911"><f a=""><e path="native.display.StageDisplayState"/></f></get_displayState>
		<set_align set="method" line="903"><f a="inMode">
	<e path="native.display.StageAlign"/>
	<e path="native.display.StageAlign"/>
</f></set_align>
		<get_align set="method" line="895"><f a=""><e path="native.display.StageAlign"/></f></get_align>
		<showCursor public="1" set="method" line="881"><f a="inShow">
	<e path="Bool"/>
	<e path="Void"/>
</f></showCursor>
		<nmeUpdateNextWake public="1" set="method" line="844">
			<f a=""><c path="Float"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeUpdateNextWake>
		<nmeStopDrag public="1" set="method" line="836">
			<f a="sprite">
				<c path="native.display.Sprite"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeStopDrag>
		<nmeStartDrag public="1" set="method" line="807">
			<f a="sprite:lockCenter:bounds">
				<c path="native.display.Sprite"/>
				<e path="Bool"/>
				<c path="native.geom.Rectangle"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeStartDrag>
		<nmeSetActive public="1" set="method" line="788">
			<f a="inActive">
				<e path="Bool"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeSetActive>
		<nmeRender public="1" set="method" line="766">
			<f a="inSendEnterFrame">
				<e path="Bool"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeRender>
		<nmePollTimers public="1" set="method" line="755">
			<f a=""><e path="Void"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmePollTimers>
		<nmeOnTouch set="method" line="711">
			<f a="inEvent:inType:touchInfo">
				<d/>
				<c path="String"/>
				<c path="native.display.TouchInfo"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeOnTouch>
		<nmeOnSysWM set="method" line="703"><f a="inEvent">
	<d/>
	<e path="Void"/>
</f></nmeOnSysWM>
		<nmeOnResize set="method" line="695">
			<f a="inW:inH">
				<c path="Float"/>
				<c path="Float"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeOnResize>
		<nmeOnMouse set="method" line="597">
			<f a="inEvent:inType:inFromMouse">
				<d/>
				<c path="String"/>
				<e path="Bool"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeOnMouse>
		<nmeOnKey set="method" line="554">
			<f a="inEvent:inType">
				<d/>
				<c path="String"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeOnKey>
		<nmeOnJoystick set="method" line="485">
			<f a="inEvent:inType">
				<d/>
				<c path="String"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeOnJoystick>
		<nmeOnFocus set="method" line="455">
			<f a="inEvent">
				<d/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeOnFocus>
		<nmeOnChange set="method" line="446">
			<f a="inEvent">
				<a><id set="null"><c path="Int"/></id></a>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeOnChange>
		<nmeNextFrameDue set="method" line="428">
			<f a="inOtherTimers">
				<c path="Float"/>
				<c path="Float"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeNextFrameDue>
		<nmeDrag set="method" line="403">
			<f a="inMouse">
				<c path="native.geom.Point"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeDrag>
		<nmeProcessStageEvent set="method" line="395">
			<f a="inEvent">
				<d/>
				<d/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeProcessStageEvent>
		<dummyTrace set="method" line="388"><f a=""><e path="Void"/></f></dummyTrace>
		<nmeDoProcessStageEvent set="method" line="268">
			<f a="inEvent">
				<d/>
				<c path="Float"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeDoProcessStageEvent>
		<nmeCheckRender set="method" line="247">
			<f a=""><e path="Void"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeCheckRender>
		<nmeCheckInOuts set="method" line="191">
			<f a="inEvent:inStack:?touchInfo">
				<c path="native.events.MouseEvent"/>
				<c path="Array"><c path="native.display.InteractiveObject"/></c>
				<c path="native.display.TouchInfo"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeCheckInOuts>
		<nmeCheckFocusInOuts set="method" line="149">
			<f a="inEvent:inStack">
				<d/>
				<c path="Array"><c path="native.display.InteractiveObject"/></c>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeCheckFocusInOuts>
		<invalidate public="1" set="method" line="142"><f a=""><e path="Void"/></f></invalidate>
		<nmeTouchInfo>
			<c path="IntHash"><c path="native.display.TouchInfo"/></c>
			<haxe_doc>@private</haxe_doc>
		</nmeTouchInfo>
		<nmeMouseOverObjects>
			<c path="Array"><c path="native.display.InteractiveObject"/></c>
			<haxe_doc>@private</haxe_doc>
		</nmeMouseOverObjects>
		<nmeLastRender>
			<c path="Float"/>
			<haxe_doc>@private</haxe_doc>
		</nmeLastRender>
		<nmeLastDown>
			<c path="Array"><c path="native.display.InteractiveObject"/></c>
			<haxe_doc>@private</haxe_doc>
		</nmeLastDown>
		<nmeLastClickTime>
			<c path="Float"/>
			<haxe_doc>@private</haxe_doc>
		</nmeLastClickTime>
		<nmeInvalid>
			<e path="Bool"/>
			<haxe_doc>@private</haxe_doc>
		</nmeInvalid>
		<nmeFramePeriod>
			<c path="Float"/>
			<haxe_doc>@private</haxe_doc>
		</nmeFramePeriod>
		<nmeFocusOverObjects>
			<c path="Array"><c path="native.display.InteractiveObject"/></c>
			<haxe_doc>@private</haxe_doc>
		</nmeFocusOverObjects>
		<nmeDragOffsetY>
			<c path="Float"/>
			<haxe_doc>@private</haxe_doc>
		</nmeDragOffsetY>
		<nmeDragOffsetX>
			<c path="Float"/>
			<haxe_doc>@private</haxe_doc>
		</nmeDragOffsetX>
		<nmeDragObject>
			<c path="native.display.Sprite"/>
			<haxe_doc>@private</haxe_doc>
		</nmeDragObject>
		<nmeDragBounds>
			<c path="native.geom.Rectangle"/>
			<haxe_doc>@private</haxe_doc>
		</nmeDragBounds>
		<nmeJoyAxisData>
			<c path="IntHash"><c path="Array"><c path="Float"/></c></c>
			<haxe_doc>@private</haxe_doc>
		</nmeJoyAxisData>
		<stageWidth public="1" get="get_stageWidth" set="null"><c path="Int"/></stageWidth>
		<stageHeight public="1" get="get_stageHeight" set="null"><c path="Int"/></stageHeight>
		<stageFocusRect public="1" get="get_stageFocusRect" set="set_stageFocusRect"><e path="Bool"/></stageFocusRect>
		<scaleMode public="1" get="get_scaleMode" set="set_scaleMode"><e path="native.display.StageScaleMode"/></scaleMode>
		<renderRequest public="1"><f a=""><e path="Void"/></f></renderRequest>
		<quality public="1" get="get_quality" set="set_quality"><e path="native.display.StageQuality"/></quality>
		<pauseWhenDeactivated public="1"><e path="Bool"/></pauseWhenDeactivated>
		<onQuit public="1"><f a=""><e path="Void"/></f></onQuit>
		<onKey public="1"><f a=":::">
	<c path="Int"/>
	<e path="Bool"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></onKey>
		<isOpenGL public="1" get="get_isOpenGL" set="null"><e path="Bool"/></isOpenGL>
		<frameRate public="1" set="set_frameRate"><c path="Float"/></frameRate>
		<focus public="1" get="get_focus" set="set_focus"><c path="native.display.InteractiveObject"/></focus>
		<dpiScale public="1" get="get_dpiScale" set="null"><c path="Float"/></dpiScale>
		<displayState public="1" get="get_displayState" set="set_displayState"><e path="native.display.StageDisplayState"/></displayState>
		<align public="1" get="get_align" set="set_align"><e path="native.display.StageAlign"/></align>
		<active public="1" set="null"><e path="Bool"/></active>
		<new public="1" set="method" line="96"><f a="inHandle:inWidth:inHeight">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.ManagedStage" params="" file="/home/joshua/Development/Haxe/nme/native/display/ManagedStage.hx">
		<extends path="native.display.Stage"/>
		<etUnknown public="1" get="inline" set="null" line="11" static="1"><c path="Int"/></etUnknown>
		<etKeyDown public="1" get="inline" set="null" line="12" static="1"><c path="Int"/></etKeyDown>
		<etChar public="1" get="inline" set="null" line="13" static="1"><c path="Int"/></etChar>
		<etKeyUp public="1" get="inline" set="null" line="14" static="1"><c path="Int"/></etKeyUp>
		<etMouseMove public="1" get="inline" set="null" line="15" static="1"><c path="Int"/></etMouseMove>
		<etMouseDown public="1" get="inline" set="null" line="16" static="1"><c path="Int"/></etMouseDown>
		<etMouseClick public="1" get="inline" set="null" line="17" static="1"><c path="Int"/></etMouseClick>
		<etMouseUp public="1" get="inline" set="null" line="18" static="1"><c path="Int"/></etMouseUp>
		<etResize public="1" get="inline" set="null" line="19" static="1"><c path="Int"/></etResize>
		<etPoll public="1" get="inline" set="null" line="20" static="1"><c path="Int"/></etPoll>
		<etQuit public="1" get="inline" set="null" line="21" static="1"><c path="Int"/></etQuit>
		<etFocus public="1" get="inline" set="null" line="22" static="1"><c path="Int"/></etFocus>
		<etShouldRotate public="1" get="inline" set="null" line="23" static="1"><c path="Int"/></etShouldRotate>
		<etDestroyHandler public="1" get="inline" set="null" line="24" static="1"><c path="Int"/></etDestroyHandler>
		<etRedraw public="1" get="inline" set="null" line="25" static="1"><c path="Int"/></etRedraw>
		<etTouchBegin public="1" get="inline" set="null" line="26" static="1"><c path="Int"/></etTouchBegin>
		<etTouchMove public="1" get="inline" set="null" line="27" static="1"><c path="Int"/></etTouchMove>
		<etTouchEnd public="1" get="inline" set="null" line="28" static="1"><c path="Int"/></etTouchEnd>
		<etTouchTap public="1" get="inline" set="null" line="29" static="1"><c path="Int"/></etTouchTap>
		<etChange public="1" get="inline" set="null" line="30" static="1"><c path="Int"/></etChange>
		<efLeftDown public="1" get="inline" set="null" line="31" static="1"><c path="Int"/></efLeftDown>
		<efShiftDown public="1" get="inline" set="null" line="32" static="1"><c path="Int"/></efShiftDown>
		<efCtrlDown public="1" get="inline" set="null" line="33" static="1"><c path="Int"/></efCtrlDown>
		<efAltDown public="1" get="inline" set="null" line="34" static="1"><c path="Int"/></efAltDown>
		<efCommandDown public="1" get="inline" set="null" line="35" static="1"><c path="Int"/></efCommandDown>
		<efMiddleDown public="1" get="inline" set="null" line="36" static="1"><c path="Int"/></efMiddleDown>
		<efRightDown public="1" get="inline" set="null" line="37" static="1"><c path="Int"/></efRightDown>
		<efLocationRight public="1" get="inline" set="null" line="38" static="1"><c path="Int"/></efLocationRight>
		<efPrimaryTouch public="1" get="inline" set="null" line="39" static="1"><c path="Int"/></efPrimaryTouch>
		<nme_managed_stage_create line="119" static="1"><f a="::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_managed_stage_create>
		<nme_managed_stage_pump_event line="120" static="1"><f a=":">
	<d/>
	<d/>
	<unknown/>
</f></nme_managed_stage_pump_event>
		<setNextWake public="1" set="dynamic" line="105"><f a="inDelay">
	<c path="Float"/>
	<e path="Void"/>
</f></setNextWake>
		<sendQuit public="1" set="method" line="98"><f a=""><e path="Void"/></f></sendQuit>
		<resize public="1" set="method" line="91"><f a="inWidth:inHeight">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></resize>
		<pumpEvent public="1" set="method" line="84"><f a="inEvent">
	<d/>
	<e path="Void"/>
</f></pumpEvent>
		<nmeRender public="1" set="method" line="75" override="1">
			<f a="inSendEnterFrame">
				<e path="Bool"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeRender>
		<nmeDoProcessStageEvent set="method" line="63" override="1"><f a="inEvent">
	<d/>
	<c path="Float"/>
</f></nmeDoProcessStageEvent>
		<endRender public="1" set="dynamic" line="56"><f a=""><e path="Void"/></f></endRender>
		<beginRender public="1" set="dynamic" line="49"><f a=""><e path="Void"/></f></beginRender>
		<new public="1" set="method" line="42"><f a="inWidth:inHeight:?inFlags">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.display.MovieClip" params="" file="/home/joshua/Development/Haxe/nme/native/display/MovieClip.hx">
		<extends path="native.display.Sprite"/>
		<get_totalFrames set="method" line="71">
			<f a=""><c path="Int"/></f>
			<haxe_doc>@private</haxe_doc>
		</get_totalFrames>
		<get_framesLoaded set="method" line="70">
			<f a=""><c path="Int"/></f>
			<haxe_doc>@private</haxe_doc>
		</get_framesLoaded>
		<get_currentFrame set="method" line="69">
			<f a=""><c path="Int"/></f>
			<haxe_doc>@private</haxe_doc>
		</get_currentFrame>
		<stop public="1" set="method" line="55"><f a=""><e path="Void"/></f></stop>
		<play public="1" set="method" line="48"><f a=""><e path="Void"/></f></play>
		<nmeGetType set="method" line="41" override="1">
			<f a=""><c path="String"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeGetType>
		<gotoAndStop public="1" set="method" line="34"><f a="frame:?scene">
	<d/>
	<c path="String"/>
	<e path="Void"/>
</f></gotoAndStop>
		<gotoAndPlay public="1" set="method" line="27"><f a="frame:?scene">
	<d/>
	<c path="String"/>
	<e path="Void"/>
</f></gotoAndPlay>
		<mTotalFrames>
			<c path="Int"/>
			<haxe_doc>@private</haxe_doc>
		</mTotalFrames>
		<mCurrentFrame>
			<c path="Int"/>
			<haxe_doc>@private</haxe_doc>
		</mCurrentFrame>
		<totalFrames public="1" get="get_totalFrames" set="null"><c path="Int"/></totalFrames>
		<framesLoaded public="1" get="get_framesLoaded" set="null"><c path="Int"/></framesLoaded>
		<enabled public="1"><e path="Bool"/></enabled>
		<currentFrame public="1" get="get_currentFrame" set="null"><c path="Int"/></currentFrame>
		<new public="1" set="method" line="17"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="native.display.OpenGLView" params="" file="/home/joshua/Development/Haxe/nme/native/display/OpenGLView.hx">
		<extends path="native.display.DirectRenderer"/>
		<CONTEXT_LOST public="1" get="inline" set="null" line="14" static="1"><c path="String"/></CONTEXT_LOST>
		<CONTEXT_RESTORED public="1" get="inline" set="null" line="15" static="1"><c path="String"/></CONTEXT_RESTORED>
		<isSupported public="1" get="get_isSupported" set="null" static="1"><e path="Bool"/></isSupported>
		<get_isSupported get="inline" set="null" line="36" static="1"><f a=""><e path="Bool"/></f></get_isSupported>
		<new public="1" set="method" line="22"><f a=""><e path="Void"/></f></new>
	</class>
	<enum path="native.display.PixelSnapping" params="" file="/home/joshua/Development/Haxe/nme/native/display/PixelSnapping.hx">
		<NEVER/>
		<AUTO/>
		<ALWAYS/>
	</enum>
	<class path="native.display.Shape" params="" file="/home/joshua/Development/Haxe/nme/native/display/Shape.hx">
		<extends path="native.display.DisplayObject"/>
		<new public="1" set="method" line="8"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="native.display.SimpleButton" params="" file="/home/joshua/Development/Haxe/nme/native/display/SimpleButton.hx">
		<extends path="native.display.InteractiveObject"/>
		<nme_simple_button_set_state line="101" static="1"><f a="::">
	<d/>
	<c path="Int"/>
	<t path="Null"><unknown/></t>
	<unknown/>
</f></nme_simple_button_set_state>
		<nme_simple_button_get_enabled line="102" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_simple_button_get_enabled>
		<nme_simple_button_set_enabled line="103" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_simple_button_set_enabled>
		<nme_simple_button_get_hand_cursor line="104" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_simple_button_get_hand_cursor>
		<nme_simple_button_set_hand_cursor line="105" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_simple_button_set_hand_cursor>
		<nme_simple_button_create line="106" static="1"><f a=""><unknown/></f></nme_simple_button_create>
		<set_upState public="1" set="method" line="85"><f a="inState">
	<c path="native.display.DisplayObject"/>
	<c path="native.display.DisplayObject"/>
</f></set_upState>
		<set_overState public="1" set="method" line="76"><f a="inState">
	<c path="native.display.DisplayObject"/>
	<c path="native.display.DisplayObject"/>
</f></set_overState>
		<set_hitTestState set="method" line="67"><f a="inState">
	<c path="native.display.DisplayObject"/>
	<c path="native.display.DisplayObject"/>
</f></set_hitTestState>
		<set_useHandCursor set="method" line="59"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_useHandCursor>
		<get_useHandCursor set="method" line="58"><f a=""><e path="Bool"/></f></get_useHandCursor>
		<set_enabled set="method" line="50"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_enabled>
		<get_enabled set="method" line="49"><f a=""><e path="Bool"/></f></get_enabled>
		<set_downState set="method" line="40"><f a="inState">
	<c path="native.display.DisplayObject"/>
	<c path="native.display.DisplayObject"/>
</f></set_downState>
		<useHandCursor public="1" get="get_useHandCursor" set="set_useHandCursor"><e path="Bool"/></useHandCursor>
		<upState public="1" set="set_upState"><c path="native.display.DisplayObject"/></upState>
		<overState public="1" set="set_overState"><c path="native.display.DisplayObject"/></overState>
		<hitTestState public="1" set="set_hitTestState"><c path="native.display.DisplayObject"/></hitTestState>
		<enabled public="1" get="get_enabled" set="set_enabled"><e path="Bool"/></enabled>
		<downState public="1" set="set_downState"><c path="native.display.DisplayObject"/></downState>
		<new public="1" set="method" line="21"><f a="?upState:?overState:?downState:?hitTestState">
	<c path="native.display.DisplayObject"/>
	<c path="native.display.DisplayObject"/>
	<c path="native.display.DisplayObject"/>
	<c path="native.display.DisplayObject"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="native.display.SpreadMethod" params="" file="/home/joshua/Development/Haxe/nme/native/display/SpreadMethod.hx">
		<REPEAT/>
		<REFLECT/>
		<PAD/>
	</enum>
	<class path="native.display.TouchInfo" params="" file="/home/joshua/Development/Haxe/nme/native/display/Stage.hx" module="native.display.Stage">
		<touchOverObjects public="1"><c path="Array"><c path="native.display.InteractiveObject"/></c></touchOverObjects>
		<new public="1" set="method" line="1074"><f a=""><e path="Void"/></f></new>
	</class>
	<enum path="native.display.StageAlign" params="" file="/home/joshua/Development/Haxe/nme/native/display/StageAlign.hx">
		<TOP_RIGHT/>
		<TOP_LEFT/>
		<TOP/>
		<RIGHT/>
		<LEFT/>
		<BOTTOM_RIGHT/>
		<BOTTOM_LEFT/>
		<BOTTOM/>
	</enum>
	<enum path="native.display.StageDisplayState" params="" file="/home/joshua/Development/Haxe/nme/native/display/StageDisplayState.hx">
		<NORMAL/>
		<FULL_SCREEN_INTERACTIVE/>
		<FULL_SCREEN/>
	</enum>
	<enum path="native.display.StageQuality" params="" file="/home/joshua/Development/Haxe/nme/native/display/StageQuality.hx">
		<MEDIUM/>
		<LOW/>
		<HIGH/>
		<BEST/>
	</enum>
	<enum path="native.display.StageScaleMode" params="" file="/home/joshua/Development/Haxe/nme/native/display/StageScaleMode.hx">
		<SHOW_ALL/>
		<NO_SCALE/>
		<NO_BORDER/>
		<EXACT_FIT/>
	</enum>
	<class path="native.display.Tilesheet" params="" file="/home/joshua/Development/Haxe/nme/native/display/Tilesheet.hx">
		<TILE_SCALE public="1" get="inline" set="null" line="14" static="1"><c path="Int"/></TILE_SCALE>
		<TILE_ROTATION public="1" get="inline" set="null" line="15" static="1"><c path="Int"/></TILE_ROTATION>
		<TILE_RGB public="1" get="inline" set="null" line="16" static="1"><c path="Int"/></TILE_RGB>
		<TILE_ALPHA public="1" get="inline" set="null" line="17" static="1"><c path="Int"/></TILE_ALPHA>
		<TILE_TRANS_2x2 public="1" get="inline" set="null" line="18" static="1"><c path="Int"/></TILE_TRANS_2x2>
		<TILE_BLEND_NORMAL public="1" get="inline" set="null" line="19" static="1"><c path="Int"/></TILE_BLEND_NORMAL>
		<TILE_BLEND_ADD public="1" get="inline" set="null" line="20" static="1"><c path="Int"/></TILE_BLEND_ADD>
		<nme_tilesheet_create line="55" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_tilesheet_create>
		<nme_tilesheet_add_rect line="56" static="1"><f a="::">
	<d/>
	<c path="native.geom.Rectangle"/>
	<c path="native.geom.Point"/>
	<unknown/>
</f></nme_tilesheet_add_rect>
		<drawTiles public="1" set="method" line="41"><f a="graphics:tileData:?smooth:?flags">
	<c path="native.display.Graphics"/>
	<c path="Array"><c path="Float"/></c>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Void"/>
</f></drawTiles>
		<addTileRect public="1" set="method" line="34"><f a="rectangle:?centerPoint">
	<c path="native.geom.Rectangle"/>
	<c path="native.geom.Point"/>
	<e path="Void"/>
</f></addTileRect>
		<nmeHandle public="1">
			<d/>
			<haxe_doc>@private</haxe_doc>
		</nmeHandle>
		<nmeBitmap public="1">
			<c path="native.display.BitmapData"/>
			<haxe_doc>@private</haxe_doc>
		</nmeBitmap>
		<new public="1" set="method" line="26"><f a="inImage">
	<c path="native.display.BitmapData"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="native.display.TriangleCulling" params="" file="/home/joshua/Development/Haxe/nme/native/display/TriangleCulling.hx">
		<POSITIVE/>
		<NONE/>
		<NEGATIVE/>
	</enum>
	<class path="native.errors.Error" params="" file="/home/joshua/Development/Haxe/nme/native/errors/Error.hx">
		<toString public="1" set="method" line="28"><f a=""><c path="String"/></f></toString>
		<getStackTrace set="method" line="21"><f a=""><c path="String"/></f></getStackTrace>
		<name public="1"><d/></name>
		<message public="1"><d/></message>
		<errorID public="1"><c path="Int"/></errorID>
		<new public="1" set="method" line="13"><f a="?inMessage:?id">
	<d/>
	<d/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.errors.ArgumentError" params="" file="/home/joshua/Development/Haxe/nme/native/errors/ArgumentError.hx">
		<extends path="native.errors.Error"/>
		<new public="1" set="method" line="5"><f a="?inMessage:?id">
	<d/>
	<d/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.errors.EOFError" params="" file="/home/joshua/Development/Haxe/nme/native/errors/EOFError.hx">
		<extends path="native.errors.Error"/>
		<new public="1" set="method" line="8"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="native.errors.IllegalOperationError" params="" file="/home/joshua/Development/Haxe/nme/native/errors/IllegalOperationError.hx">
		<extends path="native.errors.Error"/>
		<new public="1" set="method" line="5"><f a="?inMessage:?id">
	<d/>
	<d/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.errors.RangeError" params="" file="/home/joshua/Development/Haxe/nme/native/errors/RangeError.hx">
		<extends path="native.errors.Error"/>
		<new public="1" set="method" line="8"><f a="?inMessage">
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.errors.SecurityError" params="" file="/home/joshua/Development/Haxe/nme/native/errors/SecurityError.hx">
		<extends path="native.errors.Error"/>
		<new public="1" set="method" line="8"><f a="?inMessage">
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.errors.TypeError" params="" file="/home/joshua/Development/Haxe/nme/native/errors/TypeError.hx">
		<extends path="native.errors.Error"/>
		<new public="1" set="method" line="8"><f a="?inMessage">
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.AccelerometerEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/AccelerometerEvent.hx">
		<extends path="native.events.Event"/>
		<UPDATE public="1" static="1"><c path="String"/></UPDATE>
		<toString public="1" set="method" line="38" override="1"><f a=""><c path="String"/></f></toString>
		<clone public="1" set="method" line="31" override="1"><f a=""><c path="native.events.Event"/></f></clone>
		<timestamp public="1"><c path="Float"/></timestamp>
		<accelerationZ public="1"><c path="Float"/></accelerationZ>
		<accelerationY public="1"><c path="Float"/></accelerationY>
		<accelerationX public="1"><c path="Float"/></accelerationX>
		<new public="1" set="method" line="19"><f a="type:?bubbles:?cancelable:?timestamp:?accelerationX:?accelerationY:?accelerationZ">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.TextEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/TextEvent.hx">
		<extends path="native.events.Event"/>
		<LINK public="1" line="8" static="1"><c path="String"/></LINK>
		<TEXT_INPUT public="1" line="9" static="1"><c path="String"/></TEXT_INPUT>
		<toString public="1" set="method" line="30" override="1"><f a=""><c path="String"/></f></toString>
		<clone public="1" set="method" line="23" override="1"><f a=""><c path="native.events.Event"/></f></clone>
		<text public="1" set="null"><c path="String"/></text>
		<new public="1" set="method" line="14"><f a="type:?bubbles:?cancelable:?text">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.ErrorEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/ErrorEvent.hx">
		<extends path="native.events.TextEvent"/>
		<ERROR public="1" line="8" static="1"><c path="String"/></ERROR>
		<toString public="1" set="method" line="28" override="1"><f a=""><c path="String"/></f></toString>
		<clone public="1" set="method" line="21" override="1"><f a=""><c path="native.events.Event"/></f></clone>
		<errorID public="1" set="null"><c path="Int"/></errorID>
		<new public="1" set="method" line="13"><f a="type:?bubbles:?cancelable:?text:?id">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="String"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.Listener" params="" file="/home/joshua/Development/Haxe/nme/native/events/EventDispatcher.hx" module="native.events.EventDispatcher">
		<sIDs line="187" static="1"><c path="Int"/></sIDs>
		<Is public="1" set="method" line="207"><f a="inListener:inCapture">
	<t path="native.events.Function"/>
	<e path="Bool"/>
	<e path="Bool"/>
</f></Is>
		<dispatchEvent public="1" set="method" line="200"><f a="event">
	<c path="native.events.Event"/>
	<e path="Void"/>
</f></dispatchEvent>
		<mUseCapture public="1"><e path="Bool"/></mUseCapture>
		<mPriority public="1"><c path="Int"/></mPriority>
		<mListner public="1"><t path="native.events.Function"/></mListner>
		<mID public="1"><c path="Int"/></mID>
		<new public="1" set="method" line="190"><f a="inListener:inUseCapture:inPriority">
	<t path="native.events.Function"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<typedef path="native.events.ListenerList" params="" file="/home/joshua/Development/Haxe/nme/native/events/EventDispatcher.hx" module="native.events.EventDispatcher"><c path="Array"><c path="native.utils.WeakRef"><c path="native.events.Listener"/></c></c></typedef>
	<typedef path="native.events.EventMap" params="" file="/home/joshua/Development/Haxe/nme/native/events/EventDispatcher.hx" module="native.events.EventDispatcher"><c path="Hash"><t path="native.events.ListenerList"/></c></typedef>
	<class path="native.events.EventPhase" params="" file="/home/joshua/Development/Haxe/nme/native/events/EventPhase.hx">
		<CAPTURING_PHASE public="1" line="7" static="1"><c path="Int"/></CAPTURING_PHASE>
		<AT_TARGET public="1" line="8" static="1"><c path="Int"/></AT_TARGET>
		<BUBBLING_PHASE public="1" line="9" static="1"><c path="Int"/></BUBBLING_PHASE>
	</class>
	<class path="native.events.FocusEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/FocusEvent.hx">
		<extends path="native.events.Event"/>
		<FOCUS_IN public="1" line="11" static="1"><c path="String"/></FOCUS_IN>
		<FOCUS_OUT public="1" line="12" static="1"><c path="String"/></FOCUS_OUT>
		<KEY_FOCUS_CHANGE public="1" line="13" static="1"><c path="String"/></KEY_FOCUS_CHANGE>
		<MOUSE_FOCUS_CHANGE public="1" line="14" static="1"><c path="String"/></MOUSE_FOCUS_CHANGE>
		<toString public="1" set="method" line="39" override="1"><f a=""><c path="String"/></f></toString>
		<clone public="1" set="method" line="32" override="1"><f a=""><c path="native.events.Event"/></f></clone>
		<shiftKey public="1" set="null"><e path="Bool"/></shiftKey>
		<relatedObject public="1" set="null"><c path="native.display.InteractiveObject"/></relatedObject>
		<keyCode public="1" set="null"><c path="Int"/></keyCode>
		<new public="1" set="method" line="21"><f a="inType:?bubbles:?cancelable:?relatedObject:?shiftKey:?keyCode:?direction">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="native.display.InteractiveObject"/>
	<e path="Bool"/>
	<c path="Int"/>
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.HTTPStatusEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/HTTPStatusEvent.hx">
		<extends path="native.events.Event"/>
		<HTTP_STATUS public="1" line="8" static="1"><c path="String"/></HTTP_STATUS>
		<toString public="1" set="method" line="29" override="1"><f a=""><c path="String"/></f></toString>
		<clone public="1" set="method" line="22" override="1"><f a=""><c path="native.events.Event"/></f></clone>
		<status public="1"><c path="Int"/></status>
		<new public="1" set="method" line="13"><f a="inType:?bubbles:?cancelable:?status">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<typedef path="native.events.Function" params="" file="/home/joshua/Development/Haxe/nme/native/events/IEventDispatcher.hx" module="native.events.IEventDispatcher"><f a="">
	<d/>
	<e path="Void"/>
</f></typedef>
	<class path="native.events.IOErrorEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/IOErrorEvent.hx">
		<extends path="native.events.ErrorEvent"/>
		<IO_ERROR public="1" line="8" static="1"><c path="String"/></IO_ERROR>
		<toString public="1" set="method" line="25" override="1"><f a=""><c path="String"/></f></toString>
		<clone public="1" set="method" line="18" override="1"><f a=""><c path="native.events.Event"/></f></clone>
		<new public="1" set="method" line="11"><f a="inType:?bubbles:?cancelable:?text:?id">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="String"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.JoystickEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/JoystickEvent.hx">
		<extends path="native.events.Event"/>
		<AXIS_MOVE public="1" get="inline" set="null" line="8" static="1"><c path="String"/></AXIS_MOVE>
		<BALL_MOVE public="1" get="inline" set="null" line="9" static="1"><c path="String"/></BALL_MOVE>
		<BUTTON_DOWN public="1" get="inline" set="null" line="10" static="1"><c path="String"/></BUTTON_DOWN>
		<BUTTON_UP public="1" get="inline" set="null" line="11" static="1"><c path="String"/></BUTTON_UP>
		<HAT_MOVE public="1" get="inline" set="null" line="12" static="1"><c path="String"/></HAT_MOVE>
		<toString public="1" set="method" line="44" override="1"><f a=""><c path="String"/></f></toString>
		<clone public="1" set="method" line="37" override="1"><f a=""><c path="native.events.Event"/></f></clone>
		<z public="1"><c path="Float"/></z>
		<y public="1"><c path="Float"/></y>
		<x public="1"><c path="Float"/></x>
		<id public="1"><c path="Int"/></id>
		<device public="1"><c path="Int"/></device>
		<axis public="1"><c path="Array"><c path="Float"/></c></axis>
		<new public="1" set="method" line="22"><f a="type:?bubbles:?cancelable:?device:?id:?x:?y:?z">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.KeyboardEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/KeyboardEvent.hx">
		<extends path="native.events.Event"/>
		<KEY_DOWN public="1" line="8" static="1"><c path="String"/></KEY_DOWN>
		<KEY_UP public="1" line="9" static="1"><c path="String"/></KEY_UP>
		<toString public="1" set="method" line="45" override="1"><f a=""><c path="String"/></f></toString>
		<clone public="1" set="method" line="38" override="1"><f a=""><c path="native.events.Event"/></f></clone>
		<shiftKey public="1"><e path="Bool"/></shiftKey>
		<keyLocation public="1"><c path="Int"/></keyLocation>
		<keyCode public="1"><c path="Int"/></keyCode>
		<commandKey public="1"><e path="Bool"/></commandKey>
		<controlKey public="1"><e path="Bool"/></controlKey>
		<ctrlKey public="1"><e path="Bool"/></ctrlKey>
		<charCode public="1"><c path="Int"/></charCode>
		<altKey public="1"><e path="Bool"/></altKey>
		<new public="1" set="method" line="21"><f a="type:?bubbles:?cancelable:?charCodeValue:?keyCodeValue:?keyLocationValue:?ctrlKeyValue:?altKeyValue:?shiftKeyValue:?controlKeyValue:?commandKeyValue">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.ProgressEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/ProgressEvent.hx">
		<extends path="native.events.Event"/>
		<PROGRESS public="1" get="inline" set="null" line="8" static="1"><c path="String"/></PROGRESS>
		<SOCKET_DATA public="1" get="inline" set="null" line="9" static="1"><c path="String"/></SOCKET_DATA>
		<toString public="1" set="method" line="32" override="1"><f a=""><c path="String"/></f></toString>
		<clone public="1" set="method" line="25" override="1"><f a=""><c path="native.events.Event"/></f></clone>
		<bytesTotal public="1" set="null"><c path="Int"/></bytesTotal>
		<bytesLoaded public="1" set="null"><c path="Int"/></bytesLoaded>
		<new public="1" set="method" line="15"><f a="type:?bubbles:?cancelable:?bytesLoaded:?bytesTotal">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.SampleDataEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/SampleDataEvent.hx">
		<extends path="native.events.Event"/>
		<SAMPLE_DATA public="1" line="11" static="1"><c path="String"/></SAMPLE_DATA>
		<toString public="1" set="method" line="35" override="1"><f a=""><c path="String"/></f></toString>
		<clone public="1" set="method" line="28" override="1"><f a=""><c path="native.events.Event"/></f></clone>
		<position public="1"><c path="Float"/></position>
		<data public="1"><c path="native.utils.ByteArray"/></data>
		<new public="1" set="method" line="17"><f a="type:?bubbles:?cancelable">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.SecurityErrorEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/SecurityErrorEvent.hx">
		<extends path="native.events.ErrorEvent"/>
		<SECURITY_ERROR public="1" get="inline" set="null" line="8" static="1"><c path="String"/></SECURITY_ERROR>
		<toString public="1" set="method" line="25" override="1"><f a=""><c path="String"/></f></toString>
		<clone public="1" set="method" line="18" override="1"><f a=""><c path="native.events.Event"/></f></clone>
		<new public="1" set="method" line="11"><f a="type:?bubbles:?cancelable:?text:?id">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="String"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.SystemEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/SystemEvent.hx">
		<extends path="native.events.Event"/>
		<SYSTEM public="1" line="8" static="1"><c path="String"/></SYSTEM>
		<toString public="1" set="method" line="28" override="1"><f a=""><c path="String"/></f></toString>
		<clone public="1" set="method" line="21" override="1"><f a=""><c path="native.events.Event"/></f></clone>
		<data public="1" set="null"><c path="Int"/></data>
		<new public="1" set="method" line="13"><f a="type:?bubbles:?cancelable:?data">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.events.TimerEvent" params="" file="/home/joshua/Development/Haxe/nme/native/events/TimerEvent.hx">
		<extends path="native.events.Event"/>
		<TIMER public="1" line="8" static="1"><c path="String"/></TIMER>
		<TIMER_COMPLETE public="1" line="9" static="1"><c path="String"/></TIMER_COMPLETE>
		<updateAfterEvent public="1" set="method" line="33"><f a=""><e path="Void"/></f></updateAfterEvent>
		<toString public="1" set="method" line="26" override="1"><f a=""><c path="String"/></f></toString>
		<clone public="1" set="method" line="19" override="1"><f a=""><c path="native.events.Event"/></f></clone>
		<new public="1" set="method" line="12"><f a="type:?bubbles:?cancelable">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.external.ExternalInterface" params="" file="/home/joshua/Development/Haxe/nme/native/external/ExternalInterface.hx">
		<available public="1" get="get_available" set="null" static="1"><e path="Bool"/></available>
		<marshallExceptions public="1" static="1"><e path="Bool"/></marshallExceptions>
		<objectID public="1" static="1"><c path="String"/></objectID>
		<callbacks line="15" static="1"><c path="Hash"><d/></c></callbacks>
		<addCallback public="1" set="method" line="18" static="1"><f a="functionName:closure">
	<c path="String"/>
	<d/>
	<e path="Void"/>
</f></addCallback>
		<call public="1" set="method" line="31" static="1"><f a="functionName:?p1:?p2:?p3:?p4:?p5">
	<c path="String"/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
</f></call>
		<handler set="method" line="46" static="1"><f a="functionName:params">
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
	<c path="String"/>
</f></handler>
		<registerCallbacks public="1" set="method" line="60" static="1"><f a=""><e path="Void"/></f></registerCallbacks>
		<get_available set="method" line="74" static="1"><f a=""><e path="Bool"/></f></get_available>
		<nme_external_interface_add_callback line="88" static="1"><f a=":">
	<c path="String"/>
	<f a="functionName:params">
		<c path="String"/>
		<c path="Array"><c path="String"/></c>
		<c path="String"/>
	</f>
	<unknown/>
</f></nme_external_interface_add_callback>
		<nme_external_interface_available line="89" static="1"><f a=""><e path="Bool"/></f></nme_external_interface_available>
		<nme_external_interface_call line="90" static="1"><f a=":">
	<c path="String"/>
	<c path="Array"><d/></c>
	<unknown/>
</f></nme_external_interface_call>
		<nme_external_interface_register_callbacks line="91" static="1"><f a=""><unknown/></f></nme_external_interface_register_callbacks>
	</class>
	<class path="native.feedback.Haptic" params="" file="/home/joshua/Development/Haxe/nme/native/feedback/Haptic.hx">
		<vibrate public="1" set="method" line="11" static="1"><f a="?period:?duration">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></vibrate>
		<nme_haptic_vibrate line="28" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_haptic_vibrate>
	</class>
	<class path="native.filesystem.File" params="" file="/home/joshua/Development/Haxe/nme/native/filesystem/File.hx">
		<applicationDirectory public="1" get="get_applicationDirectory" set="null" static="1"><c path="native.filesystem.File"/></applicationDirectory>
		<applicationStorageDirectory public="1" get="get_applicationStorageDirectory" set="null" static="1"><c path="native.filesystem.File"/></applicationStorageDirectory>
		<desktopDirectory public="1" get="get_desktopDirectory" set="null" static="1"><c path="native.filesystem.File"/></desktopDirectory>
		<documentsDirectory public="1" get="get_documentsDirectory" set="null" static="1"><c path="native.filesystem.File"/></documentsDirectory>
		<userDirectory public="1" get="get_userDirectory" set="null" static="1"><c path="native.filesystem.File"/></userDirectory>
		<APP get="inline" set="null" line="22" static="1"><c path="Int"/></APP>
		<STORAGE get="inline" set="null" line="23" static="1"><c path="Int"/></STORAGE>
		<DESKTOP get="inline" set="null" line="24" static="1"><c path="Int"/></DESKTOP>
		<DOCS get="inline" set="null" line="25" static="1"><c path="Int"/></DOCS>
		<USER get="inline" set="null" line="26" static="1"><c path="Int"/></USER>
		<get_applicationDirectory set="method" line="47" static="1"><f a=""><c path="native.filesystem.File"/></f></get_applicationDirectory>
		<get_applicationStorageDirectory set="method" line="48" static="1"><f a=""><c path="native.filesystem.File"/></f></get_applicationStorageDirectory>
		<get_desktopDirectory set="method" line="49" static="1"><f a=""><c path="native.filesystem.File"/></f></get_desktopDirectory>
		<get_documentsDirectory set="method" line="50" static="1"><f a=""><c path="native.filesystem.File"/></f></get_documentsDirectory>
		<get_userDirectory set="method" line="51" static="1"><f a=""><c path="native.filesystem.File"/></f></get_userDirectory>
		<nme_filesystem_get_special_dir line="103" static="1"><f a="">
	<c path="Int"/>
	<c path="String"/>
</f></nme_filesystem_get_special_dir>
		<set_url set="method" line="62"><f a="inPath">
	<c path="String"/>
	<c path="String"/>
</f></set_url>
		<set_nativePath set="method" line="54"><f a="inPath">
	<c path="String"/>
	<c path="String"/>
</f></set_nativePath>
		<url public="1" set="set_url"><c path="String"/></url>
		<nativePath public="1" set="set_nativePath"><c path="String"/></nativePath>
		<new public="1" set="method" line="32"><f a="?path">
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.filesystem.StorageVolume" params="" file="/home/joshua/Development/Haxe/nme/native/filesystem/StorageVolume.hx">
		<rootDirectory public="1" set="null"><c path="native.filesystem.File"/></rootDirectory>
		<name public="1" set="null"><c path="String"/></name>
		<isWritable public="1" set="null"><e path="Bool"/></isWritable>
		<isRemovable public="1" set="null"><e path="Bool"/></isRemovable>
		<fileSystemType public="1" set="null"><c path="String"/></fileSystemType>
		<drive public="1" set="null"><c path="String"/></drive>
		<new public="1" set="method" line="16"><f a="inRootDirPath:inName:inWritable:inRemovable:inFileSysType:inDrive">
	<c path="native.filesystem.File"/>
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="String"/>
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.filesystem.StorageVolumeInfo" params="" file="/home/joshua/Development/Haxe/nme/native/filesystem/StorageVolumeInfo.hx">
		<extends path="native.events.EventDispatcher"/>
		<isSupported public="1" get="inline" set="null" line="12" static="1"><e path="Bool"/></isSupported>
		<storageVolumeInfo public="1" get="get_storageVolumeInfo" set="null" static="1"><c path="native.filesystem.StorageVolumeInfo"/></storageVolumeInfo>
		<nmeStorageVolumeInfo static="1"><c path="native.filesystem.StorageVolumeInfo"/></nmeStorageVolumeInfo>
		<getInstance public="1" set="method" line="38" static="1"><f a=""><c path="native.filesystem.StorageVolumeInfo"/></f></getInstance>
		<get_storageVolumeInfo set="method" line="55" static="1"><f a=""><c path="native.filesystem.StorageVolumeInfo"/></f></get_storageVolumeInfo>
		<nme_filesystem_get_volumes line="65" static="1"><f a=":">
	<c path="Array"><c path="native.filesystem.StorageVolume"/></c>
	<f a="args">
		<c path="Array"><d/></c>
		<c path="native.filesystem.StorageVolume"/>
	</f>
	<unknown/>
</f></nme_filesystem_get_volumes>
		<getStorageVolumes public="1" set="method" line="31"><f a=""><c path="Array"><c path="native.filesystem.StorageVolume"/></c></f></getStorageVolumes>
		<volumes><c path="Array"><c path="native.filesystem.StorageVolume"/></c></volumes>
		<new set="method" line="20"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="native.filters.BitmapFilter" params="" file="/home/joshua/Development/Haxe/nme/native/filters/BitmapFilter.hx">
		<clone public="1" set="method" line="18"><f a=""><c path="native.filters.BitmapFilter"/></f></clone>
		<type>
			<c path="String"/>
			<haxe_doc>@private</haxe_doc>
		</type>
		<new public="1" set="method" line="11"><f a="inType">
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.filters.BitmapFilterQuality" params="" file="/home/joshua/Development/Haxe/nme/native/filters/BitmapFilterQuality.hx">
		<HIGH public="1" line="7" static="1"><c path="Int"/></HIGH>
		<MEDIUM public="1" line="8" static="1"><c path="Int"/></MEDIUM>
		<LOW public="1" line="9" static="1"><c path="Int"/></LOW>
	</class>
	<class path="native.filters.BitmapFilterType" params="" file="/home/joshua/Development/Haxe/nme/native/filters/BitmapFilterType.hx">
		<FULL public="1" line="7" static="1"><c path="String"/></FULL>
		<INNER public="1" line="8" static="1"><c path="String"/></INNER>
		<OUTER public="1" line="9" static="1"><c path="String"/></OUTER>
	</class>
	<class path="native.filters.BlurFilter" params="" file="/home/joshua/Development/Haxe/nme/native/filters/BlurFilter.hx">
		<extends path="native.filters.BitmapFilter"/>
		<clone public="1" set="method" line="24" override="1"><f a=""><c path="native.filters.BitmapFilter"/></f></clone>
		<quality>
			<c path="Int"/>
			<haxe_doc>@private</haxe_doc>
		</quality>
		<blurY>
			<c path="Float"/>
			<haxe_doc>@private</haxe_doc>
		</blurY>
		<blurX>
			<c path="Float"/>
			<haxe_doc>@private</haxe_doc>
		</blurX>
		<new public="1" set="method" line="13"><f a="?inBlurX:?inBlurY:?inQuality">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.filters.DropShadowFilter" params="" file="/home/joshua/Development/Haxe/nme/native/filters/DropShadowFilter.hx">
		<extends path="native.filters.BitmapFilter"/>
		<clone public="1" set="method" line="40" override="1"><f a=""><c path="native.filters.BitmapFilter"/></f></clone>
		<strength>
			<c path="Float"/>
			<haxe_doc>@private</haxe_doc>
		</strength>
		<quality>
			<c path="Int"/>
			<haxe_doc>@private</haxe_doc>
		</quality>
		<knockout>
			<e path="Bool"/>
			<haxe_doc>@private</haxe_doc>
		</knockout>
		<inner>
			<e path="Bool"/>
			<haxe_doc>@private</haxe_doc>
		</inner>
		<hideObject>
			<e path="Bool"/>
			<haxe_doc>@private</haxe_doc>
		</hideObject>
		<distance>
			<c path="Float"/>
			<haxe_doc>@private</haxe_doc>
		</distance>
		<color>
			<c path="Int"/>
			<haxe_doc>@private</haxe_doc>
		</color>
		<blurY>
			<c path="Float"/>
			<haxe_doc>@private</haxe_doc>
		</blurY>
		<blurX>
			<c path="Float"/>
			<haxe_doc>@private</haxe_doc>
		</blurX>
		<angle>
			<c path="Float"/>
			<haxe_doc>@private</haxe_doc>
		</angle>
		<alpha>
			<c path="Float"/>
			<haxe_doc>@private</haxe_doc>
		</alpha>
		<new public="1" set="method" line="21"><f a="?in_distance:?in_angle:?in_color:?in_alpha:?in_blurX:?in_blurY:?in_strength:?in_quality:?in_inner:?in_knockout:?in_hideObject">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Int"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.filters.GlowFilter" params="" file="/home/joshua/Development/Haxe/nme/native/filters/GlowFilter.hx">
		<extends path="native.filters.DropShadowFilter"/>
		<new public="1" set="method" line="8"><f a="?in_color:?in_alpha:?in_blurX:?in_blurY:?in_strength:?in_quality:?in_inner:?in_knockout">
	<c path="Int"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.geom.ColorTransform" params="" file="/home/joshua/Development/Haxe/nme/native/geom/ColorTransform.hx">
		<set_color set="method" line="57"><f a="value">
	<c path="Int"/>
	<c path="Int"/>
</f></set_color>
		<get_color set="method" line="50"><f a=""><c path="Int"/></f></get_color>
		<concat public="1" set="method" line="33"><f a="second">
	<c path="native.geom.ColorTransform"/>
	<e path="Void"/>
</f></concat>
		<redOffset public="1"><c path="Float"/></redOffset>
		<redMultiplier public="1"><c path="Float"/></redMultiplier>
		<greenOffset public="1"><c path="Float"/></greenOffset>
		<greenMultiplier public="1"><c path="Float"/></greenMultiplier>
		<color public="1" get="get_color" set="set_color"><c path="Int"/></color>
		<blueOffset public="1"><c path="Float"/></blueOffset>
		<blueMultiplier public="1"><c path="Float"/></blueMultiplier>
		<alphaOffset public="1"><c path="Float"/></alphaOffset>
		<alphaMultiplier public="1"><c path="Float"/></alphaMultiplier>
		<new public="1" set="method" line="19"><f a="?inRedMultiplier:?inGreenMultiplier:?inBlueMultiplier:?inAlphaMultiplier:?inRedOffset:?inGreenOffset:?inBlueOffset:?inAlphaOffset">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.geom.Matrix" params="" file="/home/joshua/Development/Haxe/nme/native/geom/Matrix.hx">
		<implements path="cpp.rtti.FieldNumericIntegerLookup"/>
		<translate public="1" set="method" line="248"><f a="inDX:inDY">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></translate>
		<transformPoint public="1" set="method" line="241"><f a="inPos">
	<c path="native.geom.Point"/>
	<c path="native.geom.Point"/>
</f></transformPoint>
		<setRotation public="1" set="method" line="230"><f a="inTheta:?inScale">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></setRotation>
		<scale public="1" set="method" line="216"><f a="inSX:inSY">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></scale>
		<rotate public="1" set="method" line="189"><f a="inTheta">
	<c path="Float"/>
	<e path="Void"/>
</f></rotate>
		<mult public="1" set="method" line="160"><f a="m">
	<c path="native.geom.Matrix"/>
	<c path="native.geom.Matrix"/>
</f></mult>
		<invert public="1" set="method" line="130"><f a=""><c path="native.geom.Matrix"/></f></invert>
		<identity public="1" set="method" line="118"><f a=""><e path="Void"/></f></identity>
		<deltaTransformPoint public="1" set="method" line="111"><f a="point">
	<c path="native.geom.Point"/>
	<c path="native.geom.Point"/>
</f></deltaTransformPoint>
		<createGradientBox public="1" set="method" line="84"><f a="in_width:in_height:?rotation:?in_tx:?in_ty">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></createGradientBox>
		<createBox public="1" set="method" line="73"><f a="scaleX:scaleY:?rotation:?tx:?ty">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></createBox>
		<concat public="1" set="method" line="55"><f a="m">
	<c path="native.geom.Matrix"/>
	<e path="Void"/>
</f></concat>
		<clone public="1" set="method" line="34"><f a=""><c path="native.geom.Matrix"/></f></clone>
		<ty public="1"><c path="Float"/></ty>
		<tx public="1"><c path="Float"/></tx>
		<d public="1"><c path="Float"/></d>
		<c public="1"><c path="Float"/></c>
		<b public="1"><c path="Float"/></b>
		<a public="1"><c path="Float"/></a>
		<new public="1" set="method" line="22"><f a="?in_a:?in_b:?in_c:?in_d:?in_tx:?in_ty">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.geom.Matrix3D" params="" file="/home/joshua/Development/Haxe/nme/native/geom/Matrix3D.hx">
		<create2D public="1" set="method" line="104" static="1"><f a="x:y:?scale:?rotation">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="native.geom.Matrix3D"/>
</f></create2D>
		<createABCD public="1" set="method" line="120" static="1"><f a="a:b:c:d:tx:ty">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="native.geom.Matrix3D"/>
</f></createABCD>
		<createOrtho public="1" set="method" line="132" static="1"><f a="x0:x1:y0:y1:zNear:zFar">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="native.geom.Matrix3D"/>
</f></createOrtho>
		<getAxisRotation public="1" get="inline" set="null" line="219" static="1"><f a="x:y:z:degrees">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="native.geom.Matrix3D"/>
</f></getAxisRotation>
		<interpolate public="1" get="inline" set="null" line="273" static="1"><f a="thisMat:toMat:percent">
	<c path="native.geom.Matrix3D"/>
	<c path="native.geom.Matrix3D"/>
	<c path="Float"/>
	<c path="native.geom.Matrix3D"/>
</f></interpolate>
		<set_position public="1" get="inline" set="null" line="552">
			<f a="val">
				<c path="native.geom.Vector3D"/>
				<c path="native.geom.Vector3D"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</set_position>
		<get_position public="1" get="inline" set="null" line="545">
			<f a=""><c path="native.geom.Vector3D"/></f>
			<haxe_doc>@private</haxe_doc>
		</get_position>
		<get_determinant public="1" get="inline" set="null" line="533">
			<f a=""><c path="Float"/></f>
			<haxe_doc>@private</haxe_doc>
		</get_determinant>
		<transpose public="1" get="inline" set="null" line="507"><f a=""><e path="Void"/></f></transpose>
		<transformVectors public="1" set="method" line="491"><f a="vin:vout">
	<t path="nme.Vector"><c path="Float"/></t>
	<t path="nme.Vector"><c path="Float"/></t>
	<e path="Void"/>
</f></transformVectors>
		<transformVector public="1" get="inline" set="null" line="479"><f a="v">
	<c path="native.geom.Vector3D"/>
	<c path="native.geom.Vector3D"/>
</f></transformVector>
		<recompose public="1" set="method" line="456"><f a="components">
	<t path="nme.Vector"><c path="native.geom.Vector3D"/></t>
	<e path="Bool"/>
</f></recompose>
		<prependTranslation public="1" get="inline" set="null" line="447"><f a="x:y:z">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></prependTranslation>
		<prependScale public="1" get="inline" set="null" line="440"><f a="xScale:yScale:zScale">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></prependScale>
		<prependRotation public="1" get="inline" set="null" line="424"><f a="degrees:axis:?pivotPoint">
	<c path="Float"/>
	<c path="native.geom.Vector3D"/>
	<c path="native.geom.Vector3D"/>
	<e path="Void"/>
</f></prependRotation>
		<prepend public="1" get="inline" set="null" line="390"><f a="rhs">
	<c path="native.geom.Matrix3D"/>
	<e path="Void"/>
</f></prepend>
		<invert public="1" get="inline" set="null" line="299"><f a=""><e path="Bool"/></f></invert>
		<interpolateTo public="1" get="inline" set="null" line="288"><f a="toMat:percent">
	<c path="native.geom.Matrix3D"/>
	<c path="Float"/>
	<e path="Void"/>
</f></interpolateTo>
		<identity public="1" get="inline" set="null" line="251"><f a=""><e path="Void"/></f></identity>
		<deltaTransformVector public="1" get="inline" set="null" line="207"><f a="v">
	<c path="native.geom.Vector3D"/>
	<c path="native.geom.Vector3D"/>
</f></deltaTransformVector>
		<decompose public="1" set="method" line="148"><f a=""><t path="nme.Vector"><c path="native.geom.Vector3D"/></t></f></decompose>
		<clone public="1" get="inline" set="null" line="97"><f a=""><c path="native.geom.Matrix3D"/></f></clone>
		<appendTranslation public="1" get="inline" set="null" line="88"><f a="x:y:z">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></appendTranslation>
		<appendScale public="1" get="inline" set="null" line="81"><f a="xScale:yScale:zScale">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></appendScale>
		<appendRotation public="1" set="method" line="65"><f a="degrees:axis:?pivotPoint">
	<c path="Float"/>
	<c path="native.geom.Vector3D"/>
	<c path="native.geom.Vector3D"/>
	<e path="Void"/>
</f></appendRotation>
		<append public="1" set="method" line="31"><f a="lhs">
	<c path="native.geom.Matrix3D"/>
	<e path="Void"/>
</f></append>
		<rawData public="1"><t path="nme.Vector"><c path="Float"/></t></rawData>
		<position public="1" get="get_position" set="set_position"><c path="native.geom.Vector3D"/></position>
		<determinant public="1" get="get_determinant" set="null"><c path="Float"/></determinant>
		<new public="1" set="method" line="16"><f a="?v">
	<t path="nme.Vector"><c path="Float"/></t>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.geom.Point" params="" file="/home/joshua/Development/Haxe/nme/native/geom/Point.hx">
		<distance public="1" set="method" line="35" static="1"><f a="pt1:pt2">
	<c path="native.geom.Point"/>
	<c path="native.geom.Point"/>
	<c path="Float"/>
</f></distance>
		<interpolate public="1" set="method" line="51" static="1"><f a="pt1:pt2:f">
	<c path="native.geom.Point"/>
	<c path="native.geom.Point"/>
	<c path="Float"/>
	<c path="native.geom.Point"/>
</f></interpolate>
		<polar public="1" set="method" line="83" static="1"><f a="len:angle">
	<c path="Float"/>
	<c path="Float"/>
	<c path="native.geom.Point"/>
</f></polar>
		<get_length set="method" line="111"><f a=""><c path="Float"/></f></get_length>
		<toString public="1" set="method" line="97"><f a=""><c path="String"/></f></toString>
		<subtract public="1" set="method" line="90"><f a="v">
	<c path="native.geom.Point"/>
	<c path="native.geom.Point"/>
</f></subtract>
		<offset public="1" set="method" line="75"><f a="dx:dy">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></offset>
		<normalize public="1" set="method" line="58"><f a="thickness">
	<c path="Float"/>
	<e path="Void"/>
</f></normalize>
		<equals public="1" set="method" line="44"><f a="toCompare">
	<c path="native.geom.Point"/>
	<e path="Bool"/>
</f></equals>
		<clone public="1" set="method" line="28"><f a=""><c path="native.geom.Point"/></f></clone>
		<add public="1" set="method" line="21"><f a="v">
	<c path="native.geom.Point"/>
	<c path="native.geom.Point"/>
</f></add>
		<y public="1"><c path="Float"/></y>
		<x public="1"><c path="Float"/></x>
		<length public="1" get="get_length" set="null"><c path="Float"/></length>
		<new public="1" set="method" line="13"><f a="?inX:?inY">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.geom.Rectangle" params="" file="/home/joshua/Development/Haxe/nme/native/geom/Rectangle.hx">
		<set_topLeft set="method" line="232"><f a="p">
	<c path="native.geom.Point"/>
	<c path="native.geom.Point"/>
</f></set_topLeft>
		<get_topLeft set="method" line="231"><f a=""><c path="native.geom.Point"/></f></get_topLeft>
		<set_top set="method" line="230"><f a="t">
	<c path="Float"/>
	<c path="Float"/>
</f></set_top>
		<get_top set="method" line="229"><f a=""><c path="Float"/></f></get_top>
		<set_size set="method" line="228"><f a="p">
	<c path="native.geom.Point"/>
	<c path="native.geom.Point"/>
</f></set_size>
		<get_size set="method" line="227"><f a=""><c path="native.geom.Point"/></f></get_size>
		<set_right set="method" line="226"><f a="r">
	<c path="Float"/>
	<c path="Float"/>
</f></set_right>
		<get_right set="method" line="225"><f a=""><c path="Float"/></f></get_right>
		<set_left set="method" line="224"><f a="l">
	<c path="Float"/>
	<c path="Float"/>
</f></set_left>
		<get_left set="method" line="223"><f a=""><c path="Float"/></f></get_left>
		<set_bottomRight set="method" line="222"><f a="p">
	<c path="native.geom.Point"/>
	<c path="native.geom.Point"/>
</f></set_bottomRight>
		<get_bottomRight set="method" line="221"><f a=""><c path="native.geom.Point"/></f></get_bottomRight>
		<set_bottom set="method" line="220"><f a="b">
	<c path="Float"/>
	<c path="Float"/>
</f></set_bottom>
		<get_bottom set="method" line="219"><f a=""><c path="Float"/></f></get_bottom>
		<union public="1" set="method" line="201"><f a="toUnion">
	<c path="native.geom.Rectangle"/>
	<c path="native.geom.Rectangle"/>
</f></union>
		<transform public="1" set="method" line="168"><f a="m">
	<c path="native.geom.Matrix"/>
	<c path="native.geom.Rectangle"/>
</f></transform>
		<setEmpty public="1" set="method" line="161"><f a=""><e path="Void"/></f></setEmpty>
		<offsetPoint public="1" set="method" line="153"><f a="point">
	<c path="native.geom.Point"/>
	<e path="Void"/>
</f></offsetPoint>
		<offset public="1" set="method" line="145"><f a="dx:dy">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></offset>
		<isEmpty public="1" set="method" line="138"><f a=""><e path="Bool"/></f></isEmpty>
		<intersects public="1" set="method" line="124"><f a="toIntersect">
	<c path="native.geom.Rectangle"/>
	<e path="Bool"/>
</f></intersects>
		<intersection public="1" set="method" line="108"><f a="toIntersect">
	<c path="native.geom.Rectangle"/>
	<c path="native.geom.Rectangle"/>
</f></intersection>
		<inflatePoint public="1" set="method" line="101"><f a="point">
	<c path="native.geom.Point"/>
	<e path="Void"/>
</f></inflatePoint>
		<inflate public="1" set="method" line="93"><f a="dx:dy">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></inflate>
		<extendBounds public="1" set="method" line="66"><f a="r">
	<c path="native.geom.Rectangle"/>
	<e path="Void"/>
</f></extendBounds>
		<equals public="1" set="method" line="59"><f a="toCompare">
	<c path="native.geom.Rectangle"/>
	<e path="Bool"/>
</f></equals>
		<containsRect public="1" set="method" line="52"><f a="rect">
	<c path="native.geom.Rectangle"/>
	<e path="Bool"/>
</f></containsRect>
		<containsPoint public="1" set="method" line="45"><f a="point">
	<c path="native.geom.Point"/>
	<e path="Bool"/>
</f></containsPoint>
		<contains public="1" set="method" line="38"><f a="inX:inY">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Bool"/>
</f></contains>
		<clone public="1" set="method" line="31"><f a=""><c path="native.geom.Rectangle"/></f></clone>
		<y public="1"><c path="Float"/></y>
		<x public="1"><c path="Float"/></x>
		<width public="1"><c path="Float"/></width>
		<topLeft public="1" get="get_topLeft" set="set_topLeft"><c path="native.geom.Point"/></topLeft>
		<top public="1" get="get_top" set="set_top"><c path="Float"/></top>
		<size public="1" get="get_size" set="set_size"><c path="native.geom.Point"/></size>
		<right public="1" get="get_right" set="set_right"><c path="Float"/></right>
		<left public="1" get="get_left" set="set_left"><c path="Float"/></left>
		<height public="1"><c path="Float"/></height>
		<bottomRight public="1" get="get_bottomRight" set="set_bottomRight"><c path="native.geom.Point"/></bottomRight>
		<bottom public="1" get="get_bottom" set="set_bottom"><c path="Float"/></bottom>
		<new public="1" set="method" line="21"><f a="?inX:?inY:?inWidth:?inHeight">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.geom.Transform" params="" file="/home/joshua/Development/Haxe/nme/native/geom/Transform.hx">
		<get_pixelBounds set="method" line="40"><f a=""><c path="native.geom.Rectangle"/></f></get_pixelBounds>
		<set_matrix set="method" line="39"><f a="inMatrix">
	<c path="native.geom.Matrix"/>
	<c path="native.geom.Matrix"/>
</f></set_matrix>
		<get_matrix set="method" line="38"><f a=""><c path="native.geom.Matrix"/></f></get_matrix>
		<get_concatenatedMatrix set="method" line="37"><f a=""><c path="native.geom.Matrix"/></f></get_concatenatedMatrix>
		<get_concatenatedColorTransform set="method" line="36"><f a=""><c path="native.geom.ColorTransform"/></f></get_concatenatedColorTransform>
		<set_colorTransform set="method" line="35"><f a="inTrans">
	<c path="native.geom.ColorTransform"/>
	<c path="native.geom.ColorTransform"/>
</f></set_colorTransform>
		<get_colorTransform set="method" line="34"><f a=""><c path="native.geom.ColorTransform"/></f></get_colorTransform>
		<nmeObj>
			<c path="native.display.DisplayObject"/>
			<haxe_doc>@private</haxe_doc>
		</nmeObj>
		<pixelBounds public="1" get="get_pixelBounds" set="null"><c path="native.geom.Rectangle"/></pixelBounds>
		<matrix public="1" get="get_matrix" set="set_matrix"><c path="native.geom.Matrix"/></matrix>
		<concatenatedMatrix public="1" get="get_concatenatedMatrix" set="null"><c path="native.geom.Matrix"/></concatenatedMatrix>
		<concatenatedColorTransform public="1" get="get_concatenatedColorTransform" set="null"><c path="native.geom.ColorTransform"/></concatenatedColorTransform>
		<colorTransform public="1" get="get_colorTransform" set="set_colorTransform"><c path="native.geom.ColorTransform"/></colorTransform>
		<new public="1" set="method" line="20"><f a="inParent">
	<c path="native.display.DisplayObject"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.geom.Vector3D" params="" file="/home/joshua/Development/Haxe/nme/native/geom/Vector3D.hx">
		<X_AXIS public="1" get="get_X_AXIS" set="null" static="1"><c path="native.geom.Vector3D"/></X_AXIS>
		<Y_AXIS public="1" get="get_Y_AXIS" set="null" static="1"><c path="native.geom.Vector3D"/></Y_AXIS>
		<Z_AXIS public="1" get="get_Z_AXIS" set="null" static="1"><c path="native.geom.Vector3D"/></Z_AXIS>
		<angleBetween public="1" get="inline" set="null" line="37" static="1"><f a="a:b">
	<c path="native.geom.Vector3D"/>
	<c path="native.geom.Vector3D"/>
	<c path="Float"/>
</f></angleBetween>
		<distance public="1" get="inline" set="null" line="71" static="1"><f a="pt1:pt2">
	<c path="native.geom.Vector3D"/>
	<c path="native.geom.Vector3D"/>
	<c path="Float"/>
</f></distance>
		<get_X_AXIS get="inline" set="null" line="177" static="1"><f a=""><c path="native.geom.Vector3D"/></f></get_X_AXIS>
		<get_Y_AXIS get="inline" set="null" line="178" static="1"><f a=""><c path="native.geom.Vector3D"/></f></get_Y_AXIS>
		<get_Z_AXIS get="inline" set="null" line="179" static="1"><f a=""><c path="native.geom.Vector3D"/></f></get_Z_AXIS>
		<get_lengthSquared get="inline" set="null" line="176"><f a=""><c path="Float"/></f></get_lengthSquared>
		<get_length get="inline" set="null" line="175"><f a=""><c path="Float"/></f></get_length>
		<toString public="1" get="inline" set="null" line="161"><f a=""><c path="String"/></f></toString>
		<subtract public="1" get="inline" set="null" line="154"><f a="a">
	<c path="native.geom.Vector3D"/>
	<c path="native.geom.Vector3D"/>
</f></subtract>
		<scaleBy public="1" get="inline" set="null" line="145"><f a="s">
	<c path="Float"/>
	<e path="Void"/>
</f></scaleBy>
		<project public="1" get="inline" set="null" line="136"><f a=""><e path="Void"/></f></project>
		<normalize public="1" get="inline" set="null" line="121"><f a=""><c path="Float"/></f></normalize>
		<negate public="1" get="inline" set="null" line="112"><f a=""><e path="Void"/></f></negate>
		<nearEquals public="1" get="inline" set="null" line="105"><f a="toCompare:tolerance:?allFour">
	<c path="native.geom.Vector3D"/>
	<c path="Float"/>
	<e path="Bool"/>
	<e path="Bool"/>
</f></nearEquals>
		<incrementBy public="1" get="inline" set="null" line="96"><f a="a">
	<c path="native.geom.Vector3D"/>
	<e path="Void"/>
</f></incrementBy>
		<equals public="1" get="inline" set="null" line="89"><f a="toCompare:?allFour">
	<c path="native.geom.Vector3D"/>
	<e path="Bool"/>
	<e path="Bool"/>
</f></equals>
		<dotProduct public="1" get="inline" set="null" line="82"><f a="a">
	<c path="native.geom.Vector3D"/>
	<c path="Float"/>
</f></dotProduct>
		<decrementBy public="1" get="inline" set="null" line="62"><f a="a">
	<c path="native.geom.Vector3D"/>
	<e path="Void"/>
</f></decrementBy>
		<crossProduct public="1" get="inline" set="null" line="55"><f a="a">
	<c path="native.geom.Vector3D"/>
	<c path="native.geom.Vector3D"/>
</f></crossProduct>
		<clone public="1" get="inline" set="null" line="48"><f a=""><c path="native.geom.Vector3D"/></f></clone>
		<add public="1" get="inline" set="null" line="30"><f a="a">
	<c path="native.geom.Vector3D"/>
	<c path="native.geom.Vector3D"/>
</f></add>
		<z public="1"><c path="Float"/></z>
		<y public="1"><c path="Float"/></y>
		<x public="1"><c path="Float"/></x>
		<w public="1"><c path="Float"/></w>
		<lengthSquared public="1" get="get_lengthSquared" set="null"><c path="Float"/></lengthSquared>
		<length public="1" get="get_length" set="null"><c path="Float"/></length>
		<new public="1" set="method" line="20"><f a="?x:?y:?z:?w">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.gl.GL" params="" file="/home/joshua/Development/Haxe/nme/native/gl/GL.hx">
		<DEPTH_BUFFER_BIT public="1" get="inline" set="null" line="20" static="1"><c path="Int"/></DEPTH_BUFFER_BIT>
		<STENCIL_BUFFER_BIT public="1" get="inline" set="null" line="21" static="1"><c path="Int"/></STENCIL_BUFFER_BIT>
		<COLOR_BUFFER_BIT public="1" get="inline" set="null" line="22" static="1"><c path="Int"/></COLOR_BUFFER_BIT>
		<POINTS public="1" get="inline" set="null" line="25" static="1"><c path="Int"/></POINTS>
		<LINES public="1" get="inline" set="null" line="26" static="1"><c path="Int"/></LINES>
		<LINE_LOOP public="1" get="inline" set="null" line="27" static="1"><c path="Int"/></LINE_LOOP>
		<LINE_STRIP public="1" get="inline" set="null" line="28" static="1"><c path="Int"/></LINE_STRIP>
		<TRIANGLES public="1" get="inline" set="null" line="29" static="1"><c path="Int"/></TRIANGLES>
		<TRIANGLE_STRIP public="1" get="inline" set="null" line="30" static="1"><c path="Int"/></TRIANGLE_STRIP>
		<TRIANGLE_FAN public="1" get="inline" set="null" line="31" static="1"><c path="Int"/></TRIANGLE_FAN>
		<ZERO public="1" get="inline" set="null" line="44" static="1"><c path="Int"/></ZERO>
		<ONE public="1" get="inline" set="null" line="45" static="1"><c path="Int"/></ONE>
		<SRC_COLOR public="1" get="inline" set="null" line="46" static="1"><c path="Int"/></SRC_COLOR>
		<ONE_MINUS_SRC_COLOR public="1" get="inline" set="null" line="47" static="1"><c path="Int"/></ONE_MINUS_SRC_COLOR>
		<SRC_ALPHA public="1" get="inline" set="null" line="48" static="1"><c path="Int"/></SRC_ALPHA>
		<ONE_MINUS_SRC_ALPHA public="1" get="inline" set="null" line="49" static="1"><c path="Int"/></ONE_MINUS_SRC_ALPHA>
		<DST_ALPHA public="1" get="inline" set="null" line="50" static="1"><c path="Int"/></DST_ALPHA>
		<ONE_MINUS_DST_ALPHA public="1" get="inline" set="null" line="51" static="1"><c path="Int"/></ONE_MINUS_DST_ALPHA>
		<DST_COLOR public="1" get="inline" set="null" line="56" static="1"><c path="Int"/></DST_COLOR>
		<ONE_MINUS_DST_COLOR public="1" get="inline" set="null" line="57" static="1"><c path="Int"/></ONE_MINUS_DST_COLOR>
		<SRC_ALPHA_SATURATE public="1" get="inline" set="null" line="58" static="1"><c path="Int"/></SRC_ALPHA_SATURATE>
		<FUNC_ADD public="1" get="inline" set="null" line="65" static="1"><c path="Int"/></FUNC_ADD>
		<BLEND_EQUATION public="1" get="inline" set="null" line="66" static="1"><c path="Int"/></BLEND_EQUATION>
		<BLEND_EQUATION_RGB public="1" get="inline" set="null" line="67" static="1"><c path="Int"/></BLEND_EQUATION_RGB>
		<BLEND_EQUATION_ALPHA public="1" get="inline" set="null" line="68" static="1"><c path="Int"/></BLEND_EQUATION_ALPHA>
		<FUNC_SUBTRACT public="1" get="inline" set="null" line="71" static="1"><c path="Int"/></FUNC_SUBTRACT>
		<FUNC_REVERSE_SUBTRACT public="1" get="inline" set="null" line="72" static="1"><c path="Int"/></FUNC_REVERSE_SUBTRACT>
		<BLEND_DST_RGB public="1" get="inline" set="null" line="75" static="1"><c path="Int"/></BLEND_DST_RGB>
		<BLEND_SRC_RGB public="1" get="inline" set="null" line="76" static="1"><c path="Int"/></BLEND_SRC_RGB>
		<BLEND_DST_ALPHA public="1" get="inline" set="null" line="77" static="1"><c path="Int"/></BLEND_DST_ALPHA>
		<BLEND_SRC_ALPHA public="1" get="inline" set="null" line="78" static="1"><c path="Int"/></BLEND_SRC_ALPHA>
		<CONSTANT_COLOR public="1" get="inline" set="null" line="79" static="1"><c path="Int"/></CONSTANT_COLOR>
		<ONE_MINUS_CONSTANT_COLOR public="1" get="inline" set="null" line="80" static="1"><c path="Int"/></ONE_MINUS_CONSTANT_COLOR>
		<CONSTANT_ALPHA public="1" get="inline" set="null" line="81" static="1"><c path="Int"/></CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_ALPHA public="1" get="inline" set="null" line="82" static="1"><c path="Int"/></ONE_MINUS_CONSTANT_ALPHA>
		<BLEND_COLOR public="1" get="inline" set="null" line="83" static="1"><c path="Int"/></BLEND_COLOR>
		<ARRAY_BUFFER public="1" get="inline" set="null" line="86" static="1"><c path="Int"/></ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER public="1" get="inline" set="null" line="87" static="1"><c path="Int"/></ELEMENT_ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1" get="inline" set="null" line="88" static="1"><c path="Int"/></ARRAY_BUFFER_BINDING>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" line="89" static="1"><c path="Int"/></ELEMENT_ARRAY_BUFFER_BINDING>
		<STREAM_DRAW public="1" get="inline" set="null" line="91" static="1"><c path="Int"/></STREAM_DRAW>
		<STATIC_DRAW public="1" get="inline" set="null" line="92" static="1"><c path="Int"/></STATIC_DRAW>
		<DYNAMIC_DRAW public="1" get="inline" set="null" line="93" static="1"><c path="Int"/></DYNAMIC_DRAW>
		<BUFFER_SIZE public="1" get="inline" set="null" line="95" static="1"><c path="Int"/></BUFFER_SIZE>
		<BUFFER_USAGE public="1" get="inline" set="null" line="96" static="1"><c path="Int"/></BUFFER_USAGE>
		<CURRENT_VERTEX_ATTRIB public="1" get="inline" set="null" line="98" static="1"><c path="Int"/></CURRENT_VERTEX_ATTRIB>
		<FRONT public="1" get="inline" set="null" line="101" static="1"><c path="Int"/></FRONT>
		<BACK public="1" get="inline" set="null" line="102" static="1"><c path="Int"/></BACK>
		<FRONT_AND_BACK public="1" get="inline" set="null" line="103" static="1"><c path="Int"/></FRONT_AND_BACK>
		<CULL_FACE public="1" get="inline" set="null" line="117" static="1"><c path="Int"/></CULL_FACE>
		<BLEND public="1" get="inline" set="null" line="118" static="1"><c path="Int"/></BLEND>
		<DITHER public="1" get="inline" set="null" line="119" static="1"><c path="Int"/></DITHER>
		<STENCIL_TEST public="1" get="inline" set="null" line="120" static="1"><c path="Int"/></STENCIL_TEST>
		<DEPTH_TEST public="1" get="inline" set="null" line="121" static="1"><c path="Int"/></DEPTH_TEST>
		<SCISSOR_TEST public="1" get="inline" set="null" line="122" static="1"><c path="Int"/></SCISSOR_TEST>
		<POLYGON_OFFSET_FILL public="1" get="inline" set="null" line="123" static="1"><c path="Int"/></POLYGON_OFFSET_FILL>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" get="inline" set="null" line="124" static="1"><c path="Int"/></SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_COVERAGE public="1" get="inline" set="null" line="125" static="1"><c path="Int"/></SAMPLE_COVERAGE>
		<NO_ERROR public="1" get="inline" set="null" line="128" static="1"><c path="Int"/></NO_ERROR>
		<INVALID_ENUM public="1" get="inline" set="null" line="129" static="1"><c path="Int"/></INVALID_ENUM>
		<INVALID_VALUE public="1" get="inline" set="null" line="130" static="1"><c path="Int"/></INVALID_VALUE>
		<INVALID_OPERATION public="1" get="inline" set="null" line="131" static="1"><c path="Int"/></INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" get="inline" set="null" line="132" static="1"><c path="Int"/></OUT_OF_MEMORY>
		<CW public="1" get="inline" set="null" line="135" static="1"><c path="Int"/></CW>
		<CCW public="1" get="inline" set="null" line="136" static="1"><c path="Int"/></CCW>
		<LINE_WIDTH public="1" get="inline" set="null" line="139" static="1"><c path="Int"/></LINE_WIDTH>
		<ALIASED_POINT_SIZE_RANGE public="1" get="inline" set="null" line="140" static="1"><c path="Int"/></ALIASED_POINT_SIZE_RANGE>
		<ALIASED_LINE_WIDTH_RANGE public="1" get="inline" set="null" line="141" static="1"><c path="Int"/></ALIASED_LINE_WIDTH_RANGE>
		<CULL_FACE_MODE public="1" get="inline" set="null" line="142" static="1"><c path="Int"/></CULL_FACE_MODE>
		<FRONT_FACE public="1" get="inline" set="null" line="143" static="1"><c path="Int"/></FRONT_FACE>
		<DEPTH_RANGE public="1" get="inline" set="null" line="144" static="1"><c path="Int"/></DEPTH_RANGE>
		<DEPTH_WRITEMASK public="1" get="inline" set="null" line="145" static="1"><c path="Int"/></DEPTH_WRITEMASK>
		<DEPTH_CLEAR_VALUE public="1" get="inline" set="null" line="146" static="1"><c path="Int"/></DEPTH_CLEAR_VALUE>
		<DEPTH_FUNC public="1" get="inline" set="null" line="147" static="1"><c path="Int"/></DEPTH_FUNC>
		<STENCIL_CLEAR_VALUE public="1" get="inline" set="null" line="148" static="1"><c path="Int"/></STENCIL_CLEAR_VALUE>
		<STENCIL_FUNC public="1" get="inline" set="null" line="149" static="1"><c path="Int"/></STENCIL_FUNC>
		<STENCIL_FAIL public="1" get="inline" set="null" line="150" static="1"><c path="Int"/></STENCIL_FAIL>
		<STENCIL_PASS_DEPTH_FAIL public="1" get="inline" set="null" line="151" static="1"><c path="Int"/></STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" get="inline" set="null" line="152" static="1"><c path="Int"/></STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" get="inline" set="null" line="153" static="1"><c path="Int"/></STENCIL_REF>
		<STENCIL_VALUE_MASK public="1" get="inline" set="null" line="154" static="1"><c path="Int"/></STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" get="inline" set="null" line="155" static="1"><c path="Int"/></STENCIL_WRITEMASK>
		<STENCIL_BACK_FUNC public="1" get="inline" set="null" line="156" static="1"><c path="Int"/></STENCIL_BACK_FUNC>
		<STENCIL_BACK_FAIL public="1" get="inline" set="null" line="157" static="1"><c path="Int"/></STENCIL_BACK_FAIL>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="inline" set="null" line="158" static="1"><c path="Int"/></STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="inline" set="null" line="159" static="1"><c path="Int"/></STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" get="inline" set="null" line="160" static="1"><c path="Int"/></STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" get="inline" set="null" line="161" static="1"><c path="Int"/></STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" get="inline" set="null" line="162" static="1"><c path="Int"/></STENCIL_BACK_WRITEMASK>
		<VIEWPORT public="1" get="inline" set="null" line="163" static="1"><c path="Int"/></VIEWPORT>
		<SCISSOR_BOX public="1" get="inline" set="null" line="164" static="1"><c path="Int"/></SCISSOR_BOX>
		<COLOR_CLEAR_VALUE public="1" get="inline" set="null" line="166" static="1"><c path="Int"/></COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" get="inline" set="null" line="167" static="1"><c path="Int"/></COLOR_WRITEMASK>
		<UNPACK_ALIGNMENT public="1" get="inline" set="null" line="168" static="1"><c path="Int"/></UNPACK_ALIGNMENT>
		<PACK_ALIGNMENT public="1" get="inline" set="null" line="169" static="1"><c path="Int"/></PACK_ALIGNMENT>
		<MAX_TEXTURE_SIZE public="1" get="inline" set="null" line="170" static="1"><c path="Int"/></MAX_TEXTURE_SIZE>
		<MAX_VIEWPORT_DIMS public="1" get="inline" set="null" line="171" static="1"><c path="Int"/></MAX_VIEWPORT_DIMS>
		<SUBPIXEL_BITS public="1" get="inline" set="null" line="172" static="1"><c path="Int"/></SUBPIXEL_BITS>
		<RED_BITS public="1" get="inline" set="null" line="173" static="1"><c path="Int"/></RED_BITS>
		<GREEN_BITS public="1" get="inline" set="null" line="174" static="1"><c path="Int"/></GREEN_BITS>
		<BLUE_BITS public="1" get="inline" set="null" line="175" static="1"><c path="Int"/></BLUE_BITS>
		<ALPHA_BITS public="1" get="inline" set="null" line="176" static="1"><c path="Int"/></ALPHA_BITS>
		<DEPTH_BITS public="1" get="inline" set="null" line="177" static="1"><c path="Int"/></DEPTH_BITS>
		<STENCIL_BITS public="1" get="inline" set="null" line="178" static="1"><c path="Int"/></STENCIL_BITS>
		<POLYGON_OFFSET_UNITS public="1" get="inline" set="null" line="179" static="1"><c path="Int"/></POLYGON_OFFSET_UNITS>
		<POLYGON_OFFSET_FACTOR public="1" get="inline" set="null" line="181" static="1"><c path="Int"/></POLYGON_OFFSET_FACTOR>
		<TEXTURE_BINDING_2D public="1" get="inline" set="null" line="182" static="1"><c path="Int"/></TEXTURE_BINDING_2D>
		<SAMPLE_BUFFERS public="1" get="inline" set="null" line="183" static="1"><c path="Int"/></SAMPLE_BUFFERS>
		<SAMPLES public="1" get="inline" set="null" line="184" static="1"><c path="Int"/></SAMPLES>
		<SAMPLE_COVERAGE_VALUE public="1" get="inline" set="null" line="185" static="1"><c path="Int"/></SAMPLE_COVERAGE_VALUE>
		<SAMPLE_COVERAGE_INVERT public="1" get="inline" set="null" line="186" static="1"><c path="Int"/></SAMPLE_COVERAGE_INVERT>
		<COMPRESSED_TEXTURE_FORMATS public="1" get="inline" set="null" line="194" static="1"><c path="Int"/></COMPRESSED_TEXTURE_FORMATS>
		<DONT_CARE public="1" get="inline" set="null" line="197" static="1"><c path="Int"/></DONT_CARE>
		<FASTEST public="1" get="inline" set="null" line="198" static="1"><c path="Int"/></FASTEST>
		<NICEST public="1" get="inline" set="null" line="199" static="1"><c path="Int"/></NICEST>
		<GENERATE_MIPMAP_HINT public="1" get="inline" set="null" line="202" static="1"><c path="Int"/></GENERATE_MIPMAP_HINT>
		<BYTE public="1" get="inline" set="null" line="205" static="1"><c path="Int"/></BYTE>
		<UNSIGNED_BYTE public="1" get="inline" set="null" line="206" static="1"><c path="Int"/></UNSIGNED_BYTE>
		<SHORT public="1" get="inline" set="null" line="207" static="1"><c path="Int"/></SHORT>
		<UNSIGNED_SHORT public="1" get="inline" set="null" line="208" static="1"><c path="Int"/></UNSIGNED_SHORT>
		<INT public="1" get="inline" set="null" line="209" static="1"><c path="Int"/></INT>
		<UNSIGNED_INT public="1" get="inline" set="null" line="210" static="1"><c path="Int"/></UNSIGNED_INT>
		<FLOAT public="1" get="inline" set="null" line="211" static="1"><c path="Int"/></FLOAT>
		<DEPTH_COMPONENT public="1" get="inline" set="null" line="214" static="1"><c path="Int"/></DEPTH_COMPONENT>
		<ALPHA public="1" get="inline" set="null" line="215" static="1"><c path="Int"/></ALPHA>
		<RGB public="1" get="inline" set="null" line="216" static="1"><c path="Int"/></RGB>
		<RGBA public="1" get="inline" set="null" line="217" static="1"><c path="Int"/></RGBA>
		<LUMINANCE public="1" get="inline" set="null" line="218" static="1"><c path="Int"/></LUMINANCE>
		<LUMINANCE_ALPHA public="1" get="inline" set="null" line="219" static="1"><c path="Int"/></LUMINANCE_ALPHA>
		<UNSIGNED_SHORT_4_4_4_4 public="1" get="inline" set="null" line="223" static="1"><c path="Int"/></UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" get="inline" set="null" line="224" static="1"><c path="Int"/></UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" get="inline" set="null" line="225" static="1"><c path="Int"/></UNSIGNED_SHORT_5_6_5>
		<FRAGMENT_SHADER public="1" get="inline" set="null" line="228" static="1"><c path="Int"/></FRAGMENT_SHADER>
		<VERTEX_SHADER public="1" get="inline" set="null" line="229" static="1"><c path="Int"/></VERTEX_SHADER>
		<MAX_VERTEX_ATTRIBS public="1" get="inline" set="null" line="230" static="1"><c path="Int"/></MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" get="inline" set="null" line="231" static="1"><c path="Int"/></MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VARYING_VECTORS public="1" get="inline" set="null" line="232" static="1"><c path="Int"/></MAX_VARYING_VECTORS>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" line="233" static="1"><c path="Int"/></MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" line="234" static="1"><c path="Int"/></MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" line="235" static="1"><c path="Int"/></MAX_TEXTURE_IMAGE_UNITS>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="inline" set="null" line="236" static="1"><c path="Int"/></MAX_FRAGMENT_UNIFORM_VECTORS>
		<SHADER_TYPE public="1" get="inline" set="null" line="237" static="1"><c path="Int"/></SHADER_TYPE>
		<DELETE_STATUS public="1" get="inline" set="null" line="238" static="1"><c path="Int"/></DELETE_STATUS>
		<LINK_STATUS public="1" get="inline" set="null" line="239" static="1"><c path="Int"/></LINK_STATUS>
		<VALIDATE_STATUS public="1" get="inline" set="null" line="240" static="1"><c path="Int"/></VALIDATE_STATUS>
		<ATTACHED_SHADERS public="1" get="inline" set="null" line="241" static="1"><c path="Int"/></ATTACHED_SHADERS>
		<ACTIVE_UNIFORMS public="1" get="inline" set="null" line="242" static="1"><c path="Int"/></ACTIVE_UNIFORMS>
		<ACTIVE_ATTRIBUTES public="1" get="inline" set="null" line="243" static="1"><c path="Int"/></ACTIVE_ATTRIBUTES>
		<SHADING_LANGUAGE_VERSION public="1" get="inline" set="null" line="244" static="1"><c path="Int"/></SHADING_LANGUAGE_VERSION>
		<CURRENT_PROGRAM public="1" get="inline" set="null" line="245" static="1"><c path="Int"/></CURRENT_PROGRAM>
		<NEVER public="1" get="inline" set="null" line="248" static="1"><c path="Int"/></NEVER>
		<LESS public="1" get="inline" set="null" line="249" static="1"><c path="Int"/></LESS>
		<EQUAL public="1" get="inline" set="null" line="250" static="1"><c path="Int"/></EQUAL>
		<LEQUAL public="1" get="inline" set="null" line="251" static="1"><c path="Int"/></LEQUAL>
		<GREATER public="1" get="inline" set="null" line="252" static="1"><c path="Int"/></GREATER>
		<NOTEQUAL public="1" get="inline" set="null" line="253" static="1"><c path="Int"/></NOTEQUAL>
		<GEQUAL public="1" get="inline" set="null" line="254" static="1"><c path="Int"/></GEQUAL>
		<ALWAYS public="1" get="inline" set="null" line="255" static="1"><c path="Int"/></ALWAYS>
		<KEEP public="1" get="inline" set="null" line="259" static="1"><c path="Int"/></KEEP>
		<REPLACE public="1" get="inline" set="null" line="260" static="1"><c path="Int"/></REPLACE>
		<INCR public="1" get="inline" set="null" line="261" static="1"><c path="Int"/></INCR>
		<DECR public="1" get="inline" set="null" line="262" static="1"><c path="Int"/></DECR>
		<INVERT public="1" get="inline" set="null" line="263" static="1"><c path="Int"/></INVERT>
		<INCR_WRAP public="1" get="inline" set="null" line="264" static="1"><c path="Int"/></INCR_WRAP>
		<DECR_WRAP public="1" get="inline" set="null" line="265" static="1"><c path="Int"/></DECR_WRAP>
		<VENDOR public="1" get="inline" set="null" line="268" static="1"><c path="Int"/></VENDOR>
		<RENDERER public="1" get="inline" set="null" line="269" static="1"><c path="Int"/></RENDERER>
		<VERSION public="1" get="inline" set="null" line="270" static="1"><c path="Int"/></VERSION>
		<NEAREST public="1" get="inline" set="null" line="273" static="1"><c path="Int"/></NEAREST>
		<LINEAR public="1" get="inline" set="null" line="274" static="1"><c path="Int"/></LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" get="inline" set="null" line="279" static="1"><c path="Int"/></NEAREST_MIPMAP_NEAREST>
		<LINEAR_MIPMAP_NEAREST public="1" get="inline" set="null" line="280" static="1"><c path="Int"/></LINEAR_MIPMAP_NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" get="inline" set="null" line="281" static="1"><c path="Int"/></NEAREST_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" get="inline" set="null" line="282" static="1"><c path="Int"/></LINEAR_MIPMAP_LINEAR>
		<TEXTURE_MAG_FILTER public="1" get="inline" set="null" line="285" static="1"><c path="Int"/></TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" get="inline" set="null" line="286" static="1"><c path="Int"/></TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" get="inline" set="null" line="287" static="1"><c path="Int"/></TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" get="inline" set="null" line="288" static="1"><c path="Int"/></TEXTURE_WRAP_T>
		<TEXTURE_2D public="1" get="inline" set="null" line="291" static="1"><c path="Int"/></TEXTURE_2D>
		<TEXTURE public="1" get="inline" set="null" line="292" static="1"><c path="Int"/></TEXTURE>
		<TEXTURE_CUBE_MAP public="1" get="inline" set="null" line="294" static="1"><c path="Int"/></TEXTURE_CUBE_MAP>
		<TEXTURE_BINDING_CUBE_MAP public="1" get="inline" set="null" line="295" static="1"><c path="Int"/></TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="inline" set="null" line="296" static="1"><c path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="inline" set="null" line="297" static="1"><c path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="inline" set="null" line="298" static="1"><c path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="inline" set="null" line="299" static="1"><c path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="inline" set="null" line="300" static="1"><c path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="inline" set="null" line="301" static="1"><c path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="inline" set="null" line="302" static="1"><c path="Int"/></MAX_CUBE_MAP_TEXTURE_SIZE>
		<TEXTURE0 public="1" get="inline" set="null" line="305" static="1"><c path="Int"/></TEXTURE0>
		<TEXTURE1 public="1" get="inline" set="null" line="306" static="1"><c path="Int"/></TEXTURE1>
		<TEXTURE2 public="1" get="inline" set="null" line="307" static="1"><c path="Int"/></TEXTURE2>
		<TEXTURE3 public="1" get="inline" set="null" line="308" static="1"><c path="Int"/></TEXTURE3>
		<TEXTURE4 public="1" get="inline" set="null" line="309" static="1"><c path="Int"/></TEXTURE4>
		<TEXTURE5 public="1" get="inline" set="null" line="310" static="1"><c path="Int"/></TEXTURE5>
		<TEXTURE6 public="1" get="inline" set="null" line="311" static="1"><c path="Int"/></TEXTURE6>
		<TEXTURE7 public="1" get="inline" set="null" line="312" static="1"><c path="Int"/></TEXTURE7>
		<TEXTURE8 public="1" get="inline" set="null" line="313" static="1"><c path="Int"/></TEXTURE8>
		<TEXTURE9 public="1" get="inline" set="null" line="314" static="1"><c path="Int"/></TEXTURE9>
		<TEXTURE10 public="1" get="inline" set="null" line="315" static="1"><c path="Int"/></TEXTURE10>
		<TEXTURE11 public="1" get="inline" set="null" line="316" static="1"><c path="Int"/></TEXTURE11>
		<TEXTURE12 public="1" get="inline" set="null" line="317" static="1"><c path="Int"/></TEXTURE12>
		<TEXTURE13 public="1" get="inline" set="null" line="318" static="1"><c path="Int"/></TEXTURE13>
		<TEXTURE14 public="1" get="inline" set="null" line="319" static="1"><c path="Int"/></TEXTURE14>
		<TEXTURE15 public="1" get="inline" set="null" line="320" static="1"><c path="Int"/></TEXTURE15>
		<TEXTURE16 public="1" get="inline" set="null" line="321" static="1"><c path="Int"/></TEXTURE16>
		<TEXTURE17 public="1" get="inline" set="null" line="322" static="1"><c path="Int"/></TEXTURE17>
		<TEXTURE18 public="1" get="inline" set="null" line="323" static="1"><c path="Int"/></TEXTURE18>
		<TEXTURE19 public="1" get="inline" set="null" line="324" static="1"><c path="Int"/></TEXTURE19>
		<TEXTURE20 public="1" get="inline" set="null" line="325" static="1"><c path="Int"/></TEXTURE20>
		<TEXTURE21 public="1" get="inline" set="null" line="326" static="1"><c path="Int"/></TEXTURE21>
		<TEXTURE22 public="1" get="inline" set="null" line="327" static="1"><c path="Int"/></TEXTURE22>
		<TEXTURE23 public="1" get="inline" set="null" line="328" static="1"><c path="Int"/></TEXTURE23>
		<TEXTURE24 public="1" get="inline" set="null" line="329" static="1"><c path="Int"/></TEXTURE24>
		<TEXTURE25 public="1" get="inline" set="null" line="330" static="1"><c path="Int"/></TEXTURE25>
		<TEXTURE26 public="1" get="inline" set="null" line="331" static="1"><c path="Int"/></TEXTURE26>
		<TEXTURE27 public="1" get="inline" set="null" line="332" static="1"><c path="Int"/></TEXTURE27>
		<TEXTURE28 public="1" get="inline" set="null" line="333" static="1"><c path="Int"/></TEXTURE28>
		<TEXTURE29 public="1" get="inline" set="null" line="334" static="1"><c path="Int"/></TEXTURE29>
		<TEXTURE30 public="1" get="inline" set="null" line="335" static="1"><c path="Int"/></TEXTURE30>
		<TEXTURE31 public="1" get="inline" set="null" line="336" static="1"><c path="Int"/></TEXTURE31>
		<ACTIVE_TEXTURE public="1" get="inline" set="null" line="337" static="1"><c path="Int"/></ACTIVE_TEXTURE>
		<REPEAT public="1" get="inline" set="null" line="340" static="1"><c path="Int"/></REPEAT>
		<CLAMP_TO_EDGE public="1" get="inline" set="null" line="341" static="1"><c path="Int"/></CLAMP_TO_EDGE>
		<MIRRORED_REPEAT public="1" get="inline" set="null" line="342" static="1"><c path="Int"/></MIRRORED_REPEAT>
		<FLOAT_VEC2 public="1" get="inline" set="null" line="345" static="1"><c path="Int"/></FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="inline" set="null" line="346" static="1"><c path="Int"/></FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="inline" set="null" line="347" static="1"><c path="Int"/></FLOAT_VEC4>
		<INT_VEC2 public="1" get="inline" set="null" line="348" static="1"><c path="Int"/></INT_VEC2>
		<INT_VEC3 public="1" get="inline" set="null" line="349" static="1"><c path="Int"/></INT_VEC3>
		<INT_VEC4 public="1" get="inline" set="null" line="350" static="1"><c path="Int"/></INT_VEC4>
		<BOOL public="1" get="inline" set="null" line="351" static="1"><c path="Int"/></BOOL>
		<BOOL_VEC2 public="1" get="inline" set="null" line="352" static="1"><c path="Int"/></BOOL_VEC2>
		<BOOL_VEC3 public="1" get="inline" set="null" line="353" static="1"><c path="Int"/></BOOL_VEC3>
		<BOOL_VEC4 public="1" get="inline" set="null" line="354" static="1"><c path="Int"/></BOOL_VEC4>
		<FLOAT_MAT2 public="1" get="inline" set="null" line="355" static="1"><c path="Int"/></FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="inline" set="null" line="356" static="1"><c path="Int"/></FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="inline" set="null" line="357" static="1"><c path="Int"/></FLOAT_MAT4>
		<SAMPLER_2D public="1" get="inline" set="null" line="358" static="1"><c path="Int"/></SAMPLER_2D>
		<SAMPLER_CUBE public="1" get="inline" set="null" line="359" static="1"><c path="Int"/></SAMPLER_CUBE>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="inline" set="null" line="362" static="1"><c path="Int"/></VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="inline" set="null" line="363" static="1"><c path="Int"/></VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="inline" set="null" line="364" static="1"><c path="Int"/></VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="inline" set="null" line="365" static="1"><c path="Int"/></VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="inline" set="null" line="366" static="1"><c path="Int"/></VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="inline" set="null" line="367" static="1"><c path="Int"/></VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" line="368" static="1"><c path="Int"/></VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<VERTEX_PROGRAM_POINT_SIZE public="1" get="inline" set="null" line="371" static="1"><c path="Int"/></VERTEX_PROGRAM_POINT_SIZE>
		<POINT_SPRITE public="1" get="inline" set="null" line="372" static="1"><c path="Int"/></POINT_SPRITE>
		<COMPILE_STATUS public="1" get="inline" set="null" line="375" static="1"><c path="Int"/></COMPILE_STATUS>
		<LOW_FLOAT public="1" get="inline" set="null" line="378" static="1"><c path="Int"/></LOW_FLOAT>
		<MEDIUM_FLOAT public="1" get="inline" set="null" line="379" static="1"><c path="Int"/></MEDIUM_FLOAT>
		<HIGH_FLOAT public="1" get="inline" set="null" line="380" static="1"><c path="Int"/></HIGH_FLOAT>
		<LOW_INT public="1" get="inline" set="null" line="381" static="1"><c path="Int"/></LOW_INT>
		<MEDIUM_INT public="1" get="inline" set="null" line="382" static="1"><c path="Int"/></MEDIUM_INT>
		<HIGH_INT public="1" get="inline" set="null" line="383" static="1"><c path="Int"/></HIGH_INT>
		<FRAMEBUFFER public="1" get="inline" set="null" line="386" static="1"><c path="Int"/></FRAMEBUFFER>
		<RENDERBUFFER public="1" get="inline" set="null" line="387" static="1"><c path="Int"/></RENDERBUFFER>
		<RGBA4 public="1" get="inline" set="null" line="389" static="1"><c path="Int"/></RGBA4>
		<RGB5_A1 public="1" get="inline" set="null" line="390" static="1"><c path="Int"/></RGB5_A1>
		<RGB565 public="1" get="inline" set="null" line="391" static="1"><c path="Int"/></RGB565>
		<DEPTH_COMPONENT16 public="1" get="inline" set="null" line="392" static="1"><c path="Int"/></DEPTH_COMPONENT16>
		<STENCIL_INDEX public="1" get="inline" set="null" line="393" static="1"><c path="Int"/></STENCIL_INDEX>
		<STENCIL_INDEX8 public="1" get="inline" set="null" line="394" static="1"><c path="Int"/></STENCIL_INDEX8>
		<DEPTH_STENCIL public="1" get="inline" set="null" line="395" static="1"><c path="Int"/></DEPTH_STENCIL>
		<RENDERBUFFER_WIDTH public="1" get="inline" set="null" line="397" static="1"><c path="Int"/></RENDERBUFFER_WIDTH>
		<RENDERBUFFER_HEIGHT public="1" get="inline" set="null" line="398" static="1"><c path="Int"/></RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" get="inline" set="null" line="399" static="1"><c path="Int"/></RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" get="inline" set="null" line="400" static="1"><c path="Int"/></RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" get="inline" set="null" line="401" static="1"><c path="Int"/></RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_BLUE_SIZE public="1" get="inline" set="null" line="402" static="1"><c path="Int"/></RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_ALPHA_SIZE public="1" get="inline" set="null" line="403" static="1"><c path="Int"/></RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" get="inline" set="null" line="404" static="1"><c path="Int"/></RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" get="inline" set="null" line="405" static="1"><c path="Int"/></RENDERBUFFER_STENCIL_SIZE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="inline" set="null" line="407" static="1"><c path="Int"/></FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="inline" set="null" line="408" static="1"><c path="Int"/></FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="inline" set="null" line="409" static="1"><c path="Int"/></FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="inline" set="null" line="410" static="1"><c path="Int"/></FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<COLOR_ATTACHMENT0 public="1" get="inline" set="null" line="412" static="1"><c path="Int"/></COLOR_ATTACHMENT0>
		<DEPTH_ATTACHMENT public="1" get="inline" set="null" line="413" static="1"><c path="Int"/></DEPTH_ATTACHMENT>
		<STENCIL_ATTACHMENT public="1" get="inline" set="null" line="414" static="1"><c path="Int"/></STENCIL_ATTACHMENT>
		<DEPTH_STENCIL_ATTACHMENT public="1" get="inline" set="null" line="415" static="1"><c path="Int"/></DEPTH_STENCIL_ATTACHMENT>
		<NONE public="1" get="inline" set="null" line="417" static="1"><c path="Int"/></NONE>
		<FRAMEBUFFER_COMPLETE public="1" get="inline" set="null" line="419" static="1"><c path="Int"/></FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="inline" set="null" line="420" static="1"><c path="Int"/></FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="inline" set="null" line="421" static="1"><c path="Int"/></FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="inline" set="null" line="422" static="1"><c path="Int"/></FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_UNSUPPORTED public="1" get="inline" set="null" line="423" static="1"><c path="Int"/></FRAMEBUFFER_UNSUPPORTED>
		<FRAMEBUFFER_BINDING public="1" get="inline" set="null" line="425" static="1"><c path="Int"/></FRAMEBUFFER_BINDING>
		<RENDERBUFFER_BINDING public="1" get="inline" set="null" line="426" static="1"><c path="Int"/></RENDERBUFFER_BINDING>
		<MAX_RENDERBUFFER_SIZE public="1" get="inline" set="null" line="427" static="1"><c path="Int"/></MAX_RENDERBUFFER_SIZE>
		<INVALID_FRAMEBUFFER_OPERATION public="1" get="inline" set="null" line="429" static="1"><c path="Int"/></INVALID_FRAMEBUFFER_OPERATION>
		<UNPACK_FLIP_Y_WEBGL public="1" get="inline" set="null" line="432" static="1"><c path="Int"/></UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="inline" set="null" line="433" static="1"><c path="Int"/></UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<CONTEXT_LOST_WEBGL public="1" get="inline" set="null" line="434" static="1"><c path="Int"/></CONTEXT_LOST_WEBGL>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="inline" set="null" line="435" static="1"><c path="Int"/></UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<BROWSER_DEFAULT_WEBGL public="1" get="inline" set="null" line="436" static="1"><c path="Int"/></BROWSER_DEFAULT_WEBGL>
		<drawingBufferHeight public="1" get="get_drawingBufferHeight" set="null" static="1"><c path="Int"/></drawingBufferHeight>
		<drawingBufferWidth public="1" get="get_drawingBufferWidth" set="null" static="1"><c path="Int"/></drawingBufferWidth>
		<version public="1" get="get_version" set="null" static="1"><c path="Int"/></version>
		<activeTexture public="1" set="method" line="445" static="1"><f a="texture">
	<c path="Int"/>
	<e path="Void"/>
</f></activeTexture>
		<attachShader public="1" set="method" line="448" static="1"><f a="program:shader">
	<c path="native.gl.GLProgram"/>
	<c path="native.gl.GLShader"/>
	<e path="Void"/>
</f></attachShader>
		<bindAttribLocation public="1" set="method" line="456" static="1"><f a="program:index:name">
	<c path="native.gl.GLProgram"/>
	<c path="Int"/>
	<c path="String"/>
	<e path="Void"/>
</f></bindAttribLocation>
		<bindBitmapDataTexture public="1" set="method" line="463" static="1"><f a="texture">
	<c path="native.display.BitmapData"/>
	<e path="Void"/>
</f></bindBitmapDataTexture>
		<bindBuffer public="1" set="method" line="470" static="1"><f a="target:buffer">
	<c path="Int"/>
	<c path="native.gl.GLBuffer"/>
	<e path="Void"/>
</f></bindBuffer>
		<bindFramebuffer public="1" set="method" line="477" static="1"><f a="target:framebuffer">
	<c path="Int"/>
	<c path="native.gl.GLFramebuffer"/>
	<e path="Void"/>
</f></bindFramebuffer>
		<bindRenderbuffer public="1" set="method" line="484" static="1"><f a="target:renderbuffer">
	<c path="Int"/>
	<c path="native.gl.GLRenderbuffer"/>
	<e path="Void"/>
</f></bindRenderbuffer>
		<bindTexture public="1" set="method" line="491" static="1"><f a="target:texture">
	<c path="Int"/>
	<c path="native.gl.GLTexture"/>
	<e path="Void"/>
</f></bindTexture>
		<blendColor public="1" set="method" line="498" static="1"><f a="red:green:blue:alpha">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></blendColor>
		<blendEquation public="1" set="method" line="505" static="1"><f a="mode">
	<c path="Int"/>
	<e path="Void"/>
</f></blendEquation>
		<blendEquationSeparate public="1" set="method" line="512" static="1"><f a="modeRGB:modeAlpha">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></blendEquationSeparate>
		<blendFunc public="1" set="method" line="519" static="1"><f a="sfactor:dfactor">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></blendFunc>
		<blendFuncSeparate public="1" set="method" line="526" static="1"><f a="srcRGB:dstRGB:srcAlpha:dstAlpha">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></blendFuncSeparate>
		<bufferData public="1" set="method" line="533" static="1"><f a="target:data:usage">
	<c path="Int"/>
	<c path="native.utils.IMemoryRange"/>
	<c path="Int"/>
	<e path="Void"/>
</f></bufferData>
		<bufferSubData public="1" set="method" line="540" static="1"><f a="target:offset:data">
	<c path="Int"/>
	<c path="Int"/>
	<c path="native.utils.IMemoryRange"/>
	<e path="Void"/>
</f></bufferSubData>
		<checkFramebufferStatus public="1" set="method" line="547" static="1"><f a="target">
	<c path="Int"/>
	<c path="Int"/>
</f></checkFramebufferStatus>
		<clear public="1" set="method" line="554" static="1"><f a="mask">
	<c path="Int"/>
	<e path="Void"/>
</f></clear>
		<clearColor public="1" set="method" line="561" static="1"><f a="red:green:blue:alpha">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></clearColor>
		<clearDepth public="1" set="method" line="568" static="1"><f a="depth">
	<c path="Float"/>
	<e path="Void"/>
</f></clearDepth>
		<clearStencil public="1" set="method" line="575" static="1"><f a="s">
	<c path="Int"/>
	<e path="Void"/>
</f></clearStencil>
		<colorMask public="1" set="method" line="582" static="1"><f a="red:green:blue:alpha">
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></colorMask>
		<compileShader public="1" set="method" line="589" static="1"><f a="shader">
	<c path="native.gl.GLShader"/>
	<e path="Void"/>
</f></compileShader>
		<compressedTexImage2D public="1" set="method" line="596" static="1"><f a="target:level:internalformat:width:height:border:data">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="native.utils.IMemoryRange"/>
	<e path="Void"/>
</f></compressedTexImage2D>
		<compressedTexSubImage2D public="1" set="method" line="603" static="1"><f a="target:level:xoffset:yoffset:width:height:format:data">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="native.utils.IMemoryRange"/>
	<e path="Void"/>
</f></compressedTexSubImage2D>
		<copyTexImage2D public="1" set="method" line="610" static="1"><f a="target:level:internalformat:x:y:width:height:border">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></copyTexImage2D>
		<copyTexSubImage2D public="1" set="method" line="617" static="1"><f a="target:level:xoffset:yoffset:x:y:width:height">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></copyTexSubImage2D>
		<createBuffer public="1" set="method" line="624" static="1"><f a=""><c path="native.gl.GLBuffer"/></f></createBuffer>
		<createFramebuffer public="1" set="method" line="631" static="1"><f a=""><c path="native.gl.GLFramebuffer"/></f></createFramebuffer>
		<createProgram public="1" set="method" line="638" static="1"><f a=""><c path="native.gl.GLProgram"/></f></createProgram>
		<createRenderbuffer public="1" set="method" line="645" static="1"><f a=""><c path="native.gl.GLRenderbuffer"/></f></createRenderbuffer>
		<createShader public="1" set="method" line="652" static="1"><f a="type">
	<c path="Int"/>
	<c path="native.gl.GLShader"/>
</f></createShader>
		<createTexture public="1" set="method" line="659" static="1"><f a=""><c path="native.gl.GLTexture"/></f></createTexture>
		<cullFace public="1" set="method" line="666" static="1"><f a="mode">
	<c path="Int"/>
	<e path="Void"/>
</f></cullFace>
		<deleteBuffer public="1" set="method" line="673" static="1"><f a="buffer">
	<c path="native.gl.GLBuffer"/>
	<e path="Void"/>
</f></deleteBuffer>
		<deleteFramebuffer public="1" set="method" line="681" static="1"><f a="framebuffer">
	<c path="native.gl.GLFramebuffer"/>
	<e path="Void"/>
</f></deleteFramebuffer>
		<deleteProgram public="1" set="method" line="688" static="1"><f a="program">
	<c path="native.gl.GLProgram"/>
	<e path="Void"/>
</f></deleteProgram>
		<deleteRenderbuffer public="1" set="method" line="696" static="1"><f a="renderbuffer">
	<c path="native.gl.GLRenderbuffer"/>
	<e path="Void"/>
</f></deleteRenderbuffer>
		<deleteShader public="1" set="method" line="703" static="1"><f a="shader">
	<c path="native.gl.GLShader"/>
	<e path="Void"/>
</f></deleteShader>
		<deleteTexture public="1" set="method" line="711" static="1"><f a="texture">
	<c path="native.gl.GLTexture"/>
	<e path="Void"/>
</f></deleteTexture>
		<depthFunc public="1" set="method" line="719" static="1"><f a="func">
	<c path="Int"/>
	<e path="Void"/>
</f></depthFunc>
		<depthMask public="1" set="method" line="726" static="1"><f a="flag">
	<e path="Bool"/>
	<e path="Void"/>
</f></depthMask>
		<depthRange public="1" set="method" line="733" static="1"><f a="zNear:zFar">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></depthRange>
		<detachShader public="1" set="method" line="740" static="1"><f a="program:shader">
	<c path="native.gl.GLProgram"/>
	<c path="native.gl.GLShader"/>
	<e path="Void"/>
</f></detachShader>
		<disable public="1" set="method" line="747" static="1"><f a="cap">
	<c path="Int"/>
	<e path="Void"/>
</f></disable>
		<disableVertexAttribArray public="1" set="method" line="754" static="1"><f a="index">
	<c path="Int"/>
	<e path="Void"/>
</f></disableVertexAttribArray>
		<drawArrays public="1" set="method" line="761" static="1"><f a="mode:first:count">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></drawArrays>
		<drawElements public="1" set="method" line="768" static="1"><f a="mode:count:type:offset">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></drawElements>
		<enable public="1" set="method" line="775" static="1"><f a="cap">
	<c path="Int"/>
	<e path="Void"/>
</f></enable>
		<enableVertexAttribArray public="1" set="method" line="782" static="1"><f a="index">
	<c path="Int"/>
	<e path="Void"/>
</f></enableVertexAttribArray>
		<finish public="1" set="method" line="789" static="1"><f a=""><e path="Void"/></f></finish>
		<flush public="1" set="method" line="796" static="1"><f a=""><e path="Void"/></f></flush>
		<framebufferRenderbuffer public="1" set="method" line="803" static="1"><f a="target:attachment:renderbuffertarget:renderbuffer">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="native.gl.GLRenderbuffer"/>
	<e path="Void"/>
</f></framebufferRenderbuffer>
		<framebufferTexture2D public="1" set="method" line="810" static="1"><f a="target:attachment:textarget:texture:level">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="native.gl.GLTexture"/>
	<c path="Int"/>
	<e path="Void"/>
</f></framebufferTexture2D>
		<frontFace public="1" set="method" line="817" static="1"><f a="mode">
	<c path="Int"/>
	<e path="Void"/>
</f></frontFace>
		<generateMipmap public="1" set="method" line="824" static="1"><f a="target">
	<c path="Int"/>
	<e path="Void"/>
</f></generateMipmap>
		<getActiveAttrib public="1" set="method" line="831" static="1"><f a="program:index">
	<c path="native.gl.GLProgram"/>
	<c path="Int"/>
	<t path="native.gl.GLActiveInfo"/>
</f></getActiveAttrib>
		<getActiveUniform public="1" set="method" line="838" static="1"><f a="program:index">
	<c path="native.gl.GLProgram"/>
	<c path="Int"/>
	<t path="native.gl.GLActiveInfo"/>
</f></getActiveUniform>
		<getAttachedShaders public="1" set="method" line="845" static="1"><f a="program">
	<c path="native.gl.GLProgram"/>
	<c path="Array"><c path="native.gl.GLShader"/></c>
</f></getAttachedShaders>
		<getAttribLocation public="1" set="method" line="852" static="1"><f a="program:name">
	<c path="native.gl.GLProgram"/>
	<c path="String"/>
	<c path="Int"/>
</f></getAttribLocation>
		<getBufferParameter public="1" set="method" line="859" static="1"><f a="target:pname">
	<c path="Int"/>
	<c path="Int"/>
	<d/>
</f></getBufferParameter>
		<getContextAttributes public="1" set="method" line="866" static="1"><f a=""><t path="native.gl.GLContextAttributes"/></f></getContextAttributes>
		<getError public="1" set="method" line="876" static="1"><f a=""><c path="Int"/></f></getError>
		<getExtension public="1" set="method" line="883" static="1"><f a="name">
	<c path="String"/>
	<d/>
</f></getExtension>
		<getFramebufferAttachmentParameter public="1" set="method" line="891" static="1"><f a="target:attachment:pname">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<d/>
</f></getFramebufferAttachmentParameter>
		<getParameter public="1" set="method" line="898" static="1"><f a="pname">
	<c path="Int"/>
	<d/>
</f></getParameter>
		<getProgramInfoLog public="1" set="method" line="905" static="1"><f a="program">
	<c path="native.gl.GLProgram"/>
	<c path="String"/>
</f></getProgramInfoLog>
		<getProgramParameter public="1" set="method" line="912" static="1"><f a="program:pname">
	<c path="native.gl.GLProgram"/>
	<c path="Int"/>
	<c path="Int"/>
</f></getProgramParameter>
		<getRenderbufferParameter public="1" set="method" line="919" static="1"><f a="target:pname">
	<c path="Int"/>
	<c path="Int"/>
	<d/>
</f></getRenderbufferParameter>
		<getShaderInfoLog public="1" set="method" line="926" static="1"><f a="shader">
	<c path="native.gl.GLShader"/>
	<c path="String"/>
</f></getShaderInfoLog>
		<getShaderParameter public="1" set="method" line="933" static="1"><f a="shader:pname">
	<c path="native.gl.GLShader"/>
	<c path="Int"/>
	<c path="Int"/>
</f></getShaderParameter>
		<getShaderPrecisionFormat public="1" set="method" line="940" static="1"><f a="shadertype:precisiontype">
	<c path="Int"/>
	<c path="Int"/>
	<t path="native.gl.ShaderPrecisionFormat"/>
</f></getShaderPrecisionFormat>
		<getShaderSource public="1" set="method" line="947" static="1"><f a="shader">
	<c path="native.gl.GLShader"/>
	<c path="String"/>
</f></getShaderSource>
		<getSupportedExtensions public="1" set="method" line="954" static="1"><f a=""><c path="Array"><c path="String"/></c></f></getSupportedExtensions>
		<getTexParameter public="1" set="method" line="963" static="1"><f a="target:pname">
	<c path="Int"/>
	<c path="Int"/>
	<d/>
</f></getTexParameter>
		<getUniform public="1" set="method" line="970" static="1"><f a="program:location">
	<c path="native.gl.GLProgram"/>
	<t path="native.gl.GLUniformLocation"/>
	<d/>
</f></getUniform>
		<getUniformLocation public="1" set="method" line="977" static="1"><f a="program:name">
	<c path="native.gl.GLProgram"/>
	<c path="String"/>
	<d/>
</f></getUniformLocation>
		<getVertexAttrib public="1" set="method" line="984" static="1"><f a="index:pname">
	<c path="Int"/>
	<c path="Int"/>
	<d/>
</f></getVertexAttrib>
		<getVertexAttribOffset public="1" set="method" line="991" static="1"><f a="index:pname">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></getVertexAttribOffset>
		<hint public="1" set="method" line="998" static="1"><f a="target:mode">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></hint>
		<isBuffer public="1" set="method" line="1005" static="1"><f a="buffer">
	<c path="native.gl.GLBuffer"/>
	<e path="Bool"/>
</f></isBuffer>
		<isEnabled public="1" set="method" line="1016" static="1"><f a="cap">
	<c path="Int"/>
	<e path="Bool"/>
</f></isEnabled>
		<isFramebuffer public="1" set="method" line="1023" static="1"><f a="framebuffer">
	<c path="native.gl.GLFramebuffer"/>
	<e path="Bool"/>
</f></isFramebuffer>
		<isProgram public="1" set="method" line="1030" static="1"><f a="program">
	<c path="native.gl.GLProgram"/>
	<e path="Bool"/>
</f></isProgram>
		<isRenderbuffer public="1" set="method" line="1037" static="1"><f a="renderbuffer">
	<c path="native.gl.GLRenderbuffer"/>
	<e path="Bool"/>
</f></isRenderbuffer>
		<isShader public="1" set="method" line="1044" static="1"><f a="shader">
	<c path="native.gl.GLShader"/>
	<e path="Bool"/>
</f></isShader>
		<isTexture public="1" set="method" line="1051" static="1"><f a="texture">
	<c path="native.gl.GLTexture"/>
	<e path="Bool"/>
</f></isTexture>
		<lineWidth public="1" set="method" line="1058" static="1"><f a="width">
	<c path="Float"/>
	<e path="Void"/>
</f></lineWidth>
		<linkProgram public="1" set="method" line="1065" static="1"><f a="program">
	<c path="native.gl.GLProgram"/>
	<e path="Void"/>
</f></linkProgram>
		<load set="method" line="1072" static="1"><f a="inName:inArgCount">
	<c path="String"/>
	<c path="Int"/>
	<d/>
</f></load>
		<pixelStorei public="1" set="method" line="1088" static="1"><f a="pname:param">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></pixelStorei>
		<polygonOffset public="1" set="method" line="1095" static="1"><f a="factor:units">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></polygonOffset>
		<readPixels public="1" set="method" line="1102" static="1"><f a="x:y:width:height:format:type:pixels">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="native.utils.ByteArray"/>
	<e path="Void"/>
</f></readPixels>
		<renderbufferStorage public="1" set="method" line="1109" static="1"><f a="target:internalformat:width:height">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></renderbufferStorage>
		<sampleCoverage public="1" set="method" line="1116" static="1"><f a="value:invert">
	<c path="Float"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></sampleCoverage>
		<scissor public="1" set="method" line="1123" static="1"><f a="x:y:width:height">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></scissor>
		<shaderSource public="1" set="method" line="1130" static="1"><f a="shader:source">
	<c path="native.gl.GLShader"/>
	<c path="String"/>
	<e path="Void"/>
</f></shaderSource>
		<stencilFunc public="1" set="method" line="1137" static="1"><f a="func:ref:mask">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></stencilFunc>
		<stencilFuncSeparate public="1" set="method" line="1144" static="1"><f a="face:func:ref:mask">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></stencilFuncSeparate>
		<stencilMask public="1" set="method" line="1151" static="1"><f a="mask">
	<c path="Int"/>
	<e path="Void"/>
</f></stencilMask>
		<stencilMaskSeparate public="1" set="method" line="1158" static="1"><f a="face:mask">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></stencilMaskSeparate>
		<stencilOp public="1" set="method" line="1165" static="1"><f a="fail:zfail:zpass">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></stencilOp>
		<stencilOpSeparate public="1" set="method" line="1172" static="1"><f a="face:fail:zfail:zpass">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></stencilOpSeparate>
		<texImage2D public="1" set="method" line="1179" static="1"><f a="target:level:internalformat:width:height:border:format:type:pixels">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="native.utils.ArrayBufferView"/>
	<e path="Void"/>
</f></texImage2D>
		<texParameterf public="1" set="method" line="1186" static="1"><f a="target:pname:param">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></texParameterf>
		<texParameteri public="1" set="method" line="1193" static="1"><f a="target:pname:param">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></texParameteri>
		<texSubImage2D public="1" set="method" line="1200" static="1"><f a="target:level:xoffset:yoffset:width:height:format:type:pixels">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="native.utils.ByteArray"/>
	<e path="Void"/>
</f></texSubImage2D>
		<uniform1f public="1" set="method" line="1207" static="1"><f a="location:x">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Float"/>
	<e path="Void"/>
</f></uniform1f>
		<uniform1fv public="1" set="method" line="1214" static="1"><f a="location:x">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Float"/></c>
	<e path="Void"/>
</f></uniform1fv>
		<uniform1i public="1" set="method" line="1221" static="1"><f a="location:x">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Int"/>
	<e path="Void"/>
</f></uniform1i>
		<uniform1iv public="1" set="method" line="1228" static="1"><f a="location:v">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Int"/></c>
	<e path="Void"/>
</f></uniform1iv>
		<uniform2f public="1" set="method" line="1235" static="1"><f a="location:x:y">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></uniform2f>
		<uniform2fv public="1" set="method" line="1242" static="1"><f a="location:v">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Float"/></c>
	<e path="Void"/>
</f></uniform2fv>
		<uniform2i public="1" set="method" line="1249" static="1"><f a="location:x:y">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></uniform2i>
		<uniform2iv public="1" set="method" line="1256" static="1"><f a="location:v">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Int"/></c>
	<e path="Void"/>
</f></uniform2iv>
		<uniform3f public="1" set="method" line="1263" static="1"><f a="location:x:y:z">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></uniform3f>
		<uniform3fv public="1" set="method" line="1270" static="1"><f a="location:v">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Float"/></c>
	<e path="Void"/>
</f></uniform3fv>
		<uniform3i public="1" set="method" line="1277" static="1"><f a="location:x:y:z">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></uniform3i>
		<uniform3iv public="1" set="method" line="1284" static="1"><f a="location:v">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Int"/></c>
	<e path="Void"/>
</f></uniform3iv>
		<uniform4f public="1" set="method" line="1291" static="1"><f a="location:x:y:z:w">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></uniform4f>
		<uniform4fv public="1" set="method" line="1298" static="1"><f a="location:v">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Float"/></c>
	<e path="Void"/>
</f></uniform4fv>
		<uniform4i public="1" set="method" line="1305" static="1"><f a="location:x:y:z:w">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></uniform4i>
		<uniform4iv public="1" set="method" line="1312" static="1"><f a="location:v">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Int"/></c>
	<e path="Void"/>
</f></uniform4iv>
		<uniformMatrix2fv public="1" set="method" line="1319" static="1"><f a="location:transpose:v">
	<t path="native.gl.GLUniformLocation"/>
	<e path="Bool"/>
	<c path="native.utils.Float32Array"/>
	<e path="Void"/>
</f></uniformMatrix2fv>
		<uniformMatrix3fv public="1" set="method" line="1326" static="1"><f a="location:transpose:v">
	<t path="native.gl.GLUniformLocation"/>
	<e path="Bool"/>
	<c path="native.utils.Float32Array"/>
	<e path="Void"/>
</f></uniformMatrix3fv>
		<uniformMatrix4fv public="1" set="method" line="1333" static="1"><f a="location:transpose:v">
	<t path="native.gl.GLUniformLocation"/>
	<e path="Bool"/>
	<c path="native.utils.Float32Array"/>
	<e path="Void"/>
</f></uniformMatrix4fv>
		<uniformMatrix3D public="1" set="method" line="1340" static="1"><f a="location:transpose:matrix">
	<t path="native.gl.GLUniformLocation"/>
	<e path="Bool"/>
	<c path="native.geom.Matrix3D"/>
	<e path="Void"/>
</f></uniformMatrix3D>
		<useProgram public="1" set="method" line="1347" static="1"><f a="program">
	<c path="native.gl.GLProgram"/>
	<e path="Void"/>
</f></useProgram>
		<validateProgram public="1" set="method" line="1354" static="1"><f a="program">
	<c path="native.gl.GLProgram"/>
	<e path="Void"/>
</f></validateProgram>
		<vertexAttrib1f public="1" set="method" line="1361" static="1"><f a="indx:x">
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></vertexAttrib1f>
		<vertexAttrib1fv public="1" set="method" line="1368" static="1"><f a="indx:values">
	<c path="Int"/>
	<c path="Array"><c path="Float"/></c>
	<e path="Void"/>
</f></vertexAttrib1fv>
		<vertexAttrib2f public="1" set="method" line="1375" static="1"><f a="indx:x:y">
	<c path="Int"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></vertexAttrib2f>
		<vertexAttrib2fv public="1" set="method" line="1382" static="1"><f a="indx:values">
	<c path="Int"/>
	<c path="Array"><c path="Float"/></c>
	<e path="Void"/>
</f></vertexAttrib2fv>
		<vertexAttrib3f public="1" set="method" line="1389" static="1"><f a="indx:x:y:z">
	<c path="Int"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></vertexAttrib3f>
		<vertexAttrib3fv public="1" set="method" line="1396" static="1"><f a="indx:values">
	<c path="Int"/>
	<c path="Array"><c path="Float"/></c>
	<e path="Void"/>
</f></vertexAttrib3fv>
		<vertexAttrib4f public="1" set="method" line="1403" static="1"><f a="indx:x:y:z:w">
	<c path="Int"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></vertexAttrib4f>
		<vertexAttrib4fv public="1" set="method" line="1410" static="1"><f a="indx:values">
	<c path="Int"/>
	<c path="Array"><c path="Float"/></c>
	<e path="Void"/>
</f></vertexAttrib4fv>
		<vertexAttribPointer public="1" set="method" line="1417" static="1"><f a="indx:size:type:normalized:stride:offset">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Bool"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></vertexAttribPointer>
		<viewport public="1" set="method" line="1424" static="1"><f a="x:y:width:height">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></viewport>
		<get_drawingBufferHeight set="method" line="1438" static="1"><f a=""><c path="Int"/></f></get_drawingBufferHeight>
		<get_drawingBufferWidth set="method" line="1439" static="1"><f a=""><c path="Int"/></f></get_drawingBufferWidth>
		<get_version set="method" line="1440" static="1"><f a=""><c path="Int"/></f></get_version>
		<nme_gl_active_texture line="1450" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_active_texture>
		<nme_gl_attach_shader line="1451" static="1"><f a=":">
	<d/>
	<d/>
	<unknown/>
</f></nme_gl_attach_shader>
		<nme_gl_bind_attrib_location line="1452" static="1"><f a="::">
	<d/>
	<c path="Int"/>
	<c path="String"/>
	<unknown/>
</f></nme_gl_bind_attrib_location>
		<nme_gl_bind_bitmap_data_texture line="1453" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_gl_bind_bitmap_data_texture>
		<nme_gl_bind_buffer line="1454" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_bind_buffer>
		<nme_gl_bind_framebuffer line="1455" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_bind_framebuffer>
		<nme_gl_bind_renderbuffer line="1456" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_bind_renderbuffer>
		<nme_gl_bind_texture line="1457" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_bind_texture>
		<nme_gl_blend_color line="1458" static="1"><f a=":::">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gl_blend_color>
		<nme_gl_blend_equation line="1459" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_blend_equation>
		<nme_gl_blend_equation_separate line="1460" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_blend_equation_separate>
		<nme_gl_blend_func line="1461" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_blend_func>
		<nme_gl_blend_func_separate line="1462" static="1"><f a=":::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_blend_func_separate>
		<nme_gl_buffer_data line="1463" static="1"><f a="::::">
	<c path="Int"/>
	<c path="native.utils.ByteArray"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_buffer_data>
		<nme_gl_buffer_sub_data line="1464" static="1"><f a="::::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="native.utils.ByteArray"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_buffer_sub_data>
		<nme_gl_check_framebuffer_status line="1465" static="1"><f a="">
	<c path="Int"/>
	<c path="Int"/>
</f></nme_gl_check_framebuffer_status>
		<nme_gl_clear line="1466" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_clear>
		<nme_gl_clear_color line="1467" static="1"><f a=":::">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gl_clear_color>
		<nme_gl_clear_depth line="1468" static="1"><f a="">
	<c path="Float"/>
	<unknown/>
</f></nme_gl_clear_depth>
		<nme_gl_clear_stencil line="1469" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_clear_stencil>
		<nme_gl_color_mask line="1470" static="1"><f a=":::">
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<unknown/>
</f></nme_gl_color_mask>
		<nme_gl_compile_shader line="1471" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_gl_compile_shader>
		<nme_gl_compressed_tex_image_2d line="1472" static="1"><f a=":::::::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<t path="Null"><c path="native.utils.ByteArray"/></t>
	<t path="Null"><c path="Int"/></t>
	<unknown/>
</f></nme_gl_compressed_tex_image_2d>
		<nme_gl_compressed_tex_sub_image_2d line="1473" static="1"><f a="::::::::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<t path="Null"><c path="native.utils.ByteArray"/></t>
	<t path="Null"><c path="Int"/></t>
	<unknown/>
</f></nme_gl_compressed_tex_sub_image_2d>
		<nme_gl_copy_tex_image_2d line="1474" static="1"><f a=":::::::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_copy_tex_image_2d>
		<nme_gl_copy_tex_sub_image_2d line="1475" static="1"><f a=":::::::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_copy_tex_sub_image_2d>
		<nme_gl_create_buffer line="1476" static="1"><f a=""><unknown/></f></nme_gl_create_buffer>
		<nme_gl_create_framebuffer line="1477" static="1"><f a=""><unknown/></f></nme_gl_create_framebuffer>
		<nme_gl_create_program line="1478" static="1"><f a=""><unknown/></f></nme_gl_create_program>
		<nme_gl_create_render_buffer line="1479" static="1"><f a=""><unknown/></f></nme_gl_create_render_buffer>
		<nme_gl_create_shader line="1480" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_create_shader>
		<nme_gl_create_texture line="1481" static="1"><f a=""><unknown/></f></nme_gl_create_texture>
		<nme_gl_delete_buffer line="1482" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_gl_delete_buffer>
		<nme_gl_delete_program line="1483" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_gl_delete_program>
		<nme_gl_delete_shader line="1484" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_gl_delete_shader>
		<nme_gl_delete_texture line="1485" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_gl_delete_texture>
		<nme_gl_depth_func line="1486" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_depth_func>
		<nme_gl_depth_mask line="1487" static="1"><f a="">
	<e path="Bool"/>
	<unknown/>
</f></nme_gl_depth_mask>
		<nme_gl_depth_range line="1488" static="1"><f a=":">
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gl_depth_range>
		<nme_gl_detach_shader line="1489" static="1"><f a=":">
	<d/>
	<d/>
	<unknown/>
</f></nme_gl_detach_shader>
		<nme_gl_disable line="1490" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_disable>
		<nme_gl_disable_vertex_attrib_array line="1491" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_disable_vertex_attrib_array>
		<nme_gl_draw_arrays line="1492" static="1"><f a="::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_draw_arrays>
		<nme_gl_draw_elements line="1493" static="1"><f a=":::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_draw_elements>
		<nme_gl_enable line="1494" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_enable>
		<nme_gl_enable_vertex_attrib_array line="1495" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_enable_vertex_attrib_array>
		<nme_gl_finish line="1496" static="1"><f a=""><unknown/></f></nme_gl_finish>
		<nme_gl_flush line="1497" static="1"><f a=""><unknown/></f></nme_gl_flush>
		<nme_gl_framebuffer_renderbuffer line="1498" static="1"><f a=":::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<d/>
	<unknown/>
</f></nme_gl_framebuffer_renderbuffer>
		<nme_gl_framebuffer_texture2D line="1499" static="1"><f a="::::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_framebuffer_texture2D>
		<nme_gl_front_face line="1500" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_front_face>
		<nme_gl_generate_mipmap line="1501" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_generate_mipmap>
		<nme_gl_get_active_attrib line="1502" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<t path="native.gl.GLActiveInfo"/>
</f></nme_gl_get_active_attrib>
		<nme_gl_get_active_uniform line="1503" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<t path="native.gl.GLActiveInfo"/>
</f></nme_gl_get_active_uniform>
		<nme_gl_get_attrib_location line="1504" static="1"><f a=":">
	<d/>
	<c path="String"/>
	<c path="Int"/>
</f></nme_gl_get_attrib_location>
		<nme_gl_get_buffer_paramerter line="1505" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_get_buffer_paramerter>
		<nme_gl_get_context_attributes line="1506" static="1"><f a=""><a>
	<stencil><e path="Bool"/></stencil>
	<preserveDrawingBuffer><e path="Bool"/></preserveDrawingBuffer>
	<premultipliedAlpha><e path="Bool"/></premultipliedAlpha>
	<depth><e path="Bool"/></depth>
	<antialias><e path="Bool"/></antialias>
	<alpha><e path="Bool"/></alpha>
</a></f></nme_gl_get_context_attributes>
		<nme_gl_get_error line="1507" static="1"><f a=""><c path="Int"/></f></nme_gl_get_error>
		<nme_gl_get_framebuffer_attachment_parameter line="1508" static="1"><f a="::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_get_framebuffer_attachment_parameter>
		<nme_gl_get_parameter line="1509" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_get_parameter>
		<nme_gl_get_program_info_log line="1510" static="1"><f a="">
	<d/>
	<c path="String"/>
</f></nme_gl_get_program_info_log>
		<nme_gl_get_program_parameter line="1511" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
</f></nme_gl_get_program_parameter>
		<nme_gl_get_render_buffer_parameter line="1512" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_get_render_buffer_parameter>
		<nme_gl_get_shader_info_log line="1513" static="1"><f a="">
	<d/>
	<c path="String"/>
</f></nme_gl_get_shader_info_log>
		<nme_gl_get_shader_parameter line="1514" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
</f></nme_gl_get_shader_parameter>
		<nme_gl_get_shader_precision_format line="1515" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<t path="native.gl.ShaderPrecisionFormat"/>
</f></nme_gl_get_shader_precision_format>
		<nme_gl_get_shader_source line="1516" static="1"><f a="">
	<d/>
	<c path="String"/>
</f></nme_gl_get_shader_source>
		<nme_gl_get_supported_extensions line="1517" static="1"><f a="">
	<c path="Array"><c path="String"/></c>
	<unknown/>
</f></nme_gl_get_supported_extensions>
		<nme_gl_get_tex_parameter line="1518" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_get_tex_parameter>
		<nme_gl_get_uniform line="1519" static="1"><f a=":">
	<d/>
	<t path="native.gl.GLUniformLocation"/>
	<unknown/>
</f></nme_gl_get_uniform>
		<nme_gl_get_uniform_location line="1520" static="1"><f a=":">
	<d/>
	<c path="String"/>
	<unknown/>
</f></nme_gl_get_uniform_location>
		<nme_gl_get_vertex_attrib line="1521" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_get_vertex_attrib>
		<nme_gl_get_vertex_attrib_offset line="1522" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></nme_gl_get_vertex_attrib_offset>
		<nme_gl_hint line="1523" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_hint>
		<nme_gl_is_buffer line="1524" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_gl_is_buffer>
		<nme_gl_is_enabled line="1525" static="1"><f a="">
	<c path="Int"/>
	<e path="Bool"/>
</f></nme_gl_is_enabled>
		<nme_gl_is_framebuffer line="1526" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_gl_is_framebuffer>
		<nme_gl_is_program line="1527" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_gl_is_program>
		<nme_gl_is_renderbuffer line="1528" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_gl_is_renderbuffer>
		<nme_gl_is_shader line="1529" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_gl_is_shader>
		<nme_gl_is_texture line="1530" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_gl_is_texture>
		<nme_gl_line_width line="1531" static="1"><f a="">
	<c path="Float"/>
	<unknown/>
</f></nme_gl_line_width>
		<nme_gl_link_program line="1532" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_gl_link_program>
		<nme_gl_pixel_storei line="1533" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_pixel_storei>
		<nme_gl_polygon_offset line="1534" static="1"><f a=":">
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gl_polygon_offset>
		<nme_gl_renderbuffer_storage line="1535" static="1"><f a=":::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_renderbuffer_storage>
		<nme_gl_sample_coverage line="1536" static="1"><f a=":">
	<c path="Float"/>
	<e path="Bool"/>
	<unknown/>
</f></nme_gl_sample_coverage>
		<nme_gl_scissor line="1537" static="1"><f a=":::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_scissor>
		<nme_gl_shader_source line="1538" static="1"><f a=":">
	<d/>
	<c path="String"/>
	<unknown/>
</f></nme_gl_shader_source>
		<nme_gl_stencil_func line="1539" static="1"><f a="::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_stencil_func>
		<nme_gl_stencil_func_separate line="1540" static="1"><f a=":::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_stencil_func_separate>
		<nme_gl_stencil_mask line="1541" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_stencil_mask>
		<nme_gl_stencil_mask_separate line="1542" static="1"><f a=":">
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_stencil_mask_separate>
		<nme_gl_stencil_op line="1543" static="1"><f a="::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_stencil_op>
		<nme_gl_stencil_op_separate line="1544" static="1"><f a=":::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_stencil_op_separate>
		<nme_gl_tex_image_2d line="1545" static="1"><f a=":::::::::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<t path="Null"><c path="native.utils.ByteArray"/></t>
	<t path="Null"><c path="Int"/></t>
	<unknown/>
</f></nme_gl_tex_image_2d>
		<nme_gl_tex_parameterf line="1546" static="1"><f a="::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gl_tex_parameterf>
		<nme_gl_tex_parameteri line="1547" static="1"><f a="::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_tex_parameteri>
		<nme_gl_tex_sub_image_2d line="1548" static="1"><f a=":::::::::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<t path="Null"><c path="native.utils.ByteArray"/></t>
	<t path="Null"><c path="Int"/></t>
	<unknown/>
</f></nme_gl_tex_sub_image_2d>
		<nme_gl_uniform1f line="1549" static="1"><f a=":">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gl_uniform1f>
		<nme_gl_uniform1fv line="1550" static="1"><f a=":">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Float"/></c>
	<unknown/>
</f></nme_gl_uniform1fv>
		<nme_gl_uniform1i line="1551" static="1"><f a=":">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_uniform1i>
		<nme_gl_uniform1iv line="1552" static="1"><f a=":">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Int"/></c>
	<unknown/>
</f></nme_gl_uniform1iv>
		<nme_gl_uniform2f line="1553" static="1"><f a="::">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gl_uniform2f>
		<nme_gl_uniform2fv line="1554" static="1"><f a=":">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Float"/></c>
	<unknown/>
</f></nme_gl_uniform2fv>
		<nme_gl_uniform2i line="1555" static="1"><f a="::">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_uniform2i>
		<nme_gl_uniform2iv line="1556" static="1"><f a=":">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Int"/></c>
	<unknown/>
</f></nme_gl_uniform2iv>
		<nme_gl_uniform3f line="1557" static="1"><f a=":::">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gl_uniform3f>
		<nme_gl_uniform3fv line="1558" static="1"><f a=":">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Float"/></c>
	<unknown/>
</f></nme_gl_uniform3fv>
		<nme_gl_uniform3i line="1559" static="1"><f a=":::">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_uniform3i>
		<nme_gl_uniform3iv line="1560" static="1"><f a=":">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Int"/></c>
	<unknown/>
</f></nme_gl_uniform3iv>
		<nme_gl_uniform4f line="1561" static="1"><f a="::::">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gl_uniform4f>
		<nme_gl_uniform4fv line="1562" static="1"><f a=":">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Float"/></c>
	<unknown/>
</f></nme_gl_uniform4fv>
		<nme_gl_uniform4i line="1563" static="1"><f a="::::">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_uniform4i>
		<nme_gl_uniform4iv line="1564" static="1"><f a=":">
	<t path="native.gl.GLUniformLocation"/>
	<c path="Array"><c path="Int"/></c>
	<unknown/>
</f></nme_gl_uniform4iv>
		<nme_gl_uniform_matrix line="1565" static="1"><f a=":::">
	<t path="native.gl.GLUniformLocation"/>
	<e path="Bool"/>
	<c path="native.utils.ByteArray"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_uniform_matrix>
		<nme_gl_use_program line="1566" static="1"><f a="">
	<c path="Int"/>
	<unknown/>
</f></nme_gl_use_program>
		<nme_gl_validate_program line="1567" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_gl_validate_program>
		<nme_gl_version line="1568" static="1"><f a=""><c path="Int"/></f></nme_gl_version>
		<nme_gl_vertex_attrib1f line="1569" static="1"><f a=":">
	<c path="Int"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gl_vertex_attrib1f>
		<nme_gl_vertex_attrib1fv line="1570" static="1"><f a=":">
	<c path="Int"/>
	<c path="Array"><c path="Float"/></c>
	<unknown/>
</f></nme_gl_vertex_attrib1fv>
		<nme_gl_vertex_attrib2f line="1571" static="1"><f a="::">
	<c path="Int"/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gl_vertex_attrib2f>
		<nme_gl_vertex_attrib2fv line="1572" static="1"><f a=":">
	<c path="Int"/>
	<c path="Array"><c path="Float"/></c>
	<unknown/>
</f></nme_gl_vertex_attrib2fv>
		<nme_gl_vertex_attrib3f line="1573" static="1"><f a=":::">
	<c path="Int"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gl_vertex_attrib3f>
		<nme_gl_vertex_attrib3fv line="1574" static="1"><f a=":">
	<c path="Int"/>
	<c path="Array"><c path="Float"/></c>
	<unknown/>
</f></nme_gl_vertex_attrib3fv>
		<nme_gl_vertex_attrib4f line="1575" static="1"><f a="::::">
	<c path="Int"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<unknown/>
</f></nme_gl_vertex_attrib4f>
		<nme_gl_vertex_attrib4fv line="1576" static="1"><f a=":">
	<c path="Int"/>
	<c path="Array"><c path="Float"/></c>
	<unknown/>
</f></nme_gl_vertex_attrib4fv>
		<nme_gl_vertex_attrib_pointer line="1577" static="1"><f a=":::::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Bool"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_vertex_attrib_pointer>
		<nme_gl_viewport line="1578" static="1"><f a=":::">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_gl_viewport>
	</class>
	<typedef path="native.gl.ShaderPrecisionFormat" params="" file="/home/joshua/Development/Haxe/nme/native/gl/GL.hx" module="native.gl.GL"><a>
	<rangeMin><c path="Int"/></rangeMin>
	<rangeMax><c path="Int"/></rangeMax>
	<precision><c path="Int"/></precision>
</a></typedef>
	<typedef path="native.gl.GLActiveInfo" params="" file="/home/joshua/Development/Haxe/nme/native/gl/GLActiveInfo.hx"><a>
	<type><c path="Int"/></type>
	<size><c path="Int"/></size>
	<name><c path="String"/></name>
</a></typedef>
	<class path="native.gl.GLObject" params="" file="/home/joshua/Development/Haxe/nme/native/gl/GLObject.hx">
		<get_valid set="method" line="72"><f a=""><e path="Bool"/></f></get_valid>
		<get_invalidated set="method" line="65"><f a=""><e path="Bool"/></f></get_invalidated>
		<toString public="1" set="method" line="51"><f a=""><c path="String"/></f></toString>
		<isInvalid public="1" set="method" line="44"><f a=""><e path="Bool"/></f></isInvalid>
		<isValid public="1" set="method" line="37"><f a=""><e path="Bool"/></f></isValid>
		<invalidate public="1" set="method" line="30"><f a=""><e path="Void"/></f></invalidate>
		<getType set="method" line="23"><f a=""><c path="String"/></f></getType>
		<version><c path="Int"/></version>
		<valid public="1" get="get_valid" set="null"><e path="Bool"/></valid>
		<invalidated public="1" get="get_invalidated" set="null"><e path="Bool"/></invalidated>
		<id public="1" set="null"><d/></id>
		<new set="method" line="15"><f a="inVersion:inId">
	<c path="Int"/>
	<d/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.gl.GLBuffer" params="" file="/home/joshua/Development/Haxe/nme/native/gl/GLBuffer.hx">
		<extends path="native.gl.GLObject"/>
		<getType set="method" line="15" override="1"><f a=""><c path="String"/></f></getType>
		<new public="1" set="method" line="8"><f a="inVersion:inId">
	<c path="Int"/>
	<d/>
	<e path="Void"/>
</f></new>
	</class>
	<typedef path="native.gl.GLContextAttributes" params="" file="/home/joshua/Development/Haxe/nme/native/gl/GLContextAttributes.hx"><a>
	<stencil><e path="Bool"/></stencil>
	<preserveDrawingBuffer><e path="Bool"/></preserveDrawingBuffer>
	<premultipliedAlpha><e path="Bool"/></premultipliedAlpha>
	<depth><e path="Bool"/></depth>
	<antialias><e path="Bool"/></antialias>
	<alpha><e path="Bool"/></alpha>
</a></typedef>
	<class path="native.gl.GLFramebuffer" params="" file="/home/joshua/Development/Haxe/nme/native/gl/GLFramebuffer.hx">
		<extends path="native.gl.GLObject"/>
		<getType set="method" line="15" override="1"><f a=""><c path="String"/></f></getType>
		<new public="1" set="method" line="8"><f a="inVersion:inId">
	<c path="Int"/>
	<d/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.gl.GLProgram" params="" file="/home/joshua/Development/Haxe/nme/native/gl/GLProgram.hx">
		<extends path="native.gl.GLObject"/>
		<getType set="method" line="34" override="1"><f a=""><c path="String"/></f></getType>
		<getShaders public="1" set="method" line="27"><f a=""><c path="Array"><c path="native.gl.GLShader"/></c></f></getShaders>
		<attach public="1" set="method" line="19"><f a="s">
	<c path="native.gl.GLShader"/>
	<e path="Void"/>
</f></attach>
		<shaders public="1"><c path="Array"><c path="native.gl.GLShader"/></c></shaders>
		<new public="1" set="method" line="11"><f a="inVersion:inId">
	<c path="Int"/>
	<d/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.gl.GLRenderbuffer" params="" file="/home/joshua/Development/Haxe/nme/native/gl/GLRenderbuffer.hx">
		<extends path="native.gl.GLObject"/>
		<getType set="method" line="15" override="1"><f a=""><c path="String"/></f></getType>
		<new public="1" set="method" line="8"><f a="inVersion:inId">
	<c path="Int"/>
	<d/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.gl.GLShader" params="" file="/home/joshua/Development/Haxe/nme/native/gl/GLShader.hx">
		<extends path="native.gl.GLObject"/>
		<getType set="method" line="15" override="1"><f a=""><c path="String"/></f></getType>
		<new public="1" set="method" line="8"><f a="inVersion:inId">
	<c path="Int"/>
	<d/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.gl.GLTexture" params="" file="/home/joshua/Development/Haxe/nme/native/gl/GLTexture.hx">
		<extends path="native.gl.GLObject"/>
		<getType set="method" line="15" override="1"><f a=""><c path="String"/></f></getType>
		<new public="1" set="method" line="8"><f a="inVersion:inId">
	<c path="Int"/>
	<d/>
	<e path="Void"/>
</f></new>
	</class>
	<typedef path="native.gl.GLUniformLocation" params="" file="/home/joshua/Development/Haxe/nme/native/gl/GLUniformLocation.hx"><d/></typedef>
	<class path="native.media.ID3Info" params="" file="/home/joshua/Development/Haxe/nme/native/media/ID3Info.hx">
		<year public="1"><c path="String"/></year>
		<track public="1"><c path="String"/></track>
		<songName public="1"><c path="String"/></songName>
		<genre public="1"><c path="String"/></genre>
		<comment public="1"><c path="String"/></comment>
		<artist public="1"><c path="String"/></artist>
		<album public="1"><c path="String"/></album>
		<new public="1" set="method" line="17"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="native.media.Sound" params="" file="/home/joshua/Development/Haxe/nme/native/media/Sound.hx">
		<extends path="native.events.EventDispatcher"/>
		<nme_sound_from_file line="267" static="1"><f a=":">
	<c path="String"/>
	<e path="Bool"/>
	<unknown/>
</f></nme_sound_from_file>
		<nme_sound_from_data line="268" static="1"><f a="::">
	<t path="haxe.io.BytesData"/>
	<c path="Int"/>
	<e path="Bool"/>
	<unknown/>
</f></nme_sound_from_data>
		<nme_sound_get_id3 line="269" static="1"><f a=":">
	<d/>
	<c path="native.media.ID3Info"/>
	<unknown/>
</f></nme_sound_get_id3>
		<nme_sound_get_length line="270" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_sound_get_length>
		<nme_sound_close line="271" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_sound_close>
		<nme_sound_get_status line="272" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_sound_get_status>
		<nme_sound_channel_create_dynamic line="273" static="1"><f a=":">
	<c path="native.utils.ByteArray"/>
	<c path="native.media.SoundTransform"/>
	<unknown/>
</f></nme_sound_channel_create_dynamic>
		<get_length set="method" line="250">
			<f a=""><c path="Float"/></f>
			<haxe_doc>@private</haxe_doc>
		</get_length>
		<get_isBuffering set="method" line="242">
			<f a=""><e path="Bool"/></f>
			<haxe_doc>@private</haxe_doc>
		</get_isBuffering>
		<get_id3 set="method" line="228">
			<f a=""><c path="native.media.ID3Info"/></f>
			<haxe_doc>@private</haxe_doc>
		</get_id3>
		<play public="1" set="method" line="187"><f a="?startTime:?loops:?sndTransform">
	<c path="Float"/>
	<c path="Int"/>
	<c path="native.media.SoundTransform"/>
	<c path="native.media.SoundChannel"/>
</f></play>
		<nmeOnError set="method" line="178">
			<f a="msg">
				<c path="String"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</nmeOnError>
		<nmeCheckLoading set="method" line="153">
			<f a=""><e path="Void"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeCheckLoading>
		<loadPCMFromByteArray public="1" set="method" line="108"><f a="Bytes:samples:?format:?stereo:?sampleRate">
	<t path="nme.utils.ByteArray"/>
	<c path="Int"/>
	<c path="String"/>
	<e path="Bool"/>
	<c path="Float"/>
	<e path="Void"/>
</f></loadPCMFromByteArray>
		<loadCompressedDataFromByteArray public="1" set="method" line="94"><f a="bytes:length:?forcePlayAsMusic">
	<t path="nme.utils.ByteArray"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></loadCompressedDataFromByteArray>
		<load public="1" set="method" line="73"><f a="stream:?context:?forcePlayAsMusic">
	<c path="native.net.URLRequest"/>
	<c path="native.media.SoundLoaderContext"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></load>
		<close public="1" set="method" line="62"><f a=""><e path="Void"/></f></close>
		<addEventListener public="1" set="method" line="45" override="1"><f a="type:listener:?useCapture:?priority:?useWeakReference">
	<c path="String"/>
	<t path="native.events.Function"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></addEventListener>
		<nmeDynamicSound>
			<e path="Bool"/>
			<haxe_doc>@private</haxe_doc>
		</nmeDynamicSound>
		<nmeLoading>
			<e path="Bool"/>
			<haxe_doc>@private</haxe_doc>
		</nmeLoading>
		<nmeHandle>
			<d/>
			<haxe_doc>@private</haxe_doc>
		</nmeHandle>
		<url public="1" set="null"><c path="String"/></url>
		<length public="1" get="get_length" set="null"><c path="Float"/></length>
		<isBuffering public="1" get="get_isBuffering" set="null"><e path="Bool"/></isBuffering>
		<id3 public="1" get="get_id3" set="null"><c path="native.media.ID3Info"/></id3>
		<bytesTotal public="1" set="null"><c path="Int"/></bytesTotal>
		<bytesLoaded public="1" set="null"><c path="Int"/></bytesLoaded>
		<new public="1" set="method" line="31"><f a="?stream:?context:?forcePlayAsMusic">
	<c path="native.net.URLRequest"/>
	<c path="native.media.SoundLoaderContext"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.media.SoundChannel" params="" file="/home/joshua/Development/Haxe/nme/native/media/SoundChannel.hx">
		<extends path="native.events.EventDispatcher"/>
		<nmeDynamicSoundCount public="1" line="19" static="1">
			<c path="Int"/>
			<haxe_doc>@private</haxe_doc>
		</nmeDynamicSoundCount>
		<nmeIncompleteList line="21" static="1"><c path="Array"><c path="native.media.SoundChannel"/></c></nmeIncompleteList>
		<createDynamic public="1" set="method" line="47" static="1"><f a="inSoundHandle:sndTransform:dataProvider">
	<d/>
	<c path="native.media.SoundTransform"/>
	<c path="native.events.EventDispatcher"/>
	<c path="native.media.SoundChannel"/>
</f></createDynamic>
		<nmeCompletePending public="1" set="method" line="101" static="1">
			<f a=""><e path="Bool"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeCompletePending>
		<nmePollComplete public="1" set="method" line="108" static="1">
			<f a=""><e path="Void"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmePollComplete>
		<nme_sound_channel_is_complete line="182" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_sound_channel_is_complete>
		<nme_sound_channel_get_left line="183" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_sound_channel_get_left>
		<nme_sound_channel_get_right line="184" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_sound_channel_get_right>
		<nme_sound_channel_get_position line="185" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_sound_channel_get_position>
		<nme_sound_channel_set_position line="186" static="1"><f a=":">
	<d/>
	<c path="Float"/>
	<c path="Float"/>
</f></nme_sound_channel_set_position>
		<nme_sound_channel_get_data_position line="187" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_sound_channel_get_data_position>
		<nme_sound_channel_stop line="188" static="1"><f a="">
	<d/>
	<unknown/>
</f></nme_sound_channel_stop>
		<nme_sound_channel_create line="189" static="1"><f a=":::">
	<d/>
	<c path="Float"/>
	<c path="Int"/>
	<c path="native.media.SoundTransform"/>
	<unknown/>
</f></nme_sound_channel_create>
		<nme_sound_channel_set_transform line="190" static="1"><f a=":">
	<d/>
	<c path="native.media.SoundTransform"/>
	<unknown/>
</f></nme_sound_channel_set_transform>
		<nme_sound_channel_needs_data line="191" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_sound_channel_needs_data>
		<nme_sound_channel_add_data line="192" static="1"><f a=":">
	<d/>
	<c path="native.utils.ByteArray"/>
	<unknown/>
</f></nme_sound_channel_add_data>
		<set_soundTransform set="method" line="165"><f a="inTransform">
	<c path="native.media.SoundTransform"/>
	<c path="native.media.SoundTransform"/>
</f></set_soundTransform>
		<get_soundTransform set="method" line="152"><f a=""><c path="native.media.SoundTransform"/></f></get_soundTransform>
		<set_position set="method" line="149"><f a="value">
	<c path="Float"/>
	<c path="Float"/>
</f></set_position>
		<get_position set="method" line="148"><f a=""><c path="Float"/></f></get_position>
		<get_rightPeak set="method" line="147"><f a=""><c path="Float"/></f></get_rightPeak>
		<get_leftPeak set="method" line="146"><f a=""><c path="Float"/></f></get_leftPeak>
		<stop public="1" set="method" line="131"><f a=""><e path="Void"/></f></stop>
		<nmeCheckComplete set="method" line="61">
			<f a=""><e path="Bool"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmeCheckComplete>
		<nmeDataProvider public="1">
			<c path="native.events.EventDispatcher"/>
			<haxe_doc>@private</haxe_doc>
		</nmeDataProvider>
		<nmeTransform>
			<c path="native.media.SoundTransform"/>
			<haxe_doc>@private</haxe_doc>
		</nmeTransform>
		<nmeHandle>
			<d/>
			<haxe_doc>@private</haxe_doc>
		</nmeHandle>
		<soundTransform public="1" get="get_soundTransform" set="set_soundTransform"><c path="native.media.SoundTransform"/></soundTransform>
		<position public="1" get="get_position" set="set_position"><c path="Float"/></position>
		<rightPeak public="1" get="get_rightPeak" set="null"><c path="Float"/></rightPeak>
		<leftPeak public="1" get="get_leftPeak" set="null"><c path="Float"/></leftPeak>
		<new public="1" set="method" line="28"><f a="inSoundHandle:startTime:loops:sndTransform">
	<d/>
	<c path="Float"/>
	<c path="Int"/>
	<c path="native.media.SoundTransform"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.media.SoundLoaderContext" params="" file="/home/joshua/Development/Haxe/nme/native/media/SoundLoaderContext.hx"><new public="1" set="method" line="8"><f a=""><e path="Void"/></f></new></class>
	<class path="native.media.SoundTransform" params="" file="/home/joshua/Development/Haxe/nme/native/media/SoundTransform.hx">
		<clone public="1" set="method" line="20"><f a=""><c path="native.media.SoundTransform"/></f></clone>
		<volume public="1"><c path="Float"/></volume>
		<pan public="1"><c path="Float"/></pan>
		<new public="1" set="method" line="12"><f a="?vol:?panning">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.net.SharedObject" params="" file="/home/joshua/Development/Haxe/nme/native/net/SharedObject.hx">
		<extends path="native.events.EventDispatcher"/>
		<mkdir public="1" set="method" line="85" static="1"><f a="directory">
	<c path="String"/>
	<e path="Void"/>
</f></mkdir>
		<getFilePath set="method" line="169" static="1"><f a="name:localPath">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></getFilePath>
		<getLocal public="1" set="method" line="180" static="1"><f a="name:?localPath:?secure">
	<c path="String"/>
	<c path="String"/>
	<e path="Bool"/>
	<c path="native.net.SharedObject"/>
</f></getLocal>
		<resolveClass set="method" line="235" static="1"><f a="name">
	<c path="String"/>
	<c path="Class"><d/></c>
</f></resolveClass>
		<flush public="1" set="method" line="139"><f a="?minDiskSpace">
	<c path="Int"/>
	<e path="native.net.SharedObjectFlushStatus"/>
</f></flush>
		<clear public="1" set="method" line="63"><f a=""><e path="Void"/></f></clear>
		<name>
			<c path="String"/>
			<haxe_doc>@private</haxe_doc>
		</name>
		<localPath>
			<c path="String"/>
			<haxe_doc>@private</haxe_doc>
		</localPath>
		<data public="1" set="null"><d/></data>
		<new set="method" line="52"><f a="name:localPath:data">
	<c path="String"/>
	<c path="String"/>
	<d/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="native.net.SharedObjectFlushStatus" params="" file="/home/joshua/Development/Haxe/nme/native/net/SharedObjectFlushStatus.hx">
		<PENDING/>
		<FLUSHED/>
		<meta><m n=":fakeEnum"><e>String</e></m></meta>
	</enum>
	<enum path="native.net.URLLoaderDataFormat" params="" file="/home/joshua/Development/Haxe/nme/native/net/URLLoaderDataFormat.hx">
		<VARIABLES/>
		<TEXT/>
		<BINARY/>
	</enum>
	<class path="native.net.URLRequest" params="" file="/home/joshua/Development/Haxe/nme/native/net/URLRequest.hx">
		<AUTH_BASIC public="1" get="inline" set="null" line="11" static="1"><c path="Int"/></AUTH_BASIC>
		<AUTH_DIGEST public="1" get="inline" set="null" line="12" static="1"><c path="Int"/></AUTH_DIGEST>
		<AUTH_GSSNEGOTIATE public="1" get="inline" set="null" line="13" static="1"><c path="Int"/></AUTH_GSSNEGOTIATE>
		<AUTH_NTLM public="1" get="inline" set="null" line="14" static="1"><c path="Int"/></AUTH_NTLM>
		<AUTH_DIGEST_IE public="1" get="inline" set="null" line="15" static="1"><c path="Int"/></AUTH_DIGEST_IE>
		<AUTH_DIGEST_ANY public="1" get="inline" set="null" line="16" static="1"><c path="Int"/></AUTH_DIGEST_ANY>
		<nmePrepare public="1" set="method" line="64">
			<f a=""><e path="Void"/></f>
			<haxe_doc>@private</haxe_doc>
		</nmePrepare>
		<digestAuth public="1" set="method" line="56"><f a="inUser:inPasswd">
	<c path="String"/>
	<c path="String"/>
	<e path="Void"/>
</f></digestAuth>
		<basicAuth public="1" set="method" line="48"><f a="inUser:inPasswd">
	<c path="String"/>
	<c path="String"/>
	<e path="Void"/>
</f></basicAuth>
		<nmeBytes public="1">
			<c path="native.utils.ByteArray"/>
			<haxe_doc>@private</haxe_doc>
		</nmeBytes>
		<credentials public="1"><c path="String"/></credentials>
		<data public="1"><d/></data>
		<contentType public="1"><c path="String"/></contentType>
		<method public="1"><c path="String"/></method>
		<verbose public="1"><e path="Bool"/></verbose>
		<cookieString public="1"><c path="String"/></cookieString>
		<authType public="1"><c path="Int"/></authType>
		<requestHeaders public="1"><c path="Array"><c path="native.net.URLRequestHeader"/></c></requestHeaders>
		<url public="1"><c path="String"/></url>
		<new public="1" set="method" line="31"><f a="?inURL">
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.net.URLRequestHeader" params="" file="/home/joshua/Development/Haxe/nme/native/net/URLRequestHeader.hx">
		<value public="1"><c path="String"/></value>
		<name public="1"><c path="String"/></name>
		<new public="1" set="method" line="12"><f a="?name:?value">
	<c path="String"/>
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.net.URLRequestMethod" params="" file="/home/joshua/Development/Haxe/nme/native/net/URLRequestMethod.hx">
		<DELETE public="1" get="inline" set="null" line="7" static="1"><c path="String"/></DELETE>
		<GET public="1" get="inline" set="null" line="8" static="1"><c path="String"/></GET>
		<HEAD public="1" get="inline" set="null" line="9" static="1"><c path="String"/></HEAD>
		<OPTIONS public="1" get="inline" set="null" line="10" static="1"><c path="String"/></OPTIONS>
		<POST public="1" get="inline" set="null" line="11" static="1"><c path="String"/></POST>
		<PUT public="1" get="inline" set="null" line="12" static="1"><c path="String"/></PUT>
	</class>
	<class path="native.net.URLVariables" params="" file="/home/joshua/Development/Haxe/nme/native/net/URLVariables.hx">
		<toString public="1" set="method" line="39"><f a=""><c path="String"/></f></toString>
		<decode public="1" set="method" line="16"><f a="inVars">
	<c path="String"/>
	<e path="Void"/>
</f></decode>
		<new public="1" set="method" line="8"><f a="?inEncoded">
	<c path="String"/>
	<e path="Void"/>
</f></new>
		<haxe_dynamic><d/></haxe_dynamic>
	</class>
	<class path="native.sensors.Accelerometer" params="" file="/home/joshua/Development/Haxe/nme/native/sensors/Accelerometer.hx">
		<extends path="native.events.EventDispatcher"/>
		<isSupported public="1" get="get_isSupported" set="null" static="1"><e path="Bool"/></isSupported>
		<defaultInterval line="19" static="1"><c path="Int"/></defaultInterval>
		<get_isSupported set="method" line="92" static="1">
			<f a=""><e path="Bool"/></f>
			<haxe_doc>@private</haxe_doc>
		</get_isSupported>
		<nme_input_get_acceleration line="102" static="1"><f a=""><a>
	<z set="null"><c path="Float"/></z>
	<y set="null"><c path="Float"/></y>
	<x set="null"><c path="Float"/></x>
</a></f></nme_input_get_acceleration>
		<update set="method" line="69">
			<f a=""><e path="Void"/></f>
			<haxe_doc>@private</haxe_doc>
		</update>
		<setRequestedUpdateInterval public="1" set="method" line="41"><f a="interval">
	<c path="Float"/>
	<e path="Void"/>
</f></setRequestedUpdateInterval>
		<addEventListener public="1" set="method" line="33" override="1"><f a="type:listener:?useCapture:?priority:?useWeakReference">
	<c path="String"/>
	<t path="native.sensors.Function"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></addEventListener>
		<timer>
			<c path="haxe.Timer"/>
			<haxe_doc>@private</haxe_doc>
		</timer>
		<muted public="1" set="null"><e path="Bool"/></muted>
		<new public="1" set="method" line="24"><f a=""><e path="Void"/></f></new>
	</class>
	<typedef path="native.sensors.Function" params="" file="/home/joshua/Development/Haxe/nme/native/sensors/Accelerometer.hx" module="native.sensors.Accelerometer"><f a="">
	<d/>
	<e path="Void"/>
</f></typedef>
	<class path="native.system.Capabilities" params="" file="/home/joshua/Development/Haxe/nme/native/system/Capabilities.hx">
		<pixelAspectRatio public="1" get="get_pixelAspectRatio" set="null" static="1"><c path="Float"/></pixelAspectRatio>
		<screenDPI public="1" get="get_screenDPI" set="null" static="1"><c path="Float"/></screenDPI>
		<screenResolutionX public="1" get="get_screenResolutionX" set="null" static="1"><c path="Float"/></screenResolutionX>
		<screenResolutionY public="1" get="get_screenResolutionY" set="null" static="1"><c path="Float"/></screenResolutionY>
		<screenResolutions public="1" get="get_screenResolutions" set="null" static="1"><c path="Array"><c path="Array"><c path="Int"/></c></c></screenResolutions>
		<language public="1" get="get_language" set="null" static="1"><c path="String"/></language>
		<get_pixelAspectRatio set="method" line="26" static="1"><f a=""><c path="Float"/></f></get_pixelAspectRatio>
		<get_screenDPI set="method" line="27" static="1"><f a=""><c path="Float"/></f></get_screenDPI>
		<get_screenResolutionX set="method" line="28" static="1"><f a=""><c path="Float"/></f></get_screenResolutionX>
		<get_screenResolutionY set="method" line="29" static="1"><f a=""><c path="Float"/></f></get_screenResolutionY>
		<get_language set="method" line="32" static="1"><f a=""><c path="String"/></f></get_language>
		<get_screenResolutions set="method" line="78" static="1"><f a=""><c path="Array"><c path="Array"><c path="Int"/></c></c></f></get_screenResolutions>
		<nme_capabilities_get_pixel_aspect_ratio line="105" static="1"><f a=""><c path="Float"/></f></nme_capabilities_get_pixel_aspect_ratio>
		<nme_capabilities_get_screen_dpi line="106" static="1"><f a=""><c path="Float"/></f></nme_capabilities_get_screen_dpi>
		<nme_capabilities_get_screen_resolution_x line="107" static="1"><f a=""><c path="Float"/></f></nme_capabilities_get_screen_resolution_x>
		<nme_capabilities_get_screen_resolution_y line="108" static="1"><f a=""><c path="Float"/></f></nme_capabilities_get_screen_resolution_y>
		<nme_capabilities_get_screen_resolutions line="109" static="1"><f a=""><c path="Array"><c path="Int"/></c></f></nme_capabilities_get_screen_resolutions>
		<nme_capabilities_get_language line="110" static="1"><f a=""><c path="String"/></f></nme_capabilities_get_language>
	</class>
	<class path="native.system.System" params="" file="/home/joshua/Development/Haxe/nme/native/system/System.hx">
		<deviceID public="1" get="get_deviceID" set="null" static="1"><c path="String"/></deviceID>
		<totalMemory public="1" get="get_totalMemory" set="null" static="1"><c path="Int"/></totalMemory>
		<exit public="1" set="method" line="16" static="1"><f a="?inCode">
	<c path="Int"/>
	<e path="Void"/>
</f></exit>
		<gc public="1" set="method" line="23" static="1"><f a=""><e path="Void"/></f></gc>
		<get_deviceID set="method" line="45" static="1"><f a=""><c path="String"/></f></get_deviceID>
		<get_totalMemory set="method" line="48" static="1"><f a=""><c path="Int"/></f></get_totalMemory>
		<nme_get_unique_device_identifier line="70" static="1"><f a=""><c path="String"/></f></nme_get_unique_device_identifier>
	</class>
	<enum path="native.text.AntiAliasType" params="" file="/home/joshua/Development/Haxe/nme/native/text/AntiAliasType.hx">
		<NORMAL/>
		<ADVANCED/>
	</enum>
	<class path="native.text.Font" params="" file="/home/joshua/Development/Haxe/nme/native/text/Font.hx">
		<load public="1" set="method" line="26" static="1"><f a="inFilename">
	<c path="String"/>
	<t path="native.text.NativeFontData"/>
</f></load>
		<freetype_import_font line="46" static="1"><f a="::">
	<c path="String"/>
	<unknown/>
	<c path="Int"/>
	<t path="native.text.NativeFontData"/>
</f></freetype_import_font>
		<fontType public="1" set="null"><e path="native.text.FontType"/></fontType>
		<fontStyle public="1" set="null"><e path="native.text.FontStyle"/></fontStyle>
		<fontName public="1" set="null"><c path="String"/></fontName>
		<new public="1" set="method" line="17"><f a="inFilename">
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<typedef path="native.text.NativeFontData" params="" file="/home/joshua/Development/Haxe/nme/native/text/Font.hx" module="native.text.Font"><a>
	<style_name><c path="String"/></style_name>
	<num_glyphs><c path="Int"/></num_glyphs>
	<kerning><c path="Array"><t path="native.text.NativeKerningData"/></c></kerning>
	<is_italic><e path="Bool"/></is_italic>
	<is_fixed_width><e path="Bool"/></is_fixed_width>
	<is_bold><e path="Bool"/></is_bold>
	<height><c path="Int"/></height>
	<has_kerning><e path="Bool"/></has_kerning>
	<has_glyph_names><e path="Bool"/></has_glyph_names>
	<glyphs><c path="Array"><t path="native.text.NativeGlyphData"/></c></glyphs>
	<family_name><c path="String"/></family_name>
	<em_size><c path="Int"/></em_size>
	<descend><c path="Int"/></descend>
	<ascend><c path="Int"/></ascend>
</a></typedef>
	<typedef path="native.text.NativeGlyphData" params="" file="/home/joshua/Development/Haxe/nme/native/text/Font.hx" module="native.text.Font"><a>
	<points><c path="Array"><c path="Int"/></c></points>
	<min_y><c path="Int"/></min_y>
	<min_x><c path="Int"/></min_x>
	<max_y><c path="Int"/></max_y>
	<max_x><c path="Int"/></max_x>
	<char_code><c path="Int"/></char_code>
	<advance><c path="Int"/></advance>
</a></typedef>
	<typedef path="native.text.NativeKerningData" params="" file="/home/joshua/Development/Haxe/nme/native/text/Font.hx" module="native.text.Font"><a>
	<y><c path="Int"/></y>
	<x><c path="Int"/></x>
	<right_glyph><c path="Int"/></right_glyph>
	<left_glyph><c path="Int"/></left_glyph>
</a></typedef>
	<enum path="native.text.FontStyle" params="" file="/home/joshua/Development/Haxe/nme/native/text/FontStyle.hx">
		<REGULAR/>
		<ITALIC/>
		<BOLD_ITALIC/>
		<BOLD/>
		<meta><m n=":fakeEnum"><e>String</e></m></meta>
	</enum>
	<enum path="native.text.FontType" params="" file="/home/joshua/Development/Haxe/nme/native/text/FontType.hx">
		<EMBEDDED_CFF/>
		<EMBEDDED/>
		<DEVICE/>
		<meta><m n=":fakeEnum"><e>String</e></m></meta>
	</enum>
	<class path="native.text.NMEFont" params="" file="/home/joshua/Development/Haxe/nme/native/text/NMEFont.hx">
		<factories line="11" static="1"><c path="Hash"><t path="native.text.NMEFontFactory"/></c></factories>
		<createFont set="method" line="29" static="1"><f a="inDef">
	<t path="native.text.NMEFontDef"/>
	<c path="native.text.NMEFont"/>
</f></createFont>
		<registerFont public="1" set="method" line="48" static="1"><f a="inName:inFactory">
	<c path="String"/>
	<t path="native.text.NMEFontFactory"/>
	<e path="Void"/>
</f></registerFont>
		<renderGlyphInternal set="method" line="66"><f a="inChar">
	<c path="Int"/>
	<d/>
</f></renderGlyphInternal>
		<renderGlyph public="1" set="method" line="59"><f a="inChar">
	<c path="Int"/>
	<c path="native.display.BitmapData"/>
</f></renderGlyph>
		<getGlyphInfo public="1" set="method" line="40"><f a="inChar">
	<c path="Int"/>
	<t path="native.text.NMEGlyphInfo"/>
</f></getGlyphInfo>
		<isRGB><e path="Bool"/></isRGB>
		<descent><c path="Int"/></descent>
		<ascent><c path="Int"/></ascent>
		<height><c path="Int"/></height>
		<new public="1" set="method" line="19"><f a="inHeight:inAscent:inDescent:inIsRGB">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<typedef path="native.text.NMEFontDef" params="" file="/home/joshua/Development/Haxe/nme/native/text/NMEFont.hx" module="native.text.NMEFont"><a>
	<name><c path="String"/></name>
	<italic><e path="Bool"/></italic>
	<height><c path="Int"/></height>
	<bold><e path="Bool"/></bold>
</a></typedef>
	<typedef path="native.text.NMEFontFactory" params="" file="/home/joshua/Development/Haxe/nme/native/text/NMEFont.hx" module="native.text.NMEFont"><f a="">
	<t path="native.text.NMEFontDef"/>
	<c path="native.text.NMEFont"/>
</f></typedef>
	<typedef path="native.text.NMEGlyphInfo" params="" file="/home/joshua/Development/Haxe/nme/native/text/NMEFont.hx" module="native.text.NMEFont"><a>
	<width><c path="Int"/></width>
	<offsetY><c path="Int"/></offsetY>
	<offsetX><c path="Int"/></offsetX>
	<height><c path="Int"/></height>
	<advance><c path="Int"/></advance>
</a></typedef>
	<class path="native.text.TextField" params="" file="/home/joshua/Development/Haxe/nme/native/text/TextField.hx">
		<extends path="native.display.InteractiveObject"/>
		<nme_text_field_create line="147" static="1"><f a=""><unknown/></f></nme_text_field_create>
		<nme_text_field_get_text line="148" static="1"><f a="">
	<d/>
	<c path="String"/>
</f></nme_text_field_get_text>
		<nme_text_field_set_text line="149" static="1"><f a=":">
	<d/>
	<c path="String"/>
	<unknown/>
</f></nme_text_field_set_text>
		<nme_text_field_get_html_text line="150" static="1"><f a="">
	<d/>
	<c path="String"/>
</f></nme_text_field_get_html_text>
		<nme_text_field_set_html_text line="151" static="1"><f a=":">
	<d/>
	<c path="String"/>
	<unknown/>
</f></nme_text_field_set_html_text>
		<nme_text_field_get_text_color line="152" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_text_field_get_text_color>
		<nme_text_field_set_text_color line="153" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_text_field_set_text_color>
		<nme_text_field_get_selectable line="154" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_text_field_get_selectable>
		<nme_text_field_set_selectable line="155" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_text_field_set_selectable>
		<nme_text_field_get_display_as_password line="156" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_text_field_get_display_as_password>
		<nme_text_field_set_display_as_password line="157" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_text_field_set_display_as_password>
		<nme_text_field_get_def_text_format line="158" static="1"><f a=":">
	<d/>
	<c path="native.text.TextFormat"/>
	<unknown/>
</f></nme_text_field_get_def_text_format>
		<nme_text_field_set_def_text_format line="159" static="1"><f a=":">
	<d/>
	<c path="native.text.TextFormat"/>
	<unknown/>
</f></nme_text_field_set_def_text_format>
		<nme_text_field_get_auto_size line="160" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_text_field_get_auto_size>
		<nme_text_field_set_auto_size line="161" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_text_field_set_auto_size>
		<nme_text_field_get_type line="162" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_text_field_get_type>
		<nme_text_field_set_type line="163" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_text_field_set_type>
		<nme_text_field_get_multiline line="164" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_text_field_get_multiline>
		<nme_text_field_set_multiline line="165" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_text_field_set_multiline>
		<nme_text_field_get_word_wrap line="166" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_text_field_get_word_wrap>
		<nme_text_field_set_word_wrap line="167" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_text_field_set_word_wrap>
		<nme_text_field_get_border line="168" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_text_field_get_border>
		<nme_text_field_set_border line="169" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_text_field_set_border>
		<nme_text_field_get_border_color line="170" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_text_field_get_border_color>
		<nme_text_field_set_border_color line="171" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_text_field_set_border_color>
		<nme_text_field_get_background line="172" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_text_field_get_background>
		<nme_text_field_set_background line="173" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_text_field_set_background>
		<nme_text_field_get_background_color line="174" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_text_field_get_background_color>
		<nme_text_field_set_background_color line="175" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_text_field_set_background_color>
		<nme_text_field_get_text_width line="176" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_text_field_get_text_width>
		<nme_text_field_get_text_height line="177" static="1"><f a="">
	<d/>
	<c path="Float"/>
</f></nme_text_field_get_text_height>
		<nme_text_field_set_text_format line="178" static="1"><f a=":::">
	<d/>
	<c path="native.text.TextFormat"/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></nme_text_field_set_text_format>
		<nme_text_field_get_max_scroll_v line="179" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_text_field_get_max_scroll_v>
		<nme_text_field_get_max_scroll_h line="180" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_text_field_get_max_scroll_h>
		<nme_text_field_get_bottom_scroll_v line="181" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_text_field_get_bottom_scroll_v>
		<nme_text_field_get_scroll_h line="182" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_text_field_get_scroll_h>
		<nme_text_field_set_scroll_h line="183" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_text_field_set_scroll_h>
		<nme_text_field_get_scroll_v line="184" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_text_field_get_scroll_v>
		<nme_text_field_set_scroll_v line="185" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_text_field_set_scroll_v>
		<nme_text_field_get_num_lines line="186" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_text_field_get_num_lines>
		<nme_text_field_get_max_chars line="187" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></nme_text_field_get_max_chars>
		<nme_text_field_set_max_chars line="188" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></nme_text_field_set_max_chars>
		<nme_text_field_get_line_text line="189" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<c path="String"/>
</f></nme_text_field_get_line_text>
		<nme_text_field_get_line_metrics line="190" static="1"><f a="::">
	<d/>
	<c path="Int"/>
	<c path="native.text.TextLineMetrics"/>
	<unknown/>
</f></nme_text_field_get_line_metrics>
		<nme_text_field_get_line_offset line="191" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
</f></nme_text_field_get_line_offset>
		<set_wordWrap set="method" line="137"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_wordWrap>
		<get_wordWrap set="method" line="136"><f a=""><e path="Bool"/></f></get_wordWrap>
		<set_type set="method" line="135"><f a="inType">
	<e path="native.text.TextFieldType"/>
	<e path="native.text.TextFieldType"/>
</f></set_type>
		<get_type set="method" line="134"><f a=""><e path="native.text.TextFieldType"/></f></get_type>
		<get_textHeight set="method" line="133"><f a=""><c path="Float"/></f></get_textHeight>
		<get_textWidth set="method" line="132"><f a=""><c path="Float"/></f></get_textWidth>
		<set_textColor set="method" line="131"><f a="inCol">
	<c path="Int"/>
	<c path="Int"/>
</f></set_textColor>
		<get_textColor set="method" line="130"><f a=""><c path="Int"/></f></get_textColor>
		<set_text set="method" line="129"><f a="inText">
	<c path="String"/>
	<c path="String"/>
</f></set_text>
		<get_text set="method" line="128"><f a=""><c path="String"/></f></get_text>
		<set_selectable set="method" line="127"><f a="inSel">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_selectable>
		<get_selectable set="method" line="126"><f a=""><e path="Bool"/></f></get_selectable>
		<set_scrollV set="method" line="125"><f a="inVal">
	<c path="Int"/>
	<c path="Int"/>
</f></set_scrollV>
		<get_scrollV set="method" line="124"><f a=""><c path="Int"/></f></get_scrollV>
		<set_scrollH set="method" line="123"><f a="inVal">
	<c path="Int"/>
	<c path="Int"/>
</f></set_scrollH>
		<get_scrollH set="method" line="122"><f a=""><c path="Int"/></f></get_scrollH>
		<get_numLines set="method" line="121"><f a=""><c path="Int"/></f></get_numLines>
		<set_multiline set="method" line="120"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_multiline>
		<get_multiline set="method" line="119"><f a=""><e path="Bool"/></f></get_multiline>
		<get_maxScrollV set="method" line="118"><f a=""><c path="Int"/></f></get_maxScrollV>
		<get_maxScrollH set="method" line="117"><f a=""><c path="Int"/></f></get_maxScrollH>
		<set_maxChars set="method" line="116"><f a="inVal">
	<c path="Int"/>
	<c path="Int"/>
</f></set_maxChars>
		<get_maxChars set="method" line="115"><f a=""><c path="Int"/></f></get_maxChars>
		<set_htmlText set="method" line="114"><f a="inText">
	<c path="String"/>
	<c path="String"/>
</f></set_htmlText>
		<get_htmlText set="method" line="113"><f a=""><c path="String"/></f></get_htmlText>
		<set_embedFonts set="method" line="112"><f a="value">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_embedFonts>
		<get_embedFonts set="method" line="111"><f a=""><e path="Bool"/></f></get_embedFonts>
		<set_displayAsPassword set="method" line="110"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_displayAsPassword>
		<get_displayAsPassword set="method" line="109"><f a=""><e path="Bool"/></f></get_displayAsPassword>
		<set_defaultTextFormat set="method" line="108"><f a="inFormat">
	<c path="native.text.TextFormat"/>
	<c path="native.text.TextFormat"/>
</f></set_defaultTextFormat>
		<get_defaultTextFormat set="method" line="107"><f a=""><c path="native.text.TextFormat"/></f></get_defaultTextFormat>
		<get_bottomScrollV set="method" line="106"><f a=""><c path="Int"/></f></get_bottomScrollV>
		<set_borderColor set="method" line="105"><f a="inVal">
	<c path="Int"/>
	<c path="Int"/>
</f></set_borderColor>
		<get_borderColor set="method" line="104"><f a=""><c path="Int"/></f></get_borderColor>
		<set_border set="method" line="103"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_border>
		<get_border set="method" line="102"><f a=""><e path="Bool"/></f></get_border>
		<set_backgroundColor set="method" line="101"><f a="inVal">
	<c path="Int"/>
	<c path="Int"/>
</f></set_backgroundColor>
		<get_backgroundColor set="method" line="100"><f a=""><c path="Int"/></f></get_backgroundColor>
		<set_background set="method" line="99"><f a="inVal">
	<e path="Bool"/>
	<e path="Bool"/>
</f></set_background>
		<get_background set="method" line="98"><f a=""><e path="Bool"/></f></get_background>
		<set_autoSize set="method" line="97"><f a="inVal">
	<e path="native.text.TextFieldAutoSize"/>
	<e path="native.text.TextFieldAutoSize"/>
</f></set_autoSize>
		<get_autoSize set="method" line="96"><f a=""><e path="native.text.TextFieldAutoSize"/></f></get_autoSize>
		<setTextFormat public="1" set="method" line="82"><f a="format:?beginIndex:?endIndex">
	<c path="native.text.TextFormat"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setTextFormat>
		<setSelection public="1" set="method" line="75"><f a="beginIndex:endIndex">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setSelection>
		<getLineMetrics public="1" set="method" line="67"><f a="lineIndex">
	<c path="Int"/>
	<c path="native.text.TextLineMetrics"/>
</f></getLineMetrics>
		<getLineText public="1" set="method" line="61"><f a="lineIndex">
	<c path="Int"/>
	<c path="String"/>
</f></getLineText>
		<getLineOffset public="1" set="method" line="54"><f a="lineIndex">
	<c path="Int"/>
	<c path="Int"/>
</f></getLineOffset>
		<appendText public="1" set="method" line="47"><f a="newText">
	<c path="String"/>
	<e path="Void"/>
</f></appendText>
		<wordWrap public="1" get="get_wordWrap" set="set_wordWrap"><e path="Bool"/></wordWrap>
		<type public="1" get="get_type" set="set_type"><e path="native.text.TextFieldType"/></type>
		<textWidth public="1" get="get_textWidth" set="null"><c path="Float"/></textWidth>
		<textHeight public="1" get="get_textHeight" set="null"><c path="Float"/></textHeight>
		<textColor public="1" get="get_textColor" set="set_textColor"><c path="Int"/></textColor>
		<text public="1" get="get_text" set="set_text"><c path="String"/></text>
		<selectable public="1" get="get_selectable" set="set_selectable"><e path="Bool"/></selectable>
		<scrollV public="1" get="get_scrollV" set="set_scrollV"><c path="Int"/></scrollV>
		<scrollH public="1" get="get_scrollH" set="set_scrollH"><c path="Int"/></scrollH>
		<numLines public="1" get="get_numLines" set="null"><c path="Int"/></numLines>
		<multiline public="1" get="get_multiline" set="set_multiline"><e path="Bool"/></multiline>
		<maxScrollV public="1" get="get_maxScrollV" set="null"><c path="Int"/></maxScrollV>
		<maxScrollH public="1" get="get_maxScrollH" set="null"><c path="Int"/></maxScrollH>
		<maxChars public="1" get="get_maxChars" set="set_maxChars"><c path="Int"/></maxChars>
		<htmlText public="1" get="get_htmlText" set="set_htmlText"><c path="String"/></htmlText>
		<embedFonts public="1" get="get_embedFonts" set="set_embedFonts"><e path="Bool"/></embedFonts>
		<displayAsPassword public="1" get="get_displayAsPassword" set="set_displayAsPassword"><e path="Bool"/></displayAsPassword>
		<defaultTextFormat public="1" get="get_defaultTextFormat" set="set_defaultTextFormat"><c path="native.text.TextFormat"/></defaultTextFormat>
		<bottomScrollV public="1" get="get_bottomScrollV" set="null"><c path="Int"/></bottomScrollV>
		<borderColor public="1" get="get_borderColor" set="set_borderColor"><c path="Int"/></borderColor>
		<border public="1" get="get_border" set="set_border"><e path="Bool"/></border>
		<backgroundColor public="1" get="get_backgroundColor" set="set_backgroundColor"><c path="Int"/></backgroundColor>
		<background public="1" get="get_background" set="set_background"><e path="Bool"/></background>
		<autoSize public="1" get="get_autoSize" set="set_autoSize"><e path="native.text.TextFieldAutoSize"/></autoSize>
		<antiAliasType public="1"><e path="native.text.AntiAliasType"/></antiAliasType>
		<new public="1" set="method" line="39"><f a=""><e path="Void"/></f></new>
	</class>
	<enum path="native.text.TextFieldAutoSize" params="" file="/home/joshua/Development/Haxe/nme/native/text/TextFieldAutoSize.hx">
		<RIGHT/>
		<NONE/>
		<LEFT/>
		<CENTER/>
	</enum>
	<enum path="native.text.TextFieldType" params="" file="/home/joshua/Development/Haxe/nme/native/text/TextFieldType.hx">
		<INPUT/>
		<DYNAMIC/>
	</enum>
	<class path="native.text.TextFormat" params="" file="/home/joshua/Development/Haxe/nme/native/text/TextFormat.hx">
		<url public="1"><c path="String"/></url>
		<underline public="1"><d/></underline>
		<target public="1"><c path="String"/></target>
		<tabStops public="1"><c path="Array"><c path="Int"/></c></tabStops>
		<size public="1"><d/></size>
		<rightMargin public="1"><d/></rightMargin>
		<letterSpacing public="1"><d/></letterSpacing>
		<leftMargin public="1"><d/></leftMargin>
		<leading public="1"><d/></leading>
		<kerning public="1"><d/></kerning>
		<italic public="1"><d/></italic>
		<indent public="1"><d/></indent>
		<font public="1"><c path="String"/></font>
		<display public="1"><c path="String"/></display>
		<color public="1"><d/></color>
		<bullet public="1"><d/></bullet>
		<bold public="1"><d/></bold>
		<blockIndent public="1"><d/></blockIndent>
		<align public="1"><c path="String"/></align>
		<new public="1" set="method" line="29"><f a="?in_font:?in_size:?in_color:?in_bold:?in_italic:?in_underline:?in_url:?in_target:?in_align:?in_leftMargin:?in_rightMargin:?in_indent:?in_leading">
	<c path="String"/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<d/>
	<d/>
	<d/>
	<d/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.text.TextFormatAlign" params="" file="/home/joshua/Development/Haxe/nme/native/text/TextFormatAlign.hx">
		<LEFT public="1" line="7" static="1"><c path="String"/></LEFT>
		<RIGHT public="1" line="8" static="1"><c path="String"/></RIGHT>
		<CENTER public="1" line="9" static="1"><c path="String"/></CENTER>
		<JUSTIFY public="1" line="10" static="1"><c path="String"/></JUSTIFY>
	</class>
	<class path="native.text.TextLineMetrics" params="" file="/home/joshua/Development/Haxe/nme/native/text/TextLineMetrics.hx">
		<leading public="1"><c path="Float"/></leading>
		<descent public="1"><c path="Float"/></descent>
		<ascent public="1"><c path="Float"/></ascent>
		<height public="1"><c path="Float"/></height>
		<width public="1"><c path="Float"/></width>
		<x public="1"><c path="Float"/></x>
		<new public="1" set="method" line="13"><f a="?in_x:?in_width:?in_height:?in_ascent:?in_descent:?in_leading">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<typedef path="native.ui.Acceleration" params="" file="/home/joshua/Development/Haxe/nme/native/ui/Acceleration.hx"><a>
	<z><c path="Float"/></z>
	<y><c path="Float"/></y>
	<x><c path="Float"/></x>
</a></typedef>
	<class path="native.ui.Accelerometer" params="" file="/home/joshua/Development/Haxe/nme/native/ui/Accelerometer.hx">
		<get public="1" set="method" line="11" static="1"><f a=""><t path="native.ui.Acceleration"/></f></get>
		<nme_input_get_acceleration line="19" static="1"><f a=""><t path="native.ui.Acceleration"/></f></nme_input_get_acceleration>
	</class>
	<class path="native.ui.Keyboard" params="" file="/home/joshua/Development/Haxe/nme/native/ui/Keyboard.hx">
		<A public="1" line="8" static="1"><c path="Int"/></A>
		<B public="1" line="9" static="1"><c path="Int"/></B>
		<C public="1" line="10" static="1"><c path="Int"/></C>
		<D public="1" line="11" static="1"><c path="Int"/></D>
		<E public="1" line="12" static="1"><c path="Int"/></E>
		<F public="1" line="13" static="1"><c path="Int"/></F>
		<G public="1" line="14" static="1"><c path="Int"/></G>
		<H public="1" line="15" static="1"><c path="Int"/></H>
		<I public="1" line="16" static="1"><c path="Int"/></I>
		<J public="1" line="17" static="1"><c path="Int"/></J>
		<K public="1" line="18" static="1"><c path="Int"/></K>
		<L public="1" line="19" static="1"><c path="Int"/></L>
		<M public="1" line="20" static="1"><c path="Int"/></M>
		<N public="1" line="21" static="1"><c path="Int"/></N>
		<O public="1" line="22" static="1"><c path="Int"/></O>
		<P public="1" line="23" static="1"><c path="Int"/></P>
		<Q public="1" line="24" static="1"><c path="Int"/></Q>
		<R public="1" line="25" static="1"><c path="Int"/></R>
		<S public="1" line="26" static="1"><c path="Int"/></S>
		<T public="1" line="27" static="1"><c path="Int"/></T>
		<U public="1" line="28" static="1"><c path="Int"/></U>
		<V public="1" line="29" static="1"><c path="Int"/></V>
		<W public="1" line="30" static="1"><c path="Int"/></W>
		<X public="1" line="31" static="1"><c path="Int"/></X>
		<Y public="1" line="32" static="1"><c path="Int"/></Y>
		<Z public="1" line="33" static="1"><c path="Int"/></Z>
		<ALTERNATE public="1" line="35" static="1"><c path="Int"/></ALTERNATE>
		<BACKQUOTE public="1" line="36" static="1"><c path="Int"/></BACKQUOTE>
		<BACKSLASH public="1" line="37" static="1"><c path="Int"/></BACKSLASH>
		<BACKSPACE public="1" line="38" static="1"><c path="Int"/></BACKSPACE>
		<CAPS_LOCK public="1" line="39" static="1"><c path="Int"/></CAPS_LOCK>
		<COMMA public="1" line="40" static="1"><c path="Int"/></COMMA>
		<COMMAND public="1" line="41" static="1"><c path="Int"/></COMMAND>
		<CONTROL public="1" line="42" static="1"><c path="Int"/></CONTROL>
		<DELETE public="1" line="43" static="1"><c path="Int"/></DELETE>
		<DOWN public="1" line="44" static="1"><c path="Int"/></DOWN>
		<END public="1" line="45" static="1"><c path="Int"/></END>
		<ENTER public="1" line="46" static="1"><c path="Int"/></ENTER>
		<EQUAL public="1" line="47" static="1"><c path="Int"/></EQUAL>
		<ESCAPE public="1" line="48" static="1"><c path="Int"/></ESCAPE>
		<F1 public="1" line="49" static="1"><c path="Int"/></F1>
		<F2 public="1" line="50" static="1"><c path="Int"/></F2>
		<F3 public="1" line="51" static="1"><c path="Int"/></F3>
		<F4 public="1" line="52" static="1"><c path="Int"/></F4>
		<F5 public="1" line="53" static="1"><c path="Int"/></F5>
		<F6 public="1" line="54" static="1"><c path="Int"/></F6>
		<F7 public="1" line="55" static="1"><c path="Int"/></F7>
		<F8 public="1" line="56" static="1"><c path="Int"/></F8>
		<F9 public="1" line="57" static="1"><c path="Int"/></F9>
		<F10 public="1" line="58" static="1"><c path="Int"/></F10>
		<F11 public="1" line="59" static="1"><c path="Int"/></F11>
		<F12 public="1" line="60" static="1"><c path="Int"/></F12>
		<F13 public="1" line="61" static="1"><c path="Int"/></F13>
		<F14 public="1" line="62" static="1"><c path="Int"/></F14>
		<F15 public="1" line="63" static="1"><c path="Int"/></F15>
		<HOME public="1" line="64" static="1"><c path="Int"/></HOME>
		<INSERT public="1" line="65" static="1"><c path="Int"/></INSERT>
		<LEFT public="1" line="66" static="1"><c path="Int"/></LEFT>
		<LEFTBRACKET public="1" line="67" static="1"><c path="Int"/></LEFTBRACKET>
		<MINUS public="1" line="68" static="1"><c path="Int"/></MINUS>
		<NUMBER_0 public="1" line="69" static="1"><c path="Int"/></NUMBER_0>
		<NUMBER_1 public="1" line="70" static="1"><c path="Int"/></NUMBER_1>
		<NUMBER_2 public="1" line="71" static="1"><c path="Int"/></NUMBER_2>
		<NUMBER_3 public="1" line="72" static="1"><c path="Int"/></NUMBER_3>
		<NUMBER_4 public="1" line="73" static="1"><c path="Int"/></NUMBER_4>
		<NUMBER_5 public="1" line="74" static="1"><c path="Int"/></NUMBER_5>
		<NUMBER_6 public="1" line="75" static="1"><c path="Int"/></NUMBER_6>
		<NUMBER_7 public="1" line="76" static="1"><c path="Int"/></NUMBER_7>
		<NUMBER_8 public="1" line="77" static="1"><c path="Int"/></NUMBER_8>
		<NUMBER_9 public="1" line="78" static="1"><c path="Int"/></NUMBER_9>
		<NUMPAD public="1" line="79" static="1"><c path="Int"/></NUMPAD>
		<NUMPAD_0 public="1" line="80" static="1"><c path="Int"/></NUMPAD_0>
		<NUMPAD_1 public="1" line="81" static="1"><c path="Int"/></NUMPAD_1>
		<NUMPAD_2 public="1" line="82" static="1"><c path="Int"/></NUMPAD_2>
		<NUMPAD_3 public="1" line="83" static="1"><c path="Int"/></NUMPAD_3>
		<NUMPAD_4 public="1" line="84" static="1"><c path="Int"/></NUMPAD_4>
		<NUMPAD_5 public="1" line="85" static="1"><c path="Int"/></NUMPAD_5>
		<NUMPAD_6 public="1" line="86" static="1"><c path="Int"/></NUMPAD_6>
		<NUMPAD_7 public="1" line="87" static="1"><c path="Int"/></NUMPAD_7>
		<NUMPAD_8 public="1" line="88" static="1"><c path="Int"/></NUMPAD_8>
		<NUMPAD_9 public="1" line="89" static="1"><c path="Int"/></NUMPAD_9>
		<NUMPAD_ADD public="1" line="90" static="1"><c path="Int"/></NUMPAD_ADD>
		<NUMPAD_DECIMAL public="1" line="91" static="1"><c path="Int"/></NUMPAD_DECIMAL>
		<NUMPAD_DIVIDE public="1" line="92" static="1"><c path="Int"/></NUMPAD_DIVIDE>
		<NUMPAD_ENTER public="1" line="93" static="1"><c path="Int"/></NUMPAD_ENTER>
		<NUMPAD_MULTIPLY public="1" line="94" static="1"><c path="Int"/></NUMPAD_MULTIPLY>
		<NUMPAD_SUBTRACT public="1" line="95" static="1"><c path="Int"/></NUMPAD_SUBTRACT>
		<PAGE_DOWN public="1" line="96" static="1"><c path="Int"/></PAGE_DOWN>
		<PAGE_UP public="1" line="97" static="1"><c path="Int"/></PAGE_UP>
		<PERIOD public="1" line="98" static="1"><c path="Int"/></PERIOD>
		<QUOTE public="1" line="99" static="1"><c path="Int"/></QUOTE>
		<RIGHT public="1" line="100" static="1"><c path="Int"/></RIGHT>
		<RIGHTBRACKET public="1" line="101" static="1"><c path="Int"/></RIGHTBRACKET>
		<SEMICOLON public="1" line="102" static="1"><c path="Int"/></SEMICOLON>
		<SHIFT public="1" line="103" static="1"><c path="Int"/></SHIFT>
		<SLASH public="1" line="104" static="1"><c path="Int"/></SLASH>
		<SPACE public="1" line="105" static="1"><c path="Int"/></SPACE>
		<TAB public="1" line="106" static="1"><c path="Int"/></TAB>
		<UP public="1" line="107" static="1"><c path="Int"/></UP>
	</class>
	<class path="native.ui.Mouse" params="" file="/home/joshua/Development/Haxe/nme/native/ui/Mouse.hx">
		<hide public="1" set="method" line="11" static="1"><f a=""><e path="Void"/></f></hide>
		<show public="1" set="method" line="19" static="1"><f a=""><e path="Void"/></f></show>
	</class>
	<class path="native.ui.Multitouch" params="" file="/home/joshua/Development/Haxe/nme/native/ui/Multitouch.hx">
		<inputMode public="1" get="get_inputMode" set="set_inputMode" static="1"><e path="native.ui.MultitouchInputMode"/></inputMode>
		<maxTouchPoints public="1" set="null" static="1"><c path="Int"/></maxTouchPoints>
		<supportedGestures public="1" set="null" static="1"><c path="Array"><c path="String"/></c></supportedGestures>
		<supportsGestureEvents public="1" set="null" static="1"><e path="Bool"/></supportsGestureEvents>
		<supportsTouchEvents public="1" get="get_supportsTouchEvents" set="null" static="1"><e path="Bool"/></supportsTouchEvents>
		<get_inputMode set="method" line="36" static="1"><f a=""><e path="native.ui.MultitouchInputMode"/></f></get_inputMode>
		<set_inputMode set="method" line="47" static="1"><f a="inMode">
	<e path="native.ui.MultitouchInputMode"/>
	<e path="native.ui.MultitouchInputMode"/>
</f></set_inputMode>
		<get_supportsTouchEvents set="method" line="59" static="1"><f a=""><e path="Bool"/></f></get_supportsTouchEvents>
		<nme_stage_get_multitouch_supported line="69" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_stage_get_multitouch_supported>
		<nme_stage_get_multitouch_active line="70" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></nme_stage_get_multitouch_active>
		<nme_stage_set_multitouch_active line="71" static="1"><f a=":">
	<d/>
	<e path="Bool"/>
	<unknown/>
</f></nme_stage_set_multitouch_active>
	</class>
	<enum path="native.ui.MultitouchInputMode" params="" file="/home/joshua/Development/Haxe/nme/native/ui/MultitouchInputMode.hx">
		<TOUCH_POINT/>
		<NONE/>
		<GESTURE/>
	</enum>
	<typedef path="native.utils.ArrayBuffer" params="" file="/home/joshua/Development/Haxe/nme/native/utils/ArrayBuffer.hx"><c path="native.utils.ByteArray"/></typedef>
	<class path="native.utils.IMemoryRange" params="" file="/home/joshua/Development/Haxe/nme/native/utils/IMemoryRange.hx" interface="1">
		<getLength public="1" set="method"><f a=""><c path="Int"/></f></getLength>
		<getStart public="1" set="method"><f a=""><c path="Int"/></f></getStart>
		<getByteBuffer public="1" set="method"><f a=""><c path="native.utils.ByteArray"/></f></getByteBuffer>
	</class>
	<class path="native.utils.ArrayBufferView" params="" file="/home/joshua/Development/Haxe/nme/native/utils/ArrayBufferView.hx">
		<implements path="native.utils.IMemoryRange"/>
		<invalidDataIndex line="17" static="1"><c path="String"/></invalidDataIndex>
		<setInt16 public="1" get="inline" set="null" line="116"><f a="bytePos:v">
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></setInt16>
		<getInt16 public="1" get="inline" set="null" line="105"><f a="bytePos">
	<c path="Int"/>
	<c path="Float"/>
</f></getInt16>
		<setFloat32 public="1" get="inline" set="null" line="90"><f a="bytePos:v">
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></setFloat32>
		<getFloat32 public="1" get="inline" set="null" line="74"><f a="bytePos">
	<c path="Int"/>
	<c path="Float"/>
</f></getFloat32>
		<getLength public="1" set="method" line="71"><f a=""><c path="Int"/></f></getLength>
		<getStart public="1" set="method" line="70"><f a=""><c path="Int"/></f></getStart>
		<getByteBuffer public="1" set="method" line="69"><f a=""><c path="native.utils.ByteArray"/></f></getByteBuffer>
		<bytes><t path="haxe.io.BytesData"/></bytes>
		<byteLength public="1" set="null"><c path="Int"/></byteLength>
		<byteOffset public="1" set="null"><c path="Int"/></byteOffset>
		<buffer public="1" set="null"><c path="native.utils.ByteArray"/></buffer>
		<new set="method" line="24"><f a="inLengthOrBuffer:?inByteOffset:?inLength">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.utils.IDataInput" params="" file="/home/joshua/Development/Haxe/nme/native/utils/IDataInput.hx" interface="1">
		<set_endian set="method"><f a="s">
	<c path="String"/>
	<c path="String"/>
</f></set_endian>
		<get_endian set="method"><f a=""><c path="String"/></f></get_endian>
		<get_bytesAvailable set="method"><f a=""><c path="Int"/></f></get_bytesAvailable>
		<readUTFBytes public="1" set="method"><f a="inLen">
	<c path="Int"/>
	<c path="String"/>
</f></readUTFBytes>
		<readUTF public="1" set="method"><f a=""><c path="String"/></f></readUTF>
		<readUnsignedShort public="1" set="method"><f a=""><c path="Int"/></f></readUnsignedShort>
		<readUnsignedInt public="1" set="method"><f a=""><c path="Int"/></f></readUnsignedInt>
		<readUnsignedByte public="1" set="method"><f a=""><c path="Int"/></f></readUnsignedByte>
		<readShort public="1" set="method"><f a=""><c path="Int"/></f></readShort>
		<readInt public="1" set="method"><f a=""><c path="Int"/></f></readInt>
		<readFloat public="1" set="method"><f a=""><c path="Float"/></f></readFloat>
		<readDouble public="1" set="method"><f a=""><c path="Float"/></f></readDouble>
		<readBytes public="1" set="method"><f a="outData:?inOffset:?inLen">
	<c path="native.utils.ByteArray"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></readBytes>
		<readByte public="1" set="method"><f a=""><c path="Int"/></f></readByte>
		<readBoolean public="1" set="method"><f a=""><e path="Bool"/></f></readBoolean>
		<endian public="1" get="get_endian" set="set_endian"><c path="String"/></endian>
		<bytesAvailable public="1" get="get_bytesAvailable" set="null"><c path="Int"/></bytesAvailable>
	</class>
	<class path="native.utils.ByteArray" params="" file="/home/joshua/Development/Haxe/nme/native/utils/ByteArray.hx">
		<extends path="haxe.io.Bytes"/>
		<implements path="native.utils.IMemoryRange"/>
		<implements path="native.utils.IDataInput"/>
		<fromBytes public="1" set="method" line="208" static="1"><f a="inBytes">
	<c path="haxe.io.Bytes"/>
	<c path="native.utils.ByteArray"/>
</f></fromBytes>
		<readFile public="1" set="method" line="297" static="1"><f a="inString">
	<c path="String"/>
	<c path="native.utils.ByteArray"/>
</f></readFile>
		<_double_bytes line="685" static="1">
			<f a=":">
				<c path="Float"/>
				<e path="Bool"/>
				<t path="haxe.io.BytesData"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</_double_bytes>
		<_double_of_bytes line="686" static="1">
			<f a=":">
				<t path="haxe.io.BytesData"/>
				<e path="Bool"/>
				<c path="Float"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</_double_of_bytes>
		<_float_bytes line="687" static="1">
			<f a=":">
				<c path="Float"/>
				<e path="Bool"/>
				<t path="haxe.io.BytesData"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</_float_bytes>
		<_float_of_bytes line="688" static="1">
			<f a=":">
				<t path="haxe.io.BytesData"/>
				<e path="Bool"/>
				<c path="Float"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</_float_of_bytes>
		<nme_byte_array_overwrite_file line="691" static="1"><f a=":">
	<c path="String"/>
	<c path="native.utils.ByteArray"/>
	<unknown/>
</f></nme_byte_array_overwrite_file>
		<nme_byte_array_read_file line="692" static="1"><f a="">
	<c path="String"/>
	<c path="native.utils.ByteArray"/>
</f></nme_byte_array_read_file>
		<nme_lzma_encode line="694" static="1"><f a="">
	<t path="haxe.io.BytesData"/>
	<t path="haxe.io.BytesData"/>
</f></nme_lzma_encode>
		<nme_lzma_decode line="695" static="1"><f a="">
	<t path="haxe.io.BytesData"/>
	<t path="haxe.io.BytesData"/>
</f></nme_lzma_decode>
		<set_endian set="method" line="675"><f a="s">
	<c path="String"/>
	<c path="String"/>
</f></set_endian>
		<get_endian set="method" line="674"><f a=""><c path="String"/></f></get_endian>
		<get_byteLength set="method" line="673"><f a=""><c path="Int"/></f></get_byteLength>
		<get_bytesAvailable set="method" line="672"><f a=""><c path="Int"/></f></get_bytesAvailable>
		<writeUTFBytes public="1" set="method" line="652"><f a="s">
	<c path="String"/>
	<e path="Void"/>
</f></writeUTFBytes>
		<writeUTF public="1" set="method" line="638"><f a="s">
	<c path="String"/>
	<e path="Void"/>
</f></writeUTF>
		<writeUnsignedInt public="1" set="method" line="631"><f a="value">
	<c path="Int"/>
	<e path="Void"/>
</f></writeUnsignedInt>
		<writeShort public="1" set="method" line="612"><f a="value">
	<c path="Int"/>
	<e path="Void"/>
</f></writeShort>
		<writeInt public="1" set="method" line="585"><f a="value">
	<c path="Int"/>
	<e path="Void"/>
</f></writeInt>
		<writeFloat public="1" set="method" line="572"><f a="x">
	<c path="Float"/>
	<e path="Void"/>
</f></writeFloat>
		<writeFile public="1" set="method" line="564"><f a="inString">
	<c path="String"/>
	<e path="Void"/>
</f></writeFile>
		<writeDouble public="1" set="method" line="550"><f a="x">
	<c path="Float"/>
	<e path="Void"/>
</f></writeDouble>
		<writeBytes public="1" set="method" line="539"><f a="bytes:?inOffset:?inLength">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></writeBytes>
		<writeByte public="1" get="inline" set="null" line="526"><f a="value">
	<c path="Int"/>
	<e path="Void"/>
</f></writeByte>
		<writeBoolean public="1" set="method" line="519"><f a="value">
	<e path="Bool"/>
	<e path="Void"/>
</f></writeBoolean>
		<write_uncheck get="inline" set="null" line="508">
			<f a="inByte">
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</write_uncheck>
		<uncompress public="1" set="method" line="464"><f a="?algorithm">
	<e path="native.utils.CompressionAlgorithm"/>
	<e path="Void"/>
</f></uncompress>
		<ThrowEOFi set="method" line="456">
			<f a=""><c path="Int"/></f>
			<haxe_doc>@private</haxe_doc>
		</ThrowEOFi>
		<slice public="1" set="method" line="420"><f a="inBegin:?inEnd">
	<c path="Int"/>
	<c path="Int"/>
	<c path="native.utils.ByteArray"/>
</f></slice>
		<setLength public="1" set="method" line="410"><f a="inLength">
	<c path="Int"/>
	<e path="Void"/>
</f></setLength>
		<readUTFBytes public="1" set="method" line="391"><f a="inLen">
	<c path="Int"/>
	<c path="String"/>
</f></readUTFBytes>
		<readUTF public="1" set="method" line="383"><f a=""><c path="String"/></f></readUTF>
		<readUnsignedShort public="1" set="method" line="373"><f a=""><c path="Int"/></f></readUnsignedShort>
		<readUnsignedInt public="1" set="method" line="361"><f a=""><c path="Int"/></f></readUnsignedInt>
		<readUnsignedByte public="1" get="inline" set="null" line="354"><f a=""><c path="Int"/></f></readUnsignedByte>
		<readShort public="1" set="method" line="342"><f a=""><c path="Int"/></f></readShort>
		<readMultiByte public="1" get="inline" set="null" line="334"><f a="inLen:charSet">
	<c path="Int"/>
	<c path="String"/>
	<c path="String"/>
</f></readMultiByte>
		<readInt public="1" set="method" line="322"><f a=""><c path="Int"/></f></readInt>
		<readFloat public="1" set="method" line="305"><f a=""><c path="Float"/></f></readFloat>
		<readDouble public="1" set="method" line="279"><f a=""><c path="Float"/></f></readDouble>
		<readBytes public="1" set="method" line="253"><f a="outData:?inOffset:?inLen">
	<c path="native.utils.ByteArray"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></readBytes>
		<readByte public="1" get="inline" set="null" line="245"><f a=""><c path="Int"/></f></readByte>
		<readBoolean public="1" get="inline" set="null" line="238"><f a=""><e path="Bool"/></f></readBoolean>
		<inflate public="1" set="method" line="231"><f a=""><e path="Void"/></f></inflate>
		<getStart public="1" set="method" line="228"><f a=""><c path="Int"/></f></getStart>
		<getByteBuffer public="1" set="method" line="227"><f a=""><c path="native.utils.ByteArray"/></f></getByteBuffer>
		<getLength public="1" set="method" line="223"><f a=""><c path="Int"/></f></getLength>
		<ensureElem set="method" line="184">
			<f a="inSize:inUpdateLenght">
				<c path="Int"/>
				<e path="Bool"/>
				<e path="Void"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</ensureElem>
		<deflate public="1" set="method" line="177"><f a=""><e path="Void"/></f></deflate>
		<compress public="1" set="method" line="135"><f a="?algorithm">
	<e path="native.utils.CompressionAlgorithm"/>
	<e path="Void"/>
</f></compress>
		<clear public="1" set="method" line="127"><f a=""><e path="Void"/></f></clear>
		<checkData public="1" set="method" line="119"><f a="inLength">
	<c path="Int"/>
	<e path="Void"/>
</f></checkData>
		<asString public="1" set="method" line="112"><f a=""><c path="String"/></f></asString>
		<__set public="1" get="inline" set="null" line="100"><f a="pos:v">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></__set>
		<__get public="1" get="inline" set="null" line="65"><f a="pos">
	<c path="Int"/>
	<c path="Int"/>
</f></__get>
		<byteLength public="1" get="get_byteLength" set="null"><c path="Int"/></byteLength>
		<position public="1"><c path="Int"/></position>
		<endian public="1" get="get_endian" set="set_endian"><c path="String"/></endian>
		<bytesAvailable public="1" get="get_bytesAvailable" set="null"><c path="Int"/></bytesAvailable>
		<bigEndian public="1"><e path="Bool"/></bigEndian>
		<new public="1" set="method" line="42"><f a="?inSize">
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="native.utils.CompressionAlgorithm" params="" file="/home/joshua/Development/Haxe/nme/native/utils/CompressionAlgorithm.hx">
		<ZLIB/>
		<LZMA/>
		<GZIP/>
		<DEFLATE/>
	</enum>
	<class path="native.utils.Endian" params="" file="/home/joshua/Development/Haxe/nme/native/utils/Endian.hx">
		<BIG_ENDIAN public="1" get="inline" set="null" line="7" static="1"><c path="String"/></BIG_ENDIAN>
		<LITTLE_ENDIAN public="1" get="inline" set="null" line="8" static="1"><c path="String"/></LITTLE_ENDIAN>
	</class>
	<class path="native.utils.Float32Array" params="" file="/home/joshua/Development/Haxe/nme/native/utils/Float32Array.hx">
		<extends path="native.utils.ArrayBufferView"/>
		<SBYTES_PER_ELEMENT public="1" get="inline" set="null" line="15" static="1"><c path="Int"/></SBYTES_PER_ELEMENT>
		<fromMatrix public="1" set="method" line="68" static="1"><f a="inMatrix">
	<c path="native.geom.Matrix3D"/>
	<c path="native.utils.Float32Array"/>
</f></fromMatrix>
		<__set public="1" get="inline" set="null" line="76"><f a="index:v">
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></__set>
		<__get public="1" get="inline" set="null" line="75"><f a="index">
	<c path="Int"/>
	<c path="Float"/>
</f></__get>
		<length public="1" set="null"><c path="Int"/></length>
		<BYTES_PER_ELEMENT public="1" set="null"><c path="Int"/></BYTES_PER_ELEMENT>
		<new public="1" set="method" line="22"><f a="inBufferOrArray:?inStart:?inLen">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.utils.Timer" params="" file="/home/joshua/Development/Haxe/nme/native/utils/Timer.hx">
		<extends path="native.events.EventDispatcher"/>
		<timer_onTimer set="method" line="116">
			<f a=""><e path="Void"/></f>
			<haxe_doc>@private</haxe_doc>
		</timer_onTimer>
		<set_delay set="method" line="93"><f a="value">
	<c path="Float"/>
	<c path="Float"/>
</f></set_delay>
		<get_delay set="method" line="86"><f a=""><c path="Float"/></f></get_delay>
		<stop public="1" set="method" line="65"><f a=""><e path="Void"/></f></stop>
		<start public="1" set="method" line="52"><f a=""><e path="Void"/></f></start>
		<reset public="1" set="method" line="39"><f a=""><e path="Void"/></f></reset>
		<timer>
			<c path="haxe.Timer"/>
			<haxe_doc>@private</haxe_doc>
		</timer>
		<_delay>
			<c path="Float"/>
			<haxe_doc>@private</haxe_doc>
		</_delay>
		<running public="1"><e path="Bool"/></running>
		<repeatCount public="1"><c path="Int"/></repeatCount>
		<delay public="1" get="get_delay" set="set_delay"><c path="Float"/></delay>
		<currentCount public="1"><c path="Int"/></currentCount>
		<new public="1" set="method" line="22"><f a="delay:?repeatCount">
	<c path="Float"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="native.utils.WeakRef" params="T" file="/home/joshua/Development/Haxe/nme/native/utils/WeakRef.hx">
		<nme_weak_ref_create line="67" static="1"><f a=":">
	<c path="native.utils.WeakRef"><c path="native.utils.WeakRef.T"/></c>
	<c path="native.utils.WeakRef.T"/>
	<c path="Int"/>
</f></nme_weak_ref_create>
		<nme_weak_ref_get line="68" static="1"><f a="">
	<c path="Int"/>
	<c path="native.utils.WeakRef.T"/>
</f></nme_weak_ref_get>
		<toString public="1" set="method" line="50"><f a=""><c path="String"/></f></toString>
		<get public="1" set="method" line="33"><f a=""><c path="native.utils.WeakRef.T"/></f></get>
		<weakRef>
			<c path="Int"/>
			<haxe_doc>@private</haxe_doc>
		</weakRef>
		<hardRef>
			<c path="native.utils.WeakRef.T"/>
			<haxe_doc>@private</haxe_doc>
		</hardRef>
		<new public="1" set="method" line="16"><f a="inObject:?inMakeWeak">
	<c path="native.utils.WeakRef.T"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.Assets" params="" file="/home/joshua/Development/Haxe/nme/nme/Assets.hx">
		<cachedBitmapData public="1" line="31" static="1"><c path="Hash"><t path="nme.display.BitmapData"/></c></cachedBitmapData>
		<getBitmapData public="1" set="method" line="41" static="1">
			<f a="id:?useCache">
				<c path="String"/>
				<e path="Bool"/>
				<t path="nme.display.BitmapData"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded bitmap
	 * @usage		var bitmap = new Bitmap(Assets.getBitmapData("image.jpg"));
	 * @param	id		The ID or asset path for the bitmap
	 * @param	useCache		(Optional) Whether to use BitmapData from the cache(Default: true)
	 * @return		A new BItmapData object</haxe_doc>
		</getBitmapData>
		<getBytes public="1" set="method" line="54" static="1">
			<f a="id">
				<c path="String"/>
				<t path="nme.utils.ByteArray"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded binary asset
	 * @usage		var bytes = Assets.getBytes("file.zip");
	 * @param	id		The ID or asset path for the file
	 * @return		A new ByteArray object</haxe_doc>
		</getBytes>
		<getFont public="1" set="method" line="67" static="1">
			<f a="id">
				<c path="String"/>
				<t path="nme.text.Font"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded font
	 * @usage		var fontName = Assets.getFont("font.ttf").fontName;
	 * @param	id		The ID or asset path for the font
	 * @return		A new Font object</haxe_doc>
		</getFont>
		<getMovieClip public="1" set="method" line="80" static="1">
			<f a="id">
				<c path="String"/>
				<c path="format.display.MovieClip"/>
			</f>
			<haxe_doc>* Gets an instance of a library MovieClip
	 * @usage		var movieClip = Assets.getMovieClip("library:BouncingBall");
	 * @param	id		The library and ID for the MovieClip
	 * @return		A new Sound object</haxe_doc>
		</getMovieClip>
		<getSound public="1" set="method" line="93" static="1">
			<f a="id">
				<c path="String"/>
				<t path="nme.media.Sound"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded sound
	 * @usage		var sound = Assets.getSound("sound.wav");
	 * @param	id		The ID or asset path for the sound
	 * @return		A new Sound object</haxe_doc>
		</getSound>
		<getText public="1" set="method" line="106" static="1">
			<f a="id">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded text asset
	 * @usage		var text = Assets.getText("text.txt");
	 * @param	id		The ID or asset path for the file
	 * @return		A new String object</haxe_doc>
		</getText>
		<haxe_doc><![CDATA[* <p>The Assets class provides a cross-platform interface to access 
 * embedded images, fonts, sounds and other resource files.</p>
 * 
 * <p>The contents are populated automatically when an application
 * is compiled using the NME command-line tools, based on the
 * contents of the *.nmml project file.</p>
 * 
 * <p>For most platforms, the assets are included in the same directory
 * or package as the application, and the paths are handled
 * automatically. For web content, the assets are preloaded before
 * the start of the rest of the application. You can customize the 
 * preloader by extending the <code>NMEPreloader</code> class,
 * and specifying a custom preloader using <window preloader="" />
 * in the project file.</p>]]></haxe_doc>
	</class>
	<class path="nme.Lib" params="" file="/home/joshua/Development/Haxe/nme/nme/Lib.hx">
		<FULLSCREEN public="1" line="13" static="1"><c path="Int"/></FULLSCREEN>
		<BORDERLESS public="1" line="14" static="1"><c path="Int"/></BORDERLESS>
		<RESIZABLE public="1" line="15" static="1"><c path="Int"/></RESIZABLE>
		<HARDWARE public="1" line="16" static="1"><c path="Int"/></HARDWARE>
		<VSYNC public="1" line="17" static="1"><c path="Int"/></VSYNC>
		<HW_AA public="1" line="18" static="1"><c path="Int"/></HW_AA>
		<HW_AA_HIRES public="1" line="19" static="1"><c path="Int"/></HW_AA_HIRES>
		<ALLOW_SHADERS public="1" line="20" static="1"><c path="Int"/></ALLOW_SHADERS>
		<REQUIRE_SHADERS public="1" line="21" static="1"><c path="Int"/></REQUIRE_SHADERS>
		<DEPTH_BUFFER public="1" line="22" static="1"><c path="Int"/></DEPTH_BUFFER>
		<STENCIL_BUFFER public="1" line="23" static="1"><c path="Int"/></STENCIL_BUFFER>
		<MIN_FLOAT_VALUE public="1" get="inline" set="null" line="32" static="1"><c path="Float"/></MIN_FLOAT_VALUE>
		<MAX_FLOAT_VALUE public="1" get="inline" set="null" line="33" static="1"><c path="Float"/></MAX_FLOAT_VALUE>
		<company public="1" get="get_company" set="null" static="1"><c path="String"/></company>
		<current public="1" get="get_current" set="null" static="1"><t path="nme.display.MovieClip"/></current>
		<file public="1" get="get_file" set="null" static="1"><c path="String"/></file>
		<initHeight public="1" get="get_initHeight" set="null" static="1"><c path="Int"/></initHeight>
		<initWidth public="1" get="get_initWidth" set="null" static="1"><c path="Int"/></initWidth>
		<packageName public="1" get="get_packageName" set="null" static="1"><c path="String"/></packageName>
		<stage public="1" get="get_stage" set="null" static="1"><t path="nme.display.Stage"/></stage>
		<version public="1" get="get_version" set="null" static="1"><c path="String"/></version>
		<close public="1" set="method" line="50" static="1">
			<f a=""><e path="Void"/></f>
			<haxe_doc>* Closes the application.
	 * This is method is ignored in the Flash and HTML5 targets.</haxe_doc>
		</close>
		<create public="1" set="method" line="73" static="1">
			<f a="onLoaded:width:height:?frameRate:?color:?flags:?title:?icon">
				<f a=""><e path="Void"/></f>
				<c path="Int"/>
				<c path="Int"/>
				<c path="Float"/>
				<c path="Int"/>
				<c path="Int"/>
				<c path="String"/>
				<t path="nme.display.BitmapData"/>
				<e path="Void"/>
			</f>
			<haxe_doc>* Creates a new application window. If you are using the NME
	 * command-line tools, this method will be called automatically
	 * as a part of the default platform templates.
	 * This is method is ignored in the Flash and HTML5 targets.
	 * @param	onLoaded		A method callback that is called once the window is created.
	 * @param	width		The requested width of the window. Use a width and height of 0 to request the full screen size.
	 * @param	height		The requested height of the window. Use a width and height of 0 to request the full screen size.
	 * @param	frameRate		The requested frame rate for the application.
	 * @param	color		An RGB color to use for the application background.
	 * @param	flags		A series of bit flags which can specify windowing options, like FULLSCREEN or HARDWARE
	 * @param	title		The title to use when creating the application window.
	 * @param	icon		An icon to use for the created application window.</haxe_doc>
		</create>
		<createManagedStage public="1" set="method" line="89" static="1">
			<f a="width:height">
				<c path="Int"/>
				<c path="Int"/>
				<c path="native.display.ManagedStage"/>
			</f>
			<haxe_doc>* Creates a managed stage, for greater control customization and control
	 * of application events.
	 * This method is ignored in the Flash and HTML5 targets.
	 * @param	width		The requested width of the managed stage.
	 * @param	height		The requested width of the managed stage.</haxe_doc>
		</createManagedStage>
		<exit public="1" set="method" line="105" static="1">
			<f a=""><e path="Void"/></f>
			<haxe_doc><![CDATA[* Similar to the <code>close()</code> method, but the current 
	 * <code>Stage</code> object is given an opportunity to handle 
	 * the quit event before the application process is ended.
	 * This method is ignored in the Flash and HTML5 targets.]]></haxe_doc>
		</exit>
		<forceClose public="1" set="method" line="119" static="1">
			<f a=""><e path="Void"/></f>
			<haxe_doc>* Terminates the application process immediately without
	 * performing a clean shutdown.
	 * This method is ignored in the Flash and HTML5 targets.</haxe_doc>
		</forceClose>
		<getTimer public="1" get="inline" set="null" line="137" static="1">
			<f a=""><c path="Int"/></f>
			<haxe_doc><![CDATA[* Returns the time in milliseconds, relative to the start of
	 * the application. This is a high performance call in order to 
	 * help regulate time-based operations. Depending upon the
	 * target platform, this value may or may not be an absolute
	 * timestamp. If you need an exact time, you should use the
	 * <code>Date</code> object.
	 * @return		A relative time value in milliseconds.]]></haxe_doc>
		</getTimer>
		<getURL public="1" set="method" line="156" static="1">
			<f a="url:?target">
				<t path="nme.net.URLRequest"/>
				<c path="String"/>
				<e path="Void"/>
			</f>
			<haxe_doc>* Opens a browser window with the specified URL. 
	 * @param	url		The URL to open.
	 * @param	target		An optional window target value.</haxe_doc>
		</getURL>
		<pause public="1" set="method" line="175" static="1">
			<f a=""><e path="Void"/></f>
			<haxe_doc>* For supported platforms, the NME application will be
	 * paused. This can help improve response times if fullscreen
	 * native UI element is being used temporarily.
	 * This method is ignored in the Flash and HTML5 targets.</haxe_doc>
		</pause>
		<postUICallback public="1" set="method" line="193" static="1">
			<f a="handler">
				<f a=""><e path="Void"/></f>
				<e path="Void"/>
			</f>
			<haxe_doc>* For some target platforms, NME operates on a separate thread
	 * than the native application UI. In these cases, you can use this
	 * method to make thread-safe calls to the native UI.
	 * 
	 * If the platform does not require thread-safe callbacks, the 
	 * handler method will be called immediately.
	 * @param	handler		The method handler you wish to call when the UI is available.</haxe_doc>
		</postUICallback>
		<resume public="1" set="method" line="210" static="1">
			<f a=""><e path="Void"/></f>
			<haxe_doc>* Resumes the NME application. For certain platforms,
	 * pausing the application can improve response times when
	 * a fullscreen native UI element is being displayed.
	 * This method is ignored in the Flash and HTML5 targets.</haxe_doc>
		</resume>
		<setPackage public="1" set="method" line="229" static="1">
			<f a="company:file:packageName:version">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<e path="Void"/>
			</f>
			<haxe_doc>* Specifies meta-data for the running application. If you are using 
	 * the NME command-line tools, this method will be called automatically
	 * as a part of the default platform templates.
	 * This method is ignored in the Flash and HTML5 targets.
	 * @param	company		The company name for the application.
	 * @param	file		The file name for the application.
	 * @param	packageName		The package name of the application.
	 * @param	version		The version string of the application.</haxe_doc>
		</setPackage>
		<trace public="1" set="method" line="242" static="1">
			<f a="arg">
				<d/>
				<e path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Sends a <code>trace</code> call for the current platform.
	 * @param	arg]]></haxe_doc>
		</trace>
		<get_company set="method" line="261" static="1"><f a=""><c path="String"/></f></get_company>
		<get_current set="method" line="271" static="1"><f a=""><t path="nme.display.MovieClip"/></f></get_current>
		<get_file set="method" line="285" static="1"><f a=""><c path="String"/></f></get_file>
		<get_initHeight set="method" line="295" static="1"><f a=""><c path="Int"/></f></get_initHeight>
		<get_initWidth set="method" line="305" static="1"><f a=""><c path="Int"/></f></get_initWidth>
		<get_packageName set="method" line="315" static="1"><f a=""><c path="String"/></f></get_packageName>
		<get_stage set="method" line="325" static="1"><f a=""><t path="nme.display.Stage"/></f></get_stage>
		<get_version set="method" line="337" static="1"><f a=""><c path="String"/></f></get_version>
	</class>
	<typedef path="nme.Loader" params="" file="/home/joshua/Development/Haxe/nme/nme/Loader.hx"><c path="native.Loader"/></typedef>
	<typedef path="nme.Memory" params="" file="/home/joshua/Development/Haxe/nme/nme/Memory.hx"><c path="native.Memory"/></typedef>
	<class path="nme.ObjectHash" params="K:T" file="/home/joshua/Development/Haxe/nme/nme/ObjectHash.hx">
		<nextObjectID line="19" static="1">
			<c path="Int"/>
			<haxe_doc>@private</haxe_doc>
		</nextObjectID>
		<set public="1" get="inline" set="null" line="155"><f a="key:value">
	<c path="nme.ObjectHash.K"/>
	<c path="nme.ObjectHash.T"/>
	<e path="Void"/>
</f></set>
		<remove public="1" get="inline" set="null" line="137"><f a="key">
	<c path="nme.ObjectHash.K"/>
	<e path="Void"/>
</f></remove>
		<keys public="1" get="inline" set="null" line="122"><f a=""><t path="Iterator"><c path="nme.ObjectHash.K"/></t></f></keys>
		<iterator public="1" get="inline" set="null" line="99"><f a=""><t path="Iterator"><c path="nme.ObjectHash.T"/></t></f></iterator>
		<getID get="inline" set="null" line="68">
			<f a="key">
				<c path="nme.ObjectHash.K"/>
				<c path="Int"/>
			</f>
			<haxe_doc>@private</haxe_doc>
		</getID>
		<get public="1" get="inline" set="null" line="53"><f a="key">
	<c path="nme.ObjectHash.K"/>
	<c path="nme.ObjectHash.T"/>
</f></get>
		<exists public="1" get="inline" set="null" line="38"><f a="key">
	<c path="nme.ObjectHash.K"/>
	<e path="Bool"/>
</f></exists>
		<hashValues>
			<c path="IntHash"><c path="nme.ObjectHash.T"/></c>
			<haxe_doc>@private</haxe_doc>
		</hashValues>
		<hashKeys>
			<c path="IntHash"><c path="nme.ObjectHash.K"/></c>
			<haxe_doc>@private</haxe_doc>
		</hashKeys>
		<new public="1" set="method" line="22"><f a=""><e path="Void"/></f></new>
	</class>
	<typedef path="nme.Vector" params="T" file="/home/joshua/Development/Haxe/nme/nme/Vector.hx"><c path="Array"><c path="nme.Vector.T"/></c></typedef>
	<class path="nme.VectorHelper" params="" file="/home/joshua/Development/Haxe/nme/nme/Vector.hx" module="nme.Vector"><ofArray public="1" params="T" get="inline" set="null" line="12" static="1"><f a="v:array">
	<c path="Class"><t path="nme.Vector"><d/></t></c>
	<c path="Array"><c path="ofArray.T"/></c>
	<t path="nme.Vector"><c path="ofArray.T"/></t>
</f></ofArray></class>
	<typedef path="nme.display.Bitmap" params="" file="/home/joshua/Development/Haxe/nme/nme/display/Bitmap.hx"><c path="native.display.Bitmap"/></typedef>
	<typedef path="nme.display.BitmapData" params="" file="/home/joshua/Development/Haxe/nme/nme/display/BitmapData.hx"><c path="native.display.BitmapData"/></typedef>
	<typedef path="nme.display.BitmapDataChannel" params="" file="/home/joshua/Development/Haxe/nme/nme/display/BitmapDataChannel.hx"><c path="native.display.BitmapDataChannel"/></typedef>
	<typedef path="nme.display.BitmapInt32" params="" file="/home/joshua/Development/Haxe/nme/nme/display/BitmapInt32.hx"><c path="Int"/></typedef>
	<typedef path="nme.display.BlendMode" params="" file="/home/joshua/Development/Haxe/nme/nme/display/BlendMode.hx"><e path="native.display.BlendMode"/></typedef>
	<typedef path="nme.display.CapsStyle" params="" file="/home/joshua/Development/Haxe/nme/nme/display/CapsStyle.hx"><e path="native.display.CapsStyle"/></typedef>
	<typedef path="nme.display.DirectRenderer" params="" file="/home/joshua/Development/Haxe/nme/nme/display/DirectRenderer.hx"><c path="native.display.DirectRenderer"/></typedef>
	<typedef path="nme.display.DisplayObject" params="" file="/home/joshua/Development/Haxe/nme/nme/display/DisplayObject.hx"><c path="native.display.DisplayObject"/></typedef>
	<typedef path="nme.display.DisplayObjectContainer" params="" file="/home/joshua/Development/Haxe/nme/nme/display/DisplayObjectContainer.hx"><c path="native.display.DisplayObjectContainer"/></typedef>
	<class path="nme.display.FPS" params="" file="/home/joshua/Development/Haxe/nme/nme/display/FPS.hx">
		<extends path="native.text.TextField"/>
		<onEnter set="method" line="38"><f a="_">
	<unknown/>
	<e path="Void"/>
</f></onEnter>
		<times><c path="Array"><c path="Float"/></c></times>
		<new public="1" set="method" line="16"><f a="?inX:?inY:?inCol">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<typedef path="nme.display.GradientType" params="" file="/home/joshua/Development/Haxe/nme/nme/display/GradientType.hx"><e path="native.display.GradientType"/></typedef>
	<typedef path="nme.display.Graphics" params="" file="/home/joshua/Development/Haxe/nme/nme/display/Graphics.hx"><c path="native.display.Graphics"/></typedef>
	<typedef path="nme.display.GraphicsEndFill" params="" file="/home/joshua/Development/Haxe/nme/nme/display/GraphicsEndFill.hx"><c path="native.display.GraphicsEndFill"/></typedef>
	<typedef path="nme.display.GraphicsPath" params="" file="/home/joshua/Development/Haxe/nme/nme/display/GraphicsPath.hx"><c path="native.display.GraphicsPath"/></typedef>
	<typedef path="nme.display.GraphicsPathWinding" params="" file="/home/joshua/Development/Haxe/nme/nme/display/GraphicsPathWinding.hx"><c path="native.display.GraphicsPathWinding"/></typedef>
	<typedef path="nme.display.GraphicsSolidFill" params="" file="/home/joshua/Development/Haxe/nme/nme/display/GraphicsSolidFill.hx"><c path="native.display.GraphicsSolidFill"/></typedef>
	<typedef path="nme.display.GraphicsStroke" params="" file="/home/joshua/Development/Haxe/nme/nme/display/GraphicsStroke.hx"><c path="native.display.GraphicsStroke"/></typedef>
	<typedef path="nme.display.IBitmapDrawable" params="" file="/home/joshua/Development/Haxe/nme/nme/display/IBitmapDrawable.hx"><c path="native.display.IBitmapDrawable"/></typedef>
	<typedef path="nme.display.IGraphicsData" params="" file="/home/joshua/Development/Haxe/nme/nme/display/IGraphicsData.hx"><c path="native.display.IGraphicsData"/></typedef>
	<typedef path="nme.display.InteractiveObject" params="" file="/home/joshua/Development/Haxe/nme/nme/display/InteractiveObject.hx"><c path="native.display.InteractiveObject"/></typedef>
	<typedef path="nme.display.InterpolationMethod" params="" file="/home/joshua/Development/Haxe/nme/nme/display/InterpolationMethod.hx"><e path="native.display.InterpolationMethod"/></typedef>
	<typedef path="nme.display.JointStyle" params="" file="/home/joshua/Development/Haxe/nme/nme/display/JointStyle.hx"><e path="native.display.JointStyle"/></typedef>
	<typedef path="nme.display.LineScaleMode" params="" file="/home/joshua/Development/Haxe/nme/nme/display/LineScaleMode.hx"><e path="native.display.LineScaleMode"/></typedef>
	<typedef path="nme.display.Loader" params="" file="/home/joshua/Development/Haxe/nme/nme/display/Loader.hx"><c path="native.display.Loader"/></typedef>
	<typedef path="nme.display.LoaderInfo" params="" file="/home/joshua/Development/Haxe/nme/nme/display/LoaderInfo.hx"><c path="native.display.LoaderInfo"/></typedef>
	<typedef path="nme.display.ManagedStage" params="" file="/home/joshua/Development/Haxe/nme/nme/display/ManagedStage.hx"><c path="native.display.ManagedStage"/></typedef>
	<typedef path="nme.display.MovieClip" params="" file="/home/joshua/Development/Haxe/nme/nme/display/MovieClip.hx"><c path="native.display.MovieClip"/></typedef>
	<typedef path="nme.display.OpenGLView" params="" file="/home/joshua/Development/Haxe/nme/nme/display/OpenGLView.hx"><c path="native.display.OpenGLView"/></typedef>
	<typedef path="nme.display.PixelSnapping" params="" file="/home/joshua/Development/Haxe/nme/nme/display/PixelSnapping.hx"><e path="native.display.PixelSnapping"/></typedef>
	<typedef path="nme.display.Shape" params="" file="/home/joshua/Development/Haxe/nme/nme/display/Shape.hx"><c path="native.display.Shape"/></typedef>
	<typedef path="nme.display.SimpleButton" params="" file="/home/joshua/Development/Haxe/nme/nme/display/SimpleButton.hx"><c path="native.display.SimpleButton"/></typedef>
	<typedef path="nme.display.SpreadMethod" params="" file="/home/joshua/Development/Haxe/nme/nme/display/SpreadMethod.hx"><e path="native.display.SpreadMethod"/></typedef>
	<typedef path="nme.display.Sprite" params="" file="/home/joshua/Development/Haxe/nme/nme/display/Sprite.hx"><c path="native.display.Sprite"/></typedef>
	<typedef path="nme.display.Stage" params="" file="/home/joshua/Development/Haxe/nme/nme/display/Stage.hx"><c path="native.display.Stage"/></typedef>
	<typedef path="nme.display.StageAlign" params="" file="/home/joshua/Development/Haxe/nme/nme/display/StageAlign.hx"><e path="native.display.StageAlign"/></typedef>
	<typedef path="nme.display.StageDisplayState" params="" file="/home/joshua/Development/Haxe/nme/nme/display/StageDisplayState.hx"><e path="native.display.StageDisplayState"/></typedef>
	<typedef path="nme.display.StageQuality" params="" file="/home/joshua/Development/Haxe/nme/nme/display/StageQuality.hx"><e path="native.display.StageQuality"/></typedef>
	<typedef path="nme.display.StageScaleMode" params="" file="/home/joshua/Development/Haxe/nme/nme/display/StageScaleMode.hx"><e path="native.display.StageScaleMode"/></typedef>
	<typedef path="nme.display.Tilesheet" params="" file="/home/joshua/Development/Haxe/nme/nme/display/Tilesheet.hx"><c path="native.display.Tilesheet"/></typedef>
	<typedef path="nme.display.TriangleCulling" params="" file="/home/joshua/Development/Haxe/nme/nme/display/TriangleCulling.hx"><e path="native.display.TriangleCulling"/></typedef>
	<typedef path="nme.errors.ArgumentError" params="" file="/home/joshua/Development/Haxe/nme/nme/errors/ArgumentError.hx"><c path="native.errors.ArgumentError"/></typedef>
	<typedef path="nme.errors.EOFError" params="" file="/home/joshua/Development/Haxe/nme/nme/errors/EOFError.hx"><c path="native.errors.EOFError"/></typedef>
	<typedef path="nme.errors.Error" params="" file="/home/joshua/Development/Haxe/nme/nme/errors/Error.hx"><c path="native.errors.Error"/></typedef>
	<typedef path="nme.errors.IllegalOperationError" params="" file="/home/joshua/Development/Haxe/nme/nme/errors/IllegalOperationError.hx"><c path="native.errors.IllegalOperationError"/></typedef>
	<typedef path="nme.errors.RangeError" params="" file="/home/joshua/Development/Haxe/nme/nme/errors/RangeError.hx"><c path="native.errors.RangeError"/></typedef>
	<typedef path="nme.errors.SecurityError" params="" file="/home/joshua/Development/Haxe/nme/nme/errors/SecurityError.hx"><c path="native.errors.SecurityError"/></typedef>
	<typedef path="nme.errors.TypeError" params="" file="/home/joshua/Development/Haxe/nme/nme/errors/TypeError.hx"><c path="native.errors.TypeError"/></typedef>
	<typedef path="nme.events.AccelerometerEvent" params="" file="/home/joshua/Development/Haxe/nme/nme/events/AccelerometerEvent.hx"><c path="native.events.AccelerometerEvent"/></typedef>
	<typedef path="nme.events.ErrorEvent" params="" file="/home/joshua/Development/Haxe/nme/nme/events/ErrorEvent.hx"><c path="native.events.ErrorEvent"/></typedef>
	<typedef path="nme.events.Event" params="" file="/home/joshua/Development/Haxe/nme/nme/events/Event.hx"><c path="native.events.Event"/></typedef>
	<typedef path="nme.events.EventDispatcher" params="" file="/home/joshua/Development/Haxe/nme/nme/events/EventDispatcher.hx"><c path="native.events.EventDispatcher"/></typedef>
	<typedef path="nme.events.EventPhase" params="" file="/home/joshua/Development/Haxe/nme/nme/events/EventPhase.hx"><c path="native.events.EventPhase"/></typedef>
	<typedef path="nme.events.FocusEvent" params="" file="/home/joshua/Development/Haxe/nme/nme/events/FocusEvent.hx"><c path="native.events.FocusEvent"/></typedef>
	<typedef path="nme.events.IEventDispatcher" params="" file="/home/joshua/Development/Haxe/nme/nme/events/IEventDispatcher.hx"><c path="native.events.IEventDispatcher"/></typedef>
	<typedef path="nme.events.IOErrorEvent" params="" file="/home/joshua/Development/Haxe/nme/nme/events/IOErrorEvent.hx"><c path="native.events.IOErrorEvent"/></typedef>
	<typedef path="nme.events.JoystickEvent" params="" file="/home/joshua/Development/Haxe/nme/nme/events/JoystickEvent.hx"><c path="native.events.JoystickEvent"/></typedef>
	<typedef path="nme.events.KeyboardEvent" params="" file="/home/joshua/Development/Haxe/nme/nme/events/KeyboardEvent.hx"><c path="native.events.KeyboardEvent"/></typedef>
	<typedef path="nme.events.MouseEvent" params="" file="/home/joshua/Development/Haxe/nme/nme/events/MouseEvent.hx"><c path="native.events.MouseEvent"/></typedef>
	<typedef path="nme.events.ProgressEvent" params="" file="/home/joshua/Development/Haxe/nme/nme/events/ProgressEvent.hx"><c path="native.events.ProgressEvent"/></typedef>
	<typedef path="nme.events.SecurityErrorEvent" params="" file="/home/joshua/Development/Haxe/nme/nme/events/SecurityErrorEvent.hx"><c path="native.events.SecurityErrorEvent"/></typedef>
	<typedef path="nme.events.TextEvent" params="" file="/home/joshua/Development/Haxe/nme/nme/events/TextEvent.hx"><c path="native.events.TextEvent"/></typedef>
	<typedef path="nme.events.TimerEvent" params="" file="/home/joshua/Development/Haxe/nme/nme/events/TimerEvent.hx"><c path="native.events.TimerEvent"/></typedef>
	<typedef path="nme.events.TouchEvent" params="" file="/home/joshua/Development/Haxe/nme/nme/events/TouchEvent.hx"><c path="native.events.TouchEvent"/></typedef>
	<typedef path="nme.external.ExternalInterface" params="" file="/home/joshua/Development/Haxe/nme/nme/external/ExternalInterface.hx"><c path="native.external.ExternalInterface"/></typedef>
	<typedef path="nme.feedback.Haptic" params="" file="/home/joshua/Development/Haxe/nme/nme/feedback/Haptic.hx"><c path="native.feedback.Haptic"/></typedef>
	<typedef path="nme.filesystem.File" params="" file="/home/joshua/Development/Haxe/nme/nme/filesystem/File.hx"><c path="native.filesystem.File"/></typedef>
	<typedef path="nme.filesystem.StorageVolume" params="" file="/home/joshua/Development/Haxe/nme/nme/filesystem/StorageVolume.hx"><c path="native.filesystem.StorageVolume"/></typedef>
	<typedef path="nme.filesystem.StorageVolumeInfo" params="" file="/home/joshua/Development/Haxe/nme/nme/filesystem/StorageVolumeInfo.hx"><c path="native.filesystem.StorageVolumeInfo"/></typedef>
	<typedef path="nme.filters.BitmapFilter" params="" file="/home/joshua/Development/Haxe/nme/nme/filters/BitmapFilter.hx"><c path="native.filters.BitmapFilter"/></typedef>
	<typedef path="nme.filters.BitmapFilterQuality" params="" file="/home/joshua/Development/Haxe/nme/nme/filters/BitmapFilterQuality.hx"><c path="native.filters.BitmapFilterQuality"/></typedef>
	<typedef path="nme.filters.BitmapFilterType" params="" file="/home/joshua/Development/Haxe/nme/nme/filters/BitmapFilterType.hx"><c path="native.filters.BitmapFilterType"/></typedef>
	<typedef path="nme.filters.BlurFilter" params="" file="/home/joshua/Development/Haxe/nme/nme/filters/BlurFilter.hx"><c path="native.filters.BlurFilter"/></typedef>
	<typedef path="nme.filters.DropShadowFilter" params="" file="/home/joshua/Development/Haxe/nme/nme/filters/DropShadowFilter.hx"><c path="native.filters.DropShadowFilter"/></typedef>
	<typedef path="nme.filters.GlowFilter" params="" file="/home/joshua/Development/Haxe/nme/nme/filters/GlowFilter.hx"><c path="native.filters.GlowFilter"/></typedef>
	<typedef path="nme.geom.ColorTransform" params="" file="/home/joshua/Development/Haxe/nme/nme/geom/ColorTransform.hx"><c path="native.geom.ColorTransform"/></typedef>
	<typedef path="nme.geom.Matrix" params="" file="/home/joshua/Development/Haxe/nme/nme/geom/Matrix.hx"><c path="native.geom.Matrix"/></typedef>
	<typedef path="nme.geom.Matrix3D" params="" file="/home/joshua/Development/Haxe/nme/nme/geom/Matrix3D.hx"><c path="native.geom.Matrix3D"/></typedef>
	<typedef path="nme.geom.Point" params="" file="/home/joshua/Development/Haxe/nme/nme/geom/Point.hx"><c path="native.geom.Point"/></typedef>
	<typedef path="nme.geom.Rectangle" params="" file="/home/joshua/Development/Haxe/nme/nme/geom/Rectangle.hx"><c path="native.geom.Rectangle"/></typedef>
	<typedef path="nme.geom.Transform" params="" file="/home/joshua/Development/Haxe/nme/nme/geom/Transform.hx"><c path="native.geom.Transform"/></typedef>
	<typedef path="nme.geom.Vector3D" params="" file="/home/joshua/Development/Haxe/nme/nme/geom/Vector3D.hx"><c path="native.geom.Vector3D"/></typedef>
	<typedef path="nme.gl.GL" params="" file="/home/joshua/Development/Haxe/nme/nme/gl/GL.hx"><c path="native.gl.GL"/></typedef>
	<typedef path="nme.media.ID3Info" params="" file="/home/joshua/Development/Haxe/nme/nme/media/ID3Info.hx"><c path="native.media.ID3Info"/></typedef>
	<typedef path="nme.media.Sound" params="" file="/home/joshua/Development/Haxe/nme/nme/media/Sound.hx"><c path="native.media.Sound"/></typedef>
	<typedef path="nme.media.SoundChannel" params="" file="/home/joshua/Development/Haxe/nme/nme/media/SoundChannel.hx"><c path="native.media.SoundChannel"/></typedef>
	<typedef path="nme.media.SoundLoaderContext" params="" file="/home/joshua/Development/Haxe/nme/nme/media/SoundLoaderContext.hx"><c path="native.media.SoundLoaderContext"/></typedef>
	<typedef path="nme.media.SoundTransform" params="" file="/home/joshua/Development/Haxe/nme/nme/media/SoundTransform.hx"><c path="native.media.SoundTransform"/></typedef>
	<typedef path="nme.net.SharedObject" params="" file="/home/joshua/Development/Haxe/nme/nme/net/SharedObject.hx"><c path="native.net.SharedObject"/></typedef>
	<typedef path="nme.net.SharedObjectFlushStatus" params="" file="/home/joshua/Development/Haxe/nme/nme/net/SharedObjectFlushStatus.hx"><e path="native.net.SharedObjectFlushStatus"/></typedef>
	<typedef path="nme.net.URLLoader" params="" file="/home/joshua/Development/Haxe/nme/nme/net/URLLoader.hx"><c path="native.net.URLLoader"/></typedef>
	<typedef path="nme.net.URLLoaderDataFormat" params="" file="/home/joshua/Development/Haxe/nme/nme/net/URLLoaderDataFormat.hx"><e path="native.net.URLLoaderDataFormat"/></typedef>
	<typedef path="nme.net.URLRequest" params="" file="/home/joshua/Development/Haxe/nme/nme/net/URLRequest.hx"><c path="native.net.URLRequest"/></typedef>
	<typedef path="nme.net.URLRequestMethod" params="" file="/home/joshua/Development/Haxe/nme/nme/net/URLRequestMethod.hx"><c path="native.net.URLRequestMethod"/></typedef>
	<typedef path="nme.net.URLVariables" params="" file="/home/joshua/Development/Haxe/nme/nme/net/URLVariables.hx"><c path="native.net.URLVariables"/></typedef>
	<typedef path="nme.sensors.Accelerometer" params="" file="/home/joshua/Development/Haxe/nme/nme/sensors/Accelerometer.hx"><c path="native.sensors.Accelerometer"/></typedef>
	<typedef path="nme.system.Capabilities" params="" file="/home/joshua/Development/Haxe/nme/nme/system/Capabilities.hx"><c path="native.system.Capabilities"/></typedef>
	<typedef path="nme.system.System" params="" file="/home/joshua/Development/Haxe/nme/nme/system/System.hx"><c path="native.system.System"/></typedef>
	<typedef path="nme.text.AntiAliasType" params="" file="/home/joshua/Development/Haxe/nme/nme/text/AntiAliasType.hx"><e path="native.text.AntiAliasType"/></typedef>
	<typedef path="nme.text.Font" params="" file="/home/joshua/Development/Haxe/nme/nme/text/Font.hx"><c path="native.text.Font"/></typedef>
	<typedef path="nme.text.FontStyle" params="" file="/home/joshua/Development/Haxe/nme/nme/text/FontStyle.hx"><e path="native.text.FontStyle"/></typedef>
	<typedef path="nme.text.FontType" params="" file="/home/joshua/Development/Haxe/nme/nme/text/FontType.hx"><e path="native.text.FontType"/></typedef>
	<typedef path="nme.text.NMEFont" params="" file="/home/joshua/Development/Haxe/nme/nme/text/NMEFont.hx"><c path="native.text.NMEFont"/></typedef>
	<typedef path="nme.text.TextField" params="" file="/home/joshua/Development/Haxe/nme/nme/text/TextField.hx"><c path="native.text.TextField"/></typedef>
	<typedef path="nme.text.TextFieldAutoSize" params="" file="/home/joshua/Development/Haxe/nme/nme/text/TextFieldAutoSize.hx"><e path="native.text.TextFieldAutoSize"/></typedef>
	<typedef path="nme.text.TextFieldType" params="" file="/home/joshua/Development/Haxe/nme/nme/text/TextFieldType.hx"><e path="native.text.TextFieldType"/></typedef>
	<typedef path="nme.text.TextFormat" params="" file="/home/joshua/Development/Haxe/nme/nme/text/TextFormat.hx"><c path="native.text.TextFormat"/></typedef>
	<typedef path="nme.text.TextFormatAlign" params="" file="/home/joshua/Development/Haxe/nme/nme/text/TextFormatAlign.hx"><c path="native.text.TextFormatAlign"/></typedef>
	<typedef path="nme.ui.Acceleration" params="" file="/home/joshua/Development/Haxe/nme/nme/ui/Acceleration.hx"><t path="native.ui.Acceleration"/></typedef>
	<typedef path="nme.ui.Accelerometer" params="" file="/home/joshua/Development/Haxe/nme/nme/ui/Accelerometer.hx"><c path="native.ui.Accelerometer"/></typedef>
	<typedef path="nme.ui.Keyboard" params="" file="/home/joshua/Development/Haxe/nme/nme/ui/Keyboard.hx"><c path="native.ui.Keyboard"/></typedef>
	<typedef path="nme.ui.Mouse" params="" file="/home/joshua/Development/Haxe/nme/nme/ui/Mouse.hx"><c path="native.ui.Mouse"/></typedef>
	<typedef path="nme.ui.Multitouch" params="" file="/home/joshua/Development/Haxe/nme/nme/ui/Multitouch.hx"><c path="native.ui.Multitouch"/></typedef>
	<typedef path="nme.ui.MultitouchInputMode" params="" file="/home/joshua/Development/Haxe/nme/nme/ui/MultitouchInputMode.hx"><e path="native.ui.MultitouchInputMode"/></typedef>
	<typedef path="nme.utils.ArrayBuffer" params="" file="/home/joshua/Development/Haxe/nme/nme/utils/ArrayBuffer.hx"><t path="native.utils.ArrayBuffer"/></typedef>
	<typedef path="nme.utils.ArrayBufferView" params="" file="/home/joshua/Development/Haxe/nme/nme/utils/ArrayBufferView.hx"><c path="native.utils.ArrayBufferView"/></typedef>
	<typedef path="nme.utils.ByteArray" params="" file="/home/joshua/Development/Haxe/nme/nme/utils/ByteArray.hx"><c path="native.utils.ByteArray"/></typedef>
	<typedef path="nme.utils.CompressionAlgorithm" params="" file="/home/joshua/Development/Haxe/nme/nme/utils/CompressionAlgorithm.hx"><e path="native.utils.CompressionAlgorithm"/></typedef>
	<typedef path="nme.utils.Endian" params="" file="/home/joshua/Development/Haxe/nme/nme/utils/Endian.hx"><c path="native.utils.Endian"/></typedef>
	<typedef path="nme.utils.Float32Array" params="" file="/home/joshua/Development/Haxe/nme/nme/utils/Float32Array.hx"><c path="native.utils.Float32Array"/></typedef>
	<typedef path="nme.utils.IDataInput" params="" file="/home/joshua/Development/Haxe/nme/nme/utils/IDataInput.hx"><c path="native.utils.IDataInput"/></typedef>
	<typedef path="nme.utils.Timer" params="" file="/home/joshua/Development/Haxe/nme/nme/utils/Timer.hx"><c path="native.utils.Timer"/></typedef>
	<typedef path="nme.utils.WeakRef" params="T" file="/home/joshua/Development/Haxe/nme/nme/utils/WeakRef.hx"><c path="native.utils.WeakRef"><c path="nme.utils.WeakRef.T"/></c></typedef>
	<typedef path="sys.FileStat" params="" file="/usr/lib/haxe/std/sys/FileStat.hx">
		<a>
			<uid>
				<c path="Int"/>
				<haxe_doc>the user id for the file</haxe_doc>
			</uid>
			<size>
				<c path="Int"/>
				<haxe_doc>the size of the file</haxe_doc>
			</size>
			<rdev><c path="Int"/></rdev>
			<nlink><c path="Int"/></nlink>
			<mtime>
				<c path="Date"/>
				<haxe_doc>the last modification time for the file</haxe_doc>
			</mtime>
			<mode><c path="Int"/></mode>
			<ino><c path="Int"/></ino>
			<gid><c path="Int"/></gid>
			<dev><c path="Int"/></dev>
			<ctime>
				<c path="Date"/>
				<haxe_doc>the creation time for the file</haxe_doc>
			</ctime>
			<atime>
				<c path="Date"/>
				<haxe_doc>the last access time for the file (when enabled by the file system)</haxe_doc>
			</atime>
		</a>
		<haxe_doc>File informations, as given by [sys.FileSystem.stat]</haxe_doc>
	</typedef>
	<enum path="sys._FileSystem.FileKind" params="" file="/usr/lib/haxe/std/cpp/_std/sys/FileSystem.hx" private="1" module="sys.FileSystem">
		<kother a="k"><c path="String"/></kother>
		<kfile/>
		<kdir/>
	</enum>
	<class path="sys.FileSystem" params="" file="/usr/lib/haxe/std/cpp/_std/sys/FileSystem.hx">
		<exists public="1" set="method" line="36" static="1">
			<f a="path">
				<c path="String"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Tells if the given file or directory exists.</haxe_doc>
		</exists>
		<rename public="1" set="method" line="40" static="1">
			<f a="path:newpath">
				<c path="String"/>
				<c path="String"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Rename the corresponding file or directory, allow to move it accross directories as well.</haxe_doc>
		</rename>
		<stat public="1" set="method" line="45" static="1">
			<f a="path">
				<c path="String"/>
				<t path="sys.FileStat"/>
			</f>
			<haxe_doc>Returns informations for the given file/directory.</haxe_doc>
		</stat>
		<fullPath public="1" set="method" line="55" static="1">
			<f a="relpath">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the full path for the given path which is relative to the current working directory.</haxe_doc>
		</fullPath>
		<kind set="method" line="59" static="1"><f a="path">
	<c path="String"/>
	<e path="sys._FileSystem.FileKind"/>
</f></kind>
		<isDirectory public="1" set="method" line="68" static="1">
			<f a="path">
				<c path="String"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>Tells if the given path is a directory. Throw an exception if it does not exists or is not accesible.</haxe_doc>
		</isDirectory>
		<createDirectory public="1" set="method" line="72" static="1">
			<f a="path">
				<c path="String"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Create the given directory. Not recursive : the parent directory must exists.</haxe_doc>
		</createDirectory>
		<deleteFile public="1" set="method" line="77" static="1">
			<f a="path">
				<c path="String"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Delete a given file.</haxe_doc>
		</deleteFile>
		<deleteDirectory public="1" set="method" line="82" static="1">
			<f a="path">
				<c path="String"/>
				<e path="Void"/>
			</f>
			<haxe_doc>Delete a given directory.</haxe_doc>
		</deleteDirectory>
		<readDirectory public="1" set="method" line="87" static="1">
			<f a="path">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Read all the files/directories stored into the given directory.</haxe_doc>
		</readDirectory>
		<sys_exists line="91" static="1"><f a="">
	<c path="String"/>
	<e path="Bool"/>
</f></sys_exists>
		<file_delete line="92" static="1"><f a="">
	<c path="String"/>
	<unknown/>
</f></file_delete>
		<sys_rename line="93" static="1"><f a=":">
	<c path="String"/>
	<c path="String"/>
	<unknown/>
</f></sys_rename>
		<sys_stat line="94" static="1"><f a="">
	<c path="String"/>
	<t path="sys.FileStat"/>
</f></sys_stat>
		<sys_file_type line="95" static="1"><f a="">
	<c path="String"/>
	<c path="String"/>
</f></sys_file_type>
		<sys_create_dir line="96" static="1"><f a=":">
	<c path="String"/>
	<c path="Int"/>
	<unknown/>
</f></sys_create_dir>
		<sys_remove_dir line="97" static="1"><f a="">
	<c path="String"/>
	<unknown/>
</f></sys_remove_dir>
		<sys_read_dir line="98" static="1"><f a="">
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
</f></sys_read_dir>
		<file_full_path line="99" static="1"><f a="">
	<c path="String"/>
	<c path="String"/>
</f></file_full_path>
		<haxe_doc>This class allows you to get informations about the files and directories.</haxe_doc>
		<meta><m n=":core_api"/></meta>
	</class>
	<class path="sys.io.File" params="" file="/usr/lib/haxe/std/cpp/_std/sys/io/File.hx">
		<getContent public="1" set="method" line="30" static="1"><f a="path">
	<c path="String"/>
	<c path="String"/>
</f></getContent>
		<getBytes public="1" set="method" line="35" static="1"><f a="path">
	<c path="String"/>
	<c path="haxe.io.Bytes"/>
</f></getBytes>
		<saveContent public="1" set="method" line="40" static="1"><f a="path:content">
	<c path="String"/>
	<c path="String"/>
	<e path="Void"/>
</f></saveContent>
		<saveBytes public="1" set="method" line="46" static="1"><f a="path:bytes">
	<c path="String"/>
	<c path="haxe.io.Bytes"/>
	<e path="Void"/>
</f></saveBytes>
		<read public="1" set="method" line="52" static="1"><f a="path:?binary">
	<c path="String"/>
	<e path="Bool"/>
	<c path="sys.io.FileInput"/>
</f></read>
		<write public="1" set="method" line="56" static="1"><f a="path:?binary">
	<c path="String"/>
	<e path="Bool"/>
	<c path="sys.io.FileOutput"/>
</f></write>
		<append public="1" set="method" line="60" static="1"><f a="path:?binary">
	<c path="String"/>
	<e path="Bool"/>
	<c path="sys.io.FileOutput"/>
</f></append>
		<copy public="1" set="method" line="64" static="1"><f a="src:dst">
	<c path="String"/>
	<c path="String"/>
	<e path="Void"/>
</f></copy>
		<file_contents line="72" static="1"><f a="">
	<c path="String"/>
	<t path="haxe.io.BytesData"/>
</f></file_contents>
		<file_open line="73" static="1"><f a=":">
	<c path="String"/>
	<c path="String"/>
	<unknown/>
</f></file_open>
		<haxe_doc>API for reading and writing to files.</haxe_doc>
		<meta><m n=":core_api"/></meta>
	</class>
	<class path="sys.io.FileInput" params="" file="/usr/lib/haxe/std/cpp/_std/sys/io/FileInput.hx">
		<extends path="haxe.io.Input"/>
		<file_eof line="77" static="1"><f a="">
	<d/>
	<e path="Bool"/>
</f></file_eof>
		<file_read line="79" static="1"><f a=":::">
	<d/>
	<t path="haxe.io.BytesData"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></file_read>
		<file_read_char line="80" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></file_read_char>
		<file_close line="82" static="1"><f a="">
	<d/>
	<unknown/>
</f></file_close>
		<file_seek line="83" static="1"><f a="::">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></file_seek>
		<file_tell line="84" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></file_tell>
		<eof public="1" set="method" line="73"><f a=""><e path="Bool"/></f></eof>
		<tell public="1" set="method" line="68"><f a=""><c path="Int"/></f></tell>
		<seek public="1" set="method" line="64"><f a="p:pos">
	<c path="Int"/>
	<e path="sys.io.FileSeek"/>
	<e path="Void"/>
</f></seek>
		<close public="1" set="method" line="59" override="1"><f a=""><e path="Void"/></f></close>
		<readBytes public="1" set="method" line="48" override="1"><f a="s:p:l">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></readBytes>
		<readByte public="1" set="method" line="37" override="1"><f a=""><c path="Int"/></f></readByte>
		<__f><d/></__f>
		<new set="method" line="33"><f a="f">
	<d/>
	<e path="Void"/>
</f></new>
		<haxe_doc>Use [sys.io.File.read] to create a [FileInput]</haxe_doc>
		<meta><m n=":core_api"/></meta>
	</class>
	<class path="sys.io.FileOutput" params="" file="/usr/lib/haxe/std/cpp/_std/sys/io/FileOutput.hx">
		<extends path="haxe.io.Output"/>
		<file_close line="62" static="1"><f a="">
	<d/>
	<unknown/>
</f></file_close>
		<file_seek line="63" static="1"><f a="::">
	<d/>
	<c path="Int"/>
	<c path="Int"/>
	<unknown/>
</f></file_seek>
		<file_tell line="64" static="1"><f a="">
	<d/>
	<c path="Int"/>
</f></file_tell>
		<file_flush line="66" static="1"><f a="">
	<d/>
	<unknown/>
</f></file_flush>
		<file_write line="67" static="1"><f a=":::">
	<d/>
	<t path="haxe.io.BytesData"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></file_write>
		<file_write_char line="68" static="1"><f a=":">
	<d/>
	<c path="Int"/>
	<unknown/>
</f></file_write_char>
		<tell public="1" set="method" line="58"><f a=""><c path="Int"/></f></tell>
		<seek public="1" set="method" line="54"><f a="p:pos">
	<c path="Int"/>
	<e path="sys.io.FileSeek"/>
	<e path="Void"/>
</f></seek>
		<close public="1" set="method" line="49" override="1"><f a=""><e path="Void"/></f></close>
		<flush public="1" set="method" line="45" override="1"><f a=""><e path="Void"/></f></flush>
		<writeBytes public="1" set="method" line="41" override="1"><f a="s:p:l">
	<c path="haxe.io.Bytes"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></writeBytes>
		<writeByte public="1" set="method" line="37" override="1"><f a="c">
	<c path="Int"/>
	<e path="Void"/>
</f></writeByte>
		<__f><d/></__f>
		<new set="method" line="33"><f a="f">
	<d/>
	<e path="Void"/>
</f></new>
		<haxe_doc>Use [sys.io.File.write] to create a [FileOutput]</haxe_doc>
		<meta><m n=":core_api"/></meta>
	</class>
	<enum path="sys.io.FileSeek" params="" file="/usr/lib/haxe/std/sys/io/FileSeek.hx">
		<SeekEnd/>
		<SeekCur/>
		<SeekBegin/>
	</enum>
</haxe>