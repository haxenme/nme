<xml>
   
   <set name="GCC_THIN_ARCHIVE" value="1" if="iphone"/>
   <set name="GCC_THIN_ARCHIVE" value="1" if="emscripten"/>
   <set name="debug" value="debug" if ="fulldebug" />
   
   <set name="PLATFORM" value="android-9" if="android" unless="PLATFORM" />
   
   <include name="${HXCPP}/build-tool/BuildCommon.xml"/>

   <set name="HXCPP_M32" value="1" unless="HXCPP_M64" />
   
   <set name="iphonesim" value="1" if="ios" />
   <set name="iphoneos" value="1" if="ios" unless="simulator" />
   <set name="win_desktop" value="1" if="windows" unless="winrt"/>
   
   <set name="NME_DEV" value="${haxelib:nmedev}" unless="NME_DEV" />
   <set name="NME_DEV" value="${SDL_STATIC}" if="SDL_STATIC" />
   
   <set name="has_window" value="1" if="NME_SDL" />
   <set name="has_window" value="1" if="NME_SDL2" />
   <set name="has_window" value="1" if="NME_GLFW" />
   <set name="has_window" value="1" if="NME_DIRECTFB" />
   <set name="sdl" value="1" if="NME_SDL" />
   <set name="sdl2" value="1" if="NME_SDL2" />
   <set name="glfw" value="1" if="NME_GLFW" />
   <set name="directfb" value="1" if="NME_DIRECTFB" />
   
   <set name="sdl" value="1" if="rpi" unless="has_window" />
   <set name="has_window" value="1" if="sdl" />
   
   <set name="sdl2" value="1" if="win_desktop" unless="has_window" />
   <set name="sdl2" value="1" if="macos" unless="has_window" />
   <set name="sdl2" value="1" if="linux" unless="has_window" />
   <set name="sdl" value="1" if="blackberry" unless="has_window" />
   <set name="sdl" value="1" if="emscripten" unless="has_window" />
   <!-- <set name="mac64" value="1" if="macos" unless="HXCPP_M32" />
   <set name="sdl2" value="1" if="mac64" unless="has_window" />
   <unset name="sdl" if="mac64" unless="has_window" /> -->
   <set name="has_window" value="1" if="sdl" />
   <set name="has_window" value="1" if="sdl2" />
   <set name="has_window" value="1" if="glfw" />
   <set name="has_window" value="1" if="directfb" />
   
   <set name="ogl" value="1" if="glfw"/>
   <set name="ogl" value="1" if="sdl"/>
   <set name="ogl" value="1" if="sdl2"/>
   <set name="ogl" value="1" if="gph"/>
   <set name="ogl" value="1" if="iphone"/>
   <set name="ogl" value="1" if="android"/>
   <set name="nmeegl" value="1" if="rpi"/>
   
   <set name="nocurl" value="1" if="winrt"/>
   <set name="nocurl" value="1" if="emscripten"/>
   <!-- <set name="nocurl" value="1" if="macos" unless="HXCPP_M32" /> -->
   <set name="nocurl" value="1" if="directfb" />
   
   <!-- <set name="NME_FORCE_GLES1" value="1" if="iphone" /> -->
   
   <set name="sdl_image" value="1" if="emscripten" />
   
   <set name="ogl_shaders" value="1" unless="NME_FORCE_GLES1" />
   
   <set name="openal" value="1" if="NME_OPENAL" />
   <set name="openal" value="1" if="android" />
   <set name="openal" value="1" if="iphone" />
   <set name="has_sound" value="1" if="sdl" />
   <set name="has_sound" value="1" if="openal" />
   <set name="openal" value="1" if="sdl2" unless="has_sound" />
   <set name="noopenal" value="1" unless="openal" />
   <set name="has_sound" value="1" if="sdl2" />
   
   <set name="mobile" value="1" if="iphone"/>
   <set name="mobile" value="1" if="android"/>
   <set name="mobile" value="1" if="webos"/>
   <set name="mobile" value="1" if="blackberry"/>
   <set name="mobile" value="1" if="gph"/>
   
   <set name="ssl" value="1" unless="nossl"/>
   <set name="ssl_extra" value="_ssl" if="ssl"/>
   
   
   <files id="win_desktop">
      
      <compilerflag value="-Iinclude"/>
      <compilerflag value="-I${NME_DEV}/include"/>
      <compilerflag value="-I${NME_DEV}/include/SDL12" if="sdl" />
      <compilerflag value="-I${NME_DEV}/include/SDL2" if="sdl2" />
      <compilerflag value="-I${NME_DEV}/include/openal" if="openal" />
      <compilerflag value="-Iopenal"/>
      <file name="windows/GDIFont.cpp"/>
      <file name="windows/System.cpp" />
      <!-- Use SDL on windows too ? -->
      <!-- <file name="windows/SimpleFrame.cpp" unless="sdl"/> -->
      <!-- <file name="sdl/SDLSound.cpp" unless="sdl"/> -->
      <file name="empty/Sound.cpp" if="glfw" unless="openal" />
      <file name="openal/OpenALSound.cpp" if="openal"/>
      <compilerflag value="-DAL_LIBTYPE_STATIC" if="openal"/>

   </files>
   
   
   <files id="winrt_shaders">
      <hlsl name="winrt\\SimplePixelShader.hlsl" profile="ps_4_0" variable="gPixelShader" target="winrt\\shaders\\SimplePixelShader.h"/>
      <hlsl name="winrt\\SimpleVertexShader.hlsl" profile="vs_4_0" variable="gVertexShader" target="winrt\\shaders\\SimpleVertexShader.h"/>
      <file name="winrt/ShaderData.cpp" />
   </files>
   
   
   <files id="winrt">
      <compilerflag value="-Iinclude"/>
      <file name="winrt/WinRTStage.cpp" />
      <file name="winrt/DX11Context.cpp" />
      <file name="winrt/DX11Font.cpp" />
      <file name="winrt/System.cpp" />
      <file name="winrt/MediaFoundation.cpp" />
      <file name="winrt/Direct3DBase.cpp" />
      <file name="winrt/URL.cpp" />
   </files>
   
   
   <files id="linux">
      
      <compilerflag value="-Iinclude"/>
      <compilerflag value="-Iopenal" if="openal" />
      <compilerflag value="-I${NME_DEV}/include" />
      <compilerflag value="-I${NME_DEV}/include/openal" if="openal" />
      <compilerflag value="-DSDL_OGL" if="sdl"/>
      <file name="linux/NativeFont.cpp"/>
      <file name="linux/System.cpp"/>
      <file name="empty/URL.cpp" if="nocurl" />
      <file name="empty/Sound.cpp" if="noopenal" />
      <!-- <file name="empty/HardwareContext.cpp" unless="has_window" /> -->
      <file name="openal/OpenALSound.cpp" if="openal" />
      
   </files>
   
   
   <files id="gph">
      
      <compilerflag value="-Iinclude"/>
      <compilerflag value="-I${GPH_ROOT}/gcc-4.2.4-glibc-2.7-eabi/arm-gph-linux-gnueabi/sys-root/usr/include"/>
      <compilerflag value="-I${GPH_ROOT}/include" if="gph"/>
      <compilerflag value="-I${GPH_ROOT}/include/freetype2" if="gph"/>
      <compilerflag value="-I${GPH_ROOT}/DGE/include" if="gph"/>
      <file name="linux/NativeFont.cpp"/>
      <file name="dge/DGEStage.cpp"/>
      <file name="dge/DGESound.cpp"/>
      
   </files>
   
   
   <files id="iphone">
      
      <compilerflag value="-Iinclude"/>
      <compilerflag value="-I${NME_DEV}/include"/>
      <compilerflag value="-Iopenal"/>
      <compilerflag value="-DNME_FORCE_GLES1" if="NME_FORCE_GLES1"/>
      <file name="iPhone/UIStageView.mm"/>
      <file name="iPhone/UIDeviceHardware.mm"/>
      <!-- <file name="iPhone/SurfaceIO.mm"/> -->
      <file name="openal/OpenALSound.cpp" />
      <file name="iPhone/Sound.mm"/>
      <file name="iPhone/NativeFont.mm"/>
      <file name="iPhone/System.mm"/>
      <file name="cocoa/FileManager.mm"/>
      
   </files>
   
   
   <files id="android">
      
      <compilerflag value="-Iinclude"/>
      <compilerflag value="-I${NME_DEV}/include"/>
      <compilerflag value="-I${NME_DEV}/include/openal" if="openal" />
      <compilerflag value="-Iopenal"/>
      <file name="android/AndroidCommon.cpp" />
      <file name="android/AndroidSound.cpp" unless="openal"/>
      <file name="android/AndroidFont.cpp"/>
      <file name="android/AndroidFrame.cpp"/>
      <file name="android/JNI.cpp"/>
      <file name="android/System.cpp"/>
      <file name="openal/OpenALSound.cpp" if="openal"/>
      <compilerflag value="-DAL_LIBTYPE_STATIC" if="openal"/>
      
   </files>
   
   <files id="emscripten">
      
      <compilerflag value="-Iinclude"/>
      <file name="linux/NativeFont.cpp"/>
      <file name="emscripten/System.cpp"/>
      
   </files>
   
   
   <set name="dynamic_sdl" value="1" if="webos"/>
   
   <files id="webos">
      
      <compilerflag value="-Iinclude"/>
      <compilerflag value="-I${PalmPDK}/include/SDL" />
      <compilerflag value="-I${NME_DEV}/include"/>
      <file name="linux/NativeFont.cpp"/>
      <file name="webOS/System.cpp"/>
      
   </files>
   
   
   <files id="blackberry">
      
      <compilerflag value="-Iinclude"/>
      <compilerflag value="-I${QNX_TARGET}/usr/include" />
      <compilerflag value="-I${NME_DEV}/include"/>
      <file name="linux/NativeFont.cpp"/>
      <file name="blackberry/System.cpp"/>
      
   </files>
   
   
   <files id="main">
      
      <compilerflag value="-Iinclude"/>
      <file name="Test.cpp"/>
      
   </files>
   
   
   <set name="THIRDPARTY_LIBS" value="${NME_DEV}/lib/Mac${M64}/" if="macos"/>
   <set name="THIRDPARTY_LIBS" value="${NME_DEV}/lib/Windows/" if="windows" unless="winrt"/>
   <set name="THIRDPARTY_LIBS" value="${NME_DEV}/lib/WinRTx86/" if="winrt"/>
   <set name="THIRDPARTY_LIBS" value="${NME_DEV}/lib/webOS/" if="webos" />
   <set name="THIRDPARTY_LIBS" value="${NME_DEV}/lib/Linux${M64}/" if="linux"/>
   <set name="THIRDPARTY_LIBS" value="${NME_DEV}/lib/RPi/" if="rpi"/>
   <set name="THIRDPARTY_LIBS" value="${NME_DEV}/lib/Android/" if="android"/>
   <set name="THIRDPARTY_LIBS" value="${NME_DEV}/lib/iPhone/" if="iphone"/>
   <set name="THIRDPARTY_LIBS" value="${NME_DEV}/lib/BlackBerry/" if="blackberry"/>
   <set name="THIRDPARTY_LIBS" value="${NME_DEV}/lib/Emscripten/" if="emscripten"/>
   <set name="THIRDPARTY_LIBS" value="${GPH_ROOT}/gcc-4.2.4-glibc-2.7-eabi/arm-gph-linux-gnueabi/sys-root/usr/lib/" if="gph"/>
   
   <set name="SLIBEXT" value=".lib" if="windows"/>
   <set name="SLIBEXT" value=".a" unless="windows"/>
   <set name="SLIBEXT" value=".so" if="webos"/>
   <set name="SLIBEXT" value=".a" if="emscripten"/>
   
   
   <files id="common">
      
      <compilerflag value="-Iinclude"/>
      <compilerflag value="-I${PalmPDK}/include/SDL" if="webos" />
      <compilerflag value="-I${NME_DEV}/include" unless="gph"/>
      <compilerflag value="-I${PalmPDK}/include/SDL" if="webos" />
      <compilerflag value="-I${NME_DEV}/include/SDL12" if="sdl" unless="dynamic_sdl"/>
      <compilerflag value="-I${NME_DEV}/include/SDL2" if="sdl2" />
      <compilerflag value="-I${GPH_ROOT}/gcc-4.2.4-glibc-2.7-eabi/arm-gph-linux-gnueabi/sys-root/usr/include" if="gph"/>
      <compilerflag value="-I/opt/vc/include" if="rpi"/>
      <compilerflag value="-I/opt/vc/include/interface/vcos/pthreads/" if="rpi"/>
      <compilerflag value="-I${GPH_ROOT}/include/freetype2" if="gph"/>
      <compilerflag value="-I${GPH_ROOT}/DGE/include" if="gph"/>
      <compilerflag value="-I${QNX_TARGET}/usr/include" if="blackberry"/>
      <!-- <compilerflag value="-I${QNX_TARGET}/usr/include/GLES" if="blackberry"/> -->
      <compilerflag value="-I${QNX_TARGET}/usr/include/GLES2" if="blackberry"/>
      <compilerflag value="-DNME_DIRECTFB" if="directfb"/>
      <compilerflag value="-DSDL_OGL" if="sdl"/>
      <compilerflag value="-DSDL_OGL" if="sdl2"/>
      <compilerflag value="-DGLFW_OGL" if="glfw"/>
      <compilerflag value="-DNME_CURL_SSL" if="ssl" unless="nocurl"/>
      <compilerflag value="-DNME_FORCE_GLES1" if="NME_FORCE_GLES1"/>
      <compilerflag value="-DNME_PREMULTIPLIED_ALPHA" if="NME_PREMULTIPLIED_ALPHA"/>
      <compilerflag value="-Wno-conversion" if="linux"/>
      
      <file name="common/Surface.cpp"/>
      <file name="common/Utils.cpp"/>
      <file name="common/Geom.cpp"/>
      <file name="common/Graphics.cpp"/>
      <file name="common/GraphicsData.cpp"/>
      <file name="common/Matrix.cpp"/>
      <file name="common/CachedExtent.cpp"/>
      <file name="common/TextField.cpp"/>
      <file name="common/Font.cpp"/>
      <file name="common/FreeType.cpp" />
      <file name="common/Tilesheet.cpp"/>
      <file name="common/Display.cpp"/>
      <file name="common/ColorTransform.cpp"/>
      <file name="common/Hardware.cpp" unless="directfb"/>
      <file name="common/Tessellate.cpp"/>
      <file name="common/Filters.cpp"/>
      <file name="common/ExternalInterface.cpp"/>
      <file name="common/Cursors.cpp"/>
      <file name="common/Input.cpp" unless="iphone" />
      <file name="common/SurfaceIO.cpp" unless="sdl_image" />
      <file name="common/ManagedStage.cpp" unless="winrt" />
      <file name="common/CURL.cpp" unless="nocurl"/>
      <file name="common/Lzma.cpp"/>
      <file name="common/Thread.cpp"/>
      <file name="common/Audio.cpp" if="openal"/>
      <file name="video/TheoraVideo.cpp" if="theora" />
      <file name="empty/Video.cpp" unless="theora" />
      
      <file name="common/XML/tinystr.cpp"/>
      <file name="common/XML/tinyxml.cpp"/>
      <file name="common/XML/tinyxmlerror.cpp"/>
      <file name="common/XML/tinyxmlparser.cpp"/>
      
      <file name="software-renderer/AlphaMask.cpp"/>
      <file name="software-renderer/BitmapFill.cpp"/>
      <file name="software-renderer/BitmapFillPerspective.cpp"/>
      <file name="software-renderer/GradientFill.cpp"/>
      <file name="software-renderer/LineRender.cpp"/>
      <file name="software-renderer/PointRenderer.cpp"/>
      <file name="software-renderer/PolygonRender.cpp"/>
      <file name="software-renderer/SoftwareRenderer.cpp"/>
      <file name="software-renderer/SolidFill.cpp"/>
      <file name="software-renderer/SolidRender.cpp"/>
      <file name="software-renderer/TileRenderer.cpp"/>
      <file name="software-renderer/TriangleRender.cpp"/>
      
      <file name="opengl/OpenGLContext.cpp" if="ogl"/>
      <file name="opengl/OGLTexture.cpp" if="ogl"/>
      <file name="opengl/OGLShaders.cpp" if="ogl"/>
      <file name="opengl/OGLExport.cpp" if="ogl"/>
      <file name="opengl/Egl.cpp" if="nmeegl"/>
   </files>
   
   <files id="common_lzma">
      <compilerflag value="-D_7ZIP_ST" unless="win_desktop"/>
      
      <file name="lzma/LzFind.c" />
      <file name="lzma/LzmaDec.c" />
      <file name="lzma/LzmaEnc.c" />
      <file name="lzma/LzFindMt.c" if="win_desktop" />
      <file name="lzma/Threads.c" if="win_desktop" />
   </files>
   
   <set name="tool" value="exe" unless="iphone"/>
   <set name="tool" value="static_link" if="iphone"/>
   <set name="tool" value="static_link" if="emscripten"/>
   
   <set name="ARM_ARCH" value="-v7" if="HXCPP_ARMV7" />
   
   <set name="ndll-tool" value="dll" unless="iphone"/>
   <set name="ndll-tool" value="static_link" if="iphone"/>
   <set name="ndll-tool" value="static_link" if="emscripten"/>
   <set name="name_extra" value=".iphonesim" if="iphonesim"/>
   <set name="name_extra" value=".iphoneos${ARM_ARCH}" if="iphoneos"/>
   <set name="name_extra" value="-v7" if="android" />
   <set name="name_extra" value="" if="android" unless="HXCPP_ARMV7" />
   
   <set name="name_extra" value="-x86" if="simulator" unless="iphonesim" />
   <set name="ndll_name_extra" value="${name_extra}" unless="android" />
   
   <set name="debug_extra" value="-debug" if="fulldebug" />
   
   <!-- <section if="fulldebug" >
      <set name="name_extra" value=".debug"/>
      <set name="name_extra" value=".debug-x86" if="simulator" unless="iphonesim" />
      <set name="name_extra" value=".debug.iphoneos${IOS_ARCH}" if="iphoneos"/>
      <set name="name_extra" value=".debug.iphonesim" if="iphonesim"/>
   </section> -->
   
   <set name="no_thirdparty_extras" value="1" if="iphone"/>
   <set name="no_thirdparty_extras" value="1" if="emscripten"/>
   <set name="no_thirdparty_extras" value="1" if="gph"/>
   
   <set name="sdl_static" value="1" unless="mobile"/>
   <unset name="sdl_static" if="emscripten" />
   <unset name="sdl_static" unless="sdl" />
   <set name="sdl_static" value="1" if="blackberry"/>
   <unset name="sdl_static" if="dynamic_sdl"/>
   <unset name="sdl_static" if="winrt"/>
   <set name="no_thirdparty_extras" value="1" if="dynamic_sdl"/>
   
   <set name="sdl_dynamic_path" value="-L/opt/local/lib" if="macos" />
   <set name="sdl_dynamic_include1" value="-I/opt/local/include" if="macos" />
   <set name="sdl_dynamic_include2" value="-I/opt/local/include/SDL-hidden" if="macos" />
   <set name="sdl_dynamic_include1" value="-I${PalmPDK}/include/SDL" if="webos" />
   <set name="sdl_dynamic_include1" value="-I/usr/include/SDL" if="linux" />
   
   
   <files id="sdl">
      
      <compilerflag value="-Iinclude"/>
      <compilerflag value="-I${PalmPDK}/include/SDL" if="webos" />
      <compilerflag value="-I${NME_DEV}/include" if="sdl_static"/>
      <compilerflag value="-I${NME_DEV}/include/SDL12" if="sdl_static"/>
      <compilerflag value="-I${NME_DEV}/include" if="webos"/>
      <compilerflag value="${sdl_dynamic_include1}" if="dynamic_sdl"/>
      <compilerflag value="${sdl_dynamic_include2}" if="dynamic_sdl"/>
      <compilerflag value="-DDYNAMIC_SDL" if="dynamic_sdl" />
      <compilerflag value="-DNME_MIXER" />
      <compilerflag value="-DSDL_IMAGE" if="sdl_image" />
      <file name="sdl/SDLStage.cpp"/>
      <file name="sdl/SDLSound.cpp" unless="openal"/>
      
   </files>
   
   
   <files id="sdl2">
      
      <compilerflag value="-Iinclude"/>
      <compilerflag value="-I${NME_DEV}/include"/>
      <compilerflag value="-I${NME_DEV}/include/SDL2"/>
      <!-- <compilerflag value="-DNME_MIXER" /> -->
      <file name="sdl2/SDL2Stage.cpp"/>
      <!-- <file name="sdl/SDLSound.cpp" unless="openal"/> -->
      <file name="empty/Sound.cpp" unless="openal" />
      
   </files>
   
   
   <files id="glfw">
      
      <compilerflag value="-Iinclude"/>
      <compilerflag value="-I${NME_DEV}/include"/>
      <file name="glfw/GLFWStage.cpp"/>
      
   </files>
   
   
   <files id="directfb">
      
      <compilerflag value="-Iinclude"/>
      <compilerflag value="-I/usr/include/directfb" />
      <compilerflag value="-I${NME_DEV}/include"/>
      <compilerflag value="-DNME_DIRECTFB"/>
      
      <file name="directfb/DirectFBHardware.cpp"/>
      <file name="directfb/DirectFBStage.cpp"/>
      
   </files>
   
   
   <files id="mac">
      
      <compilerflag value="-Iinclude"/>
      <compilerflag value="-I${NME_DEV}/include" />
      <compilerflag value="-I${NME_DEV}/include/SDL12" if="sdl" />
      <compilerflag value="-I${NME_DEV}/include/SDL2" if="sdl2" />
      <compilerflag value="${sdl_dynamic_include2}" if="dynamic_sdl"/>
      <compilerflag value="-Iopenal"/>
      <file name="mac/NSFont.cpp"/>
      <file name="mac/MacBoot.m" />
      <file name="empty/URL.cpp" if="nocurl" />
      <file name="empty/Sound.cpp" unless="has_sound" />
      <file name="empty/Stage.cpp" unless="has_window" />
      <file name="empty/HardwareContext.cpp" unless="has_window" />
      <file name="mac/System.mm"/>
      <file name="cocoa/FileManager.mm"/>
      <file name="openal/OpenALSound.cpp" if="openal"/>
         
   </files>
   
   
   <set name="name_prefix" value="lib" if="iphone" />
   
   
   <target id="NDLL" output="${name_prefix}nme${debug_extra}${ndll_name_extra}" tool="linker" toolid="${ndll-tool}">
      
      <outdir name="../ndll/${BINDIR}" />
      <ext value=".ndll" unless="mobile"/>
      <ext value=".a" if="emscripten"/>
      <ext value=".ndll" if="gph"/>
      
      <flag value="-NODEFAULTLIB:LIBCMT" if="winrt"/>
      <flag value="-NODEFAULTLIB:LIBCMT" if="glfw"/>
      
      <files id="common"/>
      <files id="common_lzma"/>
      <files id="win_desktop" if="win_desktop"/>
      <files id="winrt_shaders" if="winrt"/>
      <files id="winrt" if="winrt"/>
      <files id="iphone" if="iphone"/>
      <files id="mac" if="macos"/>
      <files id="linux" if="linux"/>
      <files id="gph" if="gph"/>
      <files id="sdl" if="sdl"/>
      <files id="sdl2" if="sdl2"/>
      <files id="glfw" if="glfw"/>
      <files id="directfb" if="directfb" />
      <files id="android" if="android"/>
      <files id="webos" if="webos"/>
      <files id="blackberry" if="blackberry"/>
      <files id="emscripten" if="emscripten"/>
      
      <lib name="${THIRDPARTY_LIBS}libfreetype${name_extra}${SLIBEXT}" if="iphone"/>
      <lib name="${THIRDPARTY_LIBS}libfreetype${name_extra}${SLIBEXT}" unless="no_thirdparty_extras"/>
      <lib name="${THIRDPARTY_LIBS}libjpeg${name_extra}${SLIBEXT}" unless="no_thirdparty_extras"/>
      <lib name="${THIRDPARTY_LIBS}libpng${name_extra}${SLIBEXT}" unless="no_thirdparty_extras"/>
      <lib name="${THIRDPARTY_LIBS}libz${name_extra}${SLIBEXT}" if="windows"/>
      <lib name="${THIRDPARTY_LIBS}libz${name_extra}${SLIBEXT}" if="macos" unless="dynamic_sdl"/>
      <lib name="${THIRDPARTY_LIBS}libz${name_extra}${SLIBEXT}" if="linux" unless="dynamic_sdl"/>
      
      <lib name="${THIRDPARTY_LIBS}libSDL_mixer${name_extra}${SLIBEXT}" if="sdl" unless="dynamic_sdl" />
      <lib name="${THIRDPARTY_LIBS}libSDL_image${name_extra}${SLIBEXT}" if="sdl_image" unless="emscripten" />
      <lib name="${THIRDPARTY_LIBS}libSDL${name_extra}${SLIBEXT}" if="sdl_static" unless="blackberry" />
      <lib name="${THIRDPARTY_LIBS}libSDL2${name_extra}${SLIBEXT}" if="sdl2" />
      <!-- <lib name="${THIRDPARTY_LIBS}libSDL2main${name_extra}${SLIBEXT}" if="windows" unless="sdl" /> -->
      <!-- <lib name="${THIRDPARTY_LIBS}libopenal${name_extra}${SLIBEXT}" if="android" unless="noopenal"/> -->
      <lib name="${THIRDPARTY_LIBS}libopenal${name_extra}${SLIBEXT}" if="linux" unless="noopenal"/>
      <lib name="${THIRDPARTY_LIBS}libvorbis${name_extra}${SLIBEXT}" if="sdl_static"/>
      <lib name="${THIRDPARTY_LIBS}libvorbis${name_extra}${SLIBEXT}" if="openal" unless="sdl_static" />
      <lib name="${THIRDPARTY_LIBS}libogg${name_extra}${SLIBEXT}" if="sdl_static"/>
      <lib name="${THIRDPARTY_LIBS}libogg${name_extra}${SLIBEXT}" if="openal" unless="sdl_static" />
      <lib name="${THIRDPARTY_LIBS}libtheora${name_extra}${SLIBEXT}" if="theora" unless="sdl_static" />
      <lib name="${THIRDPARTY_LIBS}libsmpeg${name_extra}${SLIBEXT}" if="sdl_static"/>
      <lib name="${THIRDPARTY_LIBS}libcurl${ssl_extra}${name_extra}${SLIBEXT}" if="sdl_static" unless="iphone"/>
      <lib name="${THIRDPARTY_LIBS}libcurl${ssl_extra}${name_extra}${SLIBEXT}" if="sdl2"/>
      <lib name="${THIRDPARTY_LIBS}libcurl${ssl_extra}${name_extra}${SLIBEXT}" if="glfw"/>
      <lib name="${THIRDPARTY_LIBS}libcurl${ssl_extra}${name_extra}${SLIBEXT}" if="android"/>
      <lib name="${THIRDPARTY_LIBS}libglfw3${name_extra}${SLIBEXT}" if="glfw"/>
      
      <lib name="-L${THIRDPARTY_LIBS}" if="linux"/>
      <lib name="-lrt" if="linux" unless="noopenal" />
      <!-- <lib name="-lopenal" if="linux" unless="noopenal" /> -->
      
      <lib name="-L${THIRDPARTY_LIBS}" if="webos"/>
      <lib name="-L../ndll/BlackBerry" if="blackberry"/>
      
      <lib name="-lSDL" if="dynamic_sdl"/>
      <!-- <lib name="-lSDL_image" if="sdl_image" unless="sdl_static"/> -->
      <lib name="-lSDL_mixer" if="dynamic_sdl"/>
      <lib name="-lvorbis" if="dynamic_sdl" unless="webos"/>
      <lib name="-logg" if="dynamic_sdl" unless="webos"/>
      <lib name="-lsmpeg" if="dynamic_sdl" unless="webos"/>
      <!--<lib name="-lfreetype" if="dynamic_sdl" unless="webos"/>
      <lib name="${THIRDPARTY_LIBS}libfreetype.a" if="webos"/>-->
      <lib name="${THIRDPARTY_LIBS}libfreetype.a" if="dynamic_sdl"/>
      
      <lib name="-lcurl" if="dynamic_sdl" unless="nocurl"/>
      <lib name="-lpng" if="dynamic_sdl"/>
      <lib name="-ljpeg" if="dynamic_sdl"/>
      <lib name="-lz" if="dynamic_sdl"/>
      
      <flag value="${sdl_dynamic_path}" if="dynamic_sdl"/>
      
      <vflag name="-framework" value="IOKit" if="macos"/>
      <vflag name="-framework" value="Foundation" if="macos"/>
      <!-- <vflag name="-framework" value="AVFoundation" if="macos"/> -->
      <vflag name="-framework" value="CoreAudio" if="macos"/>
      <vflag name="-framework" value="Carbon" if="macos"/>
      <vflag name="-framework" value="AudioToolbox" if="macos"/>
      <vflag name="-framework" value="AudioUnit" if="macos"/>
      <vflag name="-framework" value="ForceFeedback" if="macos"/>
      <vflag name="-framework" value="Cocoa" if="macos"/>
      <vflag name="-framework" value="OpenGL" if="macos"/>
      <vflag name="-framework" value="QuickTime" if="macos" unless="HXCPP_M64"/>
      <vflag name="-framework" value="AppKit" if="macos"/>
      <vflag name="-framework" value="OpenAL" if="macos" unless="noopenal"/>
      
      <lib name="-ldl" if="android"/>
      <lib name="-landroid" if="android"/>
      <lib name="-lGLESv1_CM" if="android" unless="ogl_shaders"/>
      <lib name="-lGLESv2" if="android"/>
      <lib name="-lz" if="android"/>
      <lib name="-L../ndll/Android" if="android" unless="noopenal"/>
      <lib name="-lopenal" if="android" unless="noopenal"/>
      
      <lib name="-lGLES_CM" if="webos" unless="ogl_shaders"/>
      <lib name="-lGLESv2" if="webos"/>
      <lib name="-lpdl" if="webos"/>
      
      <lib name="-lSDL${name_extra}" if="blackberry"/>
      
      <lib name="-lbps" if="blackberry"/>
      <lib name="-lscreen" if="blackberry"/>
      <lib name="-lEGL" if="blackberry"/>
      
      <!-- <lib name="-lGLESv1_CM" if="blackberry"/> -->
      <lib name="-lGLESv2" if="blackberry" />
      
      <lib name="-ldirectfb" if="directfb" />
      
      <lib name="/opt/vc/lib/libGLESv1_CM.so" if="rpi" unless="ogl_shaders"/>
      <lib name="/opt/vc/lib/libGLESv2.so" if="rpi"/>
      <lib name="/opt/vc/lib/libEGL.so" if="rpi"/>
      <lib name="/opt/vc/lib/libbcm_host.so" if="rpi"/>
      
      <lib name="-lm" if="blackberry"/>
      <lib name="-lsocket" if="blackberry"/>
      
      <lib name="gdi32.lib" if="win_desktop" />
      <lib name="opengl32.lib" if="win_desktop" />
      <lib name="${THIRDPARTY_LIBS}libOpenAL32${SLIBEXT}" if="windows" unless="noopenal"/>
      <!-- <lib name="${THIRDPARTY_LIBS}libOpenAL32_dynamic${SLIBEXT}" if="openal_link_dynamic"/> -->
      <lib name="user32.lib" if="win_desktop"/>
      <lib name="kernel32.lib" if="win_desktop" unless="sdl2"/>
      <lib name="advapi32.lib" if="win_desktop" unless="sdl2"/>
      <lib name="${THIRDPARTY_LIBS}dxguid.lib" if="win_desktop"/>
      <lib name="winmm.lib" if="win_desktop"/>
      <lib name="imm32.lib" if="win_desktop" />
      <lib name="ole32.lib" if="win_desktop" unless="noopenal"/>
      <lib name="oleaut32.lib" if="win_desktop" unless="noopenal" />
      <lib name="version.lib" if="win_desktop" />
      <lib name="ws2_32.lib" if="win_desktop" unless="sdl2"/>
      <lib name="wldap32.lib" if="win_desktop"/>
      <lib name="shell32.lib" if="win_desktop"/>
      <lib name="comdlg32.lib" if="win_desktop"/>
      <lib name="-ldl" if="linux"/>
      <lib name="-lGL" if="linux" unless="rpi"/>
      <lib name="-lpthread" if="linux"/>
      
      <lib name="D3D11.lib" if="winrt"/>
      
      <flag value="-L${GPH_ROOT}/DGE/lib/target" if="gph"/>
      <lib name="-ldge20" if="gph"/>
      <lib name="-ldgx20" if="gph"/>
      <lib name="-lopengles_lite" if="gph"/>
      <lib name="-lfreetype" if="gph"/>
      <lib name="-lopenal11" if="gph"/>
      <lib name="-lopenalut11" if="gph"/>
      <lib name="-lts" if="gph"/>
      <lib name="-lpthread" if="gph"/>
      <lib name="-lpng" if="gph"/>
      <lib name="-ljpeg" if="gph"/>
      <lib name="-lz" if="gph"/>
      
   </target>
   
   
   <target id="default">
      
      <target id="NDLL"/>
      
   </target>
   
   
</xml>
