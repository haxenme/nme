<xml>
   <!-- Require Android 2.3+ -->
   <set name="PLATFORM" value="android-9" if="android" />
   <set name="PLATFORM" value="android-14" if="HXCPP_X86" />
   <set name="PLATFORM" value="android-21" if="HXCPP_ARM64" />
   <set name="HXCPP_CPP11" value="1" />


   <include name="${HXCPP}/build-tool/BuildCommon.xml"/>
   <!-- 
      Build with:
         -Diphonesim              -> build i386 version
         -Diphoneos               -> build armv6
         -Diphoneos -DHXCPP_ARMV7 -> build armv7
         -Dandroid                -> build android armv5
         -Dandroid  -DHXCPP_ARMV7 -> build android armv7
         -Dandroid  -DHXCPP_X86   -> build android x86
         - no defines             -> build current OS
         -DHXCPP_M64              -> build current OS, 64 but version
         -Ddebug                  -> Used in combination with above for debug
   -->

   <!-- Where to find static libraries/includes -->
   <set name="NME_DEV" value="${haxelib:nme-dev}" unless="NME_DEV" />


   <!--
      What SDL to use?
      For desktop, use version 2.
      For ios/android, not needed. 
      For rpi, and other systems, use installed 1.0
   -->
   <set name="NME_NATIE_SDL_SYSTEM" value="1" if="rpi" />
   <set name="NME_NATIE_SDL_SYSTEM" value="1" if="emscripten" />
   <set name="NME_SDL2" value="1" if="windows" />
   <set name="NME_SDL2" value="1" if="linux" unless="NME_NATIE_SDL_SYSTEM" />
   <set name="NME_SDL2" value="1" if="macos" />

   <set name="NME_SDL_ANY" value="1" if="NME_NATIE_SDL_SYSTEM" />
   <set name="NME_SDL_ANY" value="1" if="NME_SDL2" />

   <!-- Use opengl backend ? -->
   <set name="NME_OGL" value="1" />
   <unset name="NME_OGL" if="winrt" />

   <!-- For systems that do not create the egl context for us -->
   <set name="NME_EGL" value="1" if="rpi"/>

   <!-- Do we need to implement curl in NME -->
   <set name="NME_CURL" value="1" />
   <unset name="NME_CURL" if="winrt" />
   <unset name="NME_CURL" if="emscripten" />

   <!-- And allow https ? -->
   <set name="NME_SSL" value="1" />
   <set name="NME_SSL_EXTRA" value="_ssl" if="NME_SSL"/>
   
   <!--
      What audio backend it use?
      For windows, linux, use SDL_mixer
      For ios/mac  use core audio + openal
      For android use java (todo - opensl?)
   -->
   <set name="NME_OPENAL" value="1" if="iphone" />

   <!-- Use to allow testing on mac... -->
   <set name="NME_OPENAL" value="1" if="macos" />

   <set name="NME_CAMERA" value="1" unless="watchos" />

   <!-- Built relative to "bin" -->
   <set name="NME_ROOT" value="" />
   
   <set name="SRC_DIR" value="${NME_ROOT}src" />
   <set name="INC_DIR" value="${NME_ROOT}include" />
   <set name="NME_INC_DIR" value="${NME_ROOT}../include" />
   <set name="SUP_DIR" value="${NME_ROOT}support" />
   <set name="SUP_DIR" value="${this_dir}/support" if="this_dir" />
   <set name="OUT_DIR" value="../${NDLLDIR}" />

   <set name="modplug" value="1" unless="android" />
   
   <!-- Uncomment this if you want use ClipperLib for tesselate -->
   <!--set name="NME_CLIPPER" value="1" /-->

   <!-- Uncomment this if you want use nme's own clipper for tesselate -->
   <!--set name="NME_INTERNAL_CLIPPING" value="1" /-->
   
   <!-- <set name="new_link" value="1" /> -->
 
   <section if="new_link" >
      <set name="curl_ssl" value="1" />
      <import name="${NME_DEV}/project/import-all.xml" />
   </section>

   
   <set name="HXCPP_OPTIM_LEVEL" value="-O2" if="emscripten" unless="debug" />

   <files id="main">
      <compilerflag value="-I${INC_DIR}"/>
      <file name="Test.cpp"/>
   </files>

   <files id="nme-headers">
      <depend name="include/ByteArray.h" />
      <depend name="include/CachedExtent.h" />
      <depend name="include/Camera.h" />
      <depend name="include/Display.h" />
      <depend name="include/Filters.h" />
      <depend name="include/Font.h" />
      <depend name="include/Geom.h" />
      <depend name="include/Graphics.h" />
      <depend name="include/Hardware.h" />
      <depend name="include/Input.h" />
      <depend name="include/KeyCodes.h" />
      <depend name="include/Lzma.h" />
      <depend name="include/Matrix.h" />
      <depend name="include/NMEThread.h" />
      <depend name="include/NmeBinVersion.h" />
      <depend name="include/NmeVersion.h" />
      <depend name="include/S3DEye.h" />
      <depend name="include/Scale9.h" />
      <depend name="include/Sound.h" />
      <depend name="include/StageVideo.h" />
      <depend name="include/Surface.h" />
      <depend name="include/TextField.h" />
      <depend name="include/Tilesheet.h" />
      <depend name="include/URL.h" />
      <depend name="include/Utils.h" />
      <depend name="include/Video.h" />


      <depend name="../include/nme/Event.h" />
      <depend name="../include/nme/Extent.h" />
      <depend name="../include/nme/FixedPoint.h" />
      <depend name="../include/nme/ImageBuffer.h" />
      <depend name="../include/nme/NmeApi.h" />
      <depend name="../include/nme/NmeCffi.h" />
      <depend name="../include/nme/Object.h" />
      <depend name="../include/nme/Pixel.h" />
      <depend name="../include/nme/Point.h" />
      <depend name="../include/nme/QuickVec.h" />
      <depend name="../include/nme/Rect.h" />
      <depend name="../include/nme/Texture.h" />

      <depend name="${HXCPP}/include/hx/CFFI.h"/>
      <depend name="${HXCPP}/include/hx/CFFIAPI.h"/>
      <depend name="${HXCPP}/include/hx/CFFILoader.h"/>

   </files>
   
   
   <files id="nme" tags="" >
      <compilerflag value="-I${NME_INC_DIR}"/>
      <compilerflag value="-I${INC_DIR}"/>

      <compilerflag value="-DNME_MODPLUG" if="modplug" />
      <compilerflag value="-DSTATIC_LINK" if="NME_STATIC_LINK" />
      <compilerflag value="-DNME_CLIPPER" if="NME_CLIPPER" />
      <compilerflag value="-DNME_INTERNAL_CLIPPING" if="NME_INTERNAL_CLIPPING" />

      <cache value="1" />

      <section if="new_link" >
         <depend files="nme-headers"/>
         <depend files="nme-dev-headers"/>
         <depend files="hxcpp-depends"/>
      </section>

      <section if="windows">
         <file name="${SRC_DIR}/windows/CaptureDevice.cpp" if="NME_CAMERA" />
         <file name="${SRC_DIR}/windows/GDIFont.cpp"/>
         <file name="${SRC_DIR}/windows/System.cpp" />
         <file name="${SRC_DIR}/audio/WindowsAcm.cpp" unless="mingw" />
         <compilerflag value="-DNME_NO_WINACM" if="mingw" />
      </section>

      <section if="linux">
         <compilerflag value="-Wno-conversion" if="linux"/>
         <file name="${SRC_DIR}/linux/NativeFont.cpp"/>
         <file name="${SRC_DIR}/linux/System.cpp"/>
      </section>

      <section if="macos">
         <file name="${SRC_DIR}/apple/CaptureDevice.mm" if="NME_CAMERA" />
         <file name="${SRC_DIR}/mac/NSFont.cpp"/>
         <file name="${SRC_DIR}/mac/MacBoot.m" />
         <file name="${SRC_DIR}/mac/System.mm"/>
         <file name="${SRC_DIR}/audio/AvAudio.mm" />
         <file name="${SRC_DIR}/cocoa/FileManager.mm"/>
      </section>

      <section if="iphone">
         <file name="${SRC_DIR}/apple/CaptureDevice.mm" if="NME_CAMERA" />
         <file name="${SRC_DIR}/iPhone/UIStageView.mm" tags="static" />
         <file name="${SRC_DIR}/iPhone/UIDeviceHardware.mm"/>
         <!-- <file name="${SRC_DIR}/iPhone/SurfaceIO.mm"/> -->
         <file name="${SRC_DIR}/iPhone/NativeFont.mm"/>
         <file name="${SRC_DIR}/iPhone/System.mm"/>
         <file name="${SRC_DIR}/apple/Utils.mm"/>
         <file name="${SRC_DIR}/cocoa/FileManager.mm"/>
         <file name="${SRC_DIR}/audio/IosSound.mm"/>
      </section>

      <section if="android">
         <file name="${SRC_DIR}/android/AndroidCommon.cpp" />
         <file name="${SRC_DIR}/audio/AndroidSound.cpp" />
         <file name="${SRC_DIR}/android/AndroidFont.cpp"/>
         <file name="${SRC_DIR}/android/AndroidFrame.cpp"/>
         <file name="${SRC_DIR}/android/JNI.cpp"/>
         <file name="${SRC_DIR}/android/System.cpp"/>
         <file name="${SRC_DIR}/android/AndroidS3D.cpp" if="NME_S3D" />
         <file name="${SRC_DIR}/audio/OpenSlSound.cpp" />

      </section>

      <section if="emscripten">
         <file name="${SRC_DIR}/emscripten/System.cpp" />
      </section>

      <section if="rpi">
         <compilerflag value="-I/opt/vc/include" />
         <compilerflag value="-I/opt/vc/include/interface/vcos/pthreads/" />
      </section>


      <section if="NME_NATIE_SDL_SYSTEM">
        <compilerflag value="-I/opt/local/include" if="macos" />
        <compilerflag value="-I/usr/include/SDL" if="linux" />
        <compilerflag value="-DDYNAMIC_SDL" />
        <compilerflag value="-DNME_MIXER" />
        <file name="${SRC_DIR}/audio/SDLSound.cpp" />
        <file name="${SRC_DIR}/sdl/SDLStage.cpp"/>
      </section>

      <section if="NME_SDL2">
        <compilerflag value="-I${NME_DEV}/include/SDL2" />
        <file name="${SRC_DIR}/audio/SDLSound.cpp" />
        <file name="${SRC_DIR}/sdl2/SDL2Stage.cpp" tags="static" />
        <compilerflag value="-DSDL_OGL" />
        <compilerflag value="-DNME_MIXER" />
        <compilerflag value="-DNME_SDL2" />
      </section>

      <section if="NME_CURL">
         <compilerflag value="-DNME_CURL_SSL" if="NME_SSL"/>
      </section>

      <section if="NME_OGL">
         <file name="${SRC_DIR}/opengl/OpenGLContext.cpp" />
         <file name="${SRC_DIR}/opengl/OGLTexture.cpp" />
         <file name="${SRC_DIR}/opengl/OGLShaders.cpp" />
         <file name="${SRC_DIR}/opengl/OGLExport.cpp" tags="static"  />
         <file name="${SRC_DIR}/opengl/Egl.cpp" if="NME_EGL" />
         <file name="${SRC_DIR}/opengl/OpenGLS3D.cpp" if="NME_S3D" />
      </section>
      
      <section if="NME_OPENAL">
         <file name="${SRC_DIR}/audio/OpenALSound.cpp" />
         <compilerflag value="-DNME_OPENAL" />
      </section>



      <compilerflag value="-I${INC_DIR}/xcompile" if="xcompile" />
      <compilerflag value="-I${NME_DEV}/include" />
      <compilerflag value="-D_7ZIP_ST" unless="windows"/>
      <compilerflag value="-DNME_NOPREMULTIPLIED_ALPHA" if="NME_NOPREMULTIPLIED_ALPHA" />
      <compilerflag value="-DNME_BUILDING_LIB" />



      <file name="${SRC_DIR}/common/Surface.cpp"/>
      <file name="${SRC_DIR}/common/Utils.cpp"/>
      <file name="${SRC_DIR}/common/Geom.cpp"/>
      <file name="${SRC_DIR}/common/Graphics.cpp"/>
      <file name="${SRC_DIR}/common/GraphicsData.cpp"/>
      <file name="${SRC_DIR}/common/Matrix.cpp"/>
      <file name="${SRC_DIR}/common/Pixels.cpp"/>
      <file name="${SRC_DIR}/common/CachedExtent.cpp"/>
      <file name="${SRC_DIR}/common/TextField.cpp"/>
      <file name="${SRC_DIR}/common/Font.cpp" tags="static" />
      <file name="${SRC_DIR}/common/FreeType.cpp" tags="static"  />
      <file name="${SRC_DIR}/common/Tilesheet.cpp"/>
      <file name="${SRC_DIR}/common/Display.cpp" tags="static" />
      <file name="${SRC_DIR}/common/Stage.cpp"/>
      <file name="${SRC_DIR}/common/BitmapCache.cpp"/>
      <file name="${SRC_DIR}/common/ColorTransform.cpp"/>
      <file name="${SRC_DIR}/common/Hardware.cpp" />
      <file name="${SRC_DIR}/common/Tessellate.cpp"/>
      <file name="${SRC_DIR}/common/Filters.cpp"/>
      <file name="${SRC_DIR}/common/ExternalInterface.cpp" tags="static" />
      <file name="${SRC_DIR}/common/Cursors.cpp"/>
      <file name="${SRC_DIR}/common/Input.cpp" unless="iphone" />
      <file name="${SRC_DIR}/common/SurfaceIO.cpp" unless="sdl_image" />
      <file name="${SRC_DIR}/common/ManagedStage.cpp" unless="winrt" />
      <file name="${SRC_DIR}/common/CURL.cpp" if="NME_CURL"/>
      <file name="${SRC_DIR}/common/Lzma.cpp" tags="static" />
      <file name="${SRC_DIR}/common/Thread.cpp"/>
      <file name="${SRC_DIR}/common/Camera.cpp" if="NME_CAMERA"  tags="static" />

      <file name="${SRC_DIR}/audio/Audio.cpp" />
      <file name="${SRC_DIR}/audio/ChannelList.cpp" />
      <file name="${SRC_DIR}/audio/Sound.cpp" />
      
      <file name="${SRC_DIR}/common/XML/tinystr.cpp"/>
      <file name="${SRC_DIR}/common/XML/tinyxml.cpp"/>
      <file name="${SRC_DIR}/common/XML/tinyxmlerror.cpp"/>
      <file name="${SRC_DIR}/common/XML/tinyxmlparser.cpp"/>
      
      <file name="${SRC_DIR}/software-renderer/AlphaMask.cpp"/>
      <file name="${SRC_DIR}/software-renderer/BitmapFill.cpp"/>
      <file name="${SRC_DIR}/software-renderer/BitmapFillPerspective.cpp"/>
      <file name="${SRC_DIR}/software-renderer/GradientFill.cpp"/>
      <file name="${SRC_DIR}/software-renderer/LineRender.cpp"/>
      <file name="${SRC_DIR}/software-renderer/PointRenderer.cpp"/>
      <file name="${SRC_DIR}/software-renderer/PolygonRender.cpp"/>
      <file name="${SRC_DIR}/software-renderer/SoftwareRenderer.cpp"/>
      <file name="${SRC_DIR}/software-renderer/SolidFill.cpp"/>
      <file name="${SRC_DIR}/software-renderer/SolidRender.cpp"/>
      <file name="${SRC_DIR}/software-renderer/TileRenderer.cpp"/>
      <file name="${SRC_DIR}/software-renderer/TriangleRender.cpp"/>
     
      <!-- You will need this if you want USE_POLY2TRI in Tesselate.cpp
      <file name="${SRC_DIR}/common/poly2tri/Poly2Tri.cpp" />
      -->
      <file name="${SRC_DIR}/common/clipper/clipper.cpp" if="NME_CLIPPER" />
      <file name="${SRC_DIR}/common/NmeClip.cpp" if="NME_INTERNAL_CLIPPING" />

   
      <file name="${SRC_DIR}/lzma/LzFind.c" />
      <file name="${SRC_DIR}/lzma/LzmaDec.c" />
      <file name="${SRC_DIR}/lzma/LzmaEnc.c" />
      <file name="${SRC_DIR}/lzma/LzFindMt.c" if="windows" />
      <file name="${SRC_DIR}/lzma/Threads.c" if="windows" />
   </files>
   

   <set name="SLIBEXT" value=".lib" if="windows"/>
   <set name="SLIBEXT" value=".a" unless="windows"/>
   <set name="SLIBEXT" value=".a" if="mingw"/>
   <set name="PRELIB" value="${NME_DEV}/lib/${BINDIR}/lib" />
   <set name="POSTLIB" value="${LIBEXTRA}${SLIBEXT}" />
   <set name="no_shared_libs" value="1" if="mingw"/>


   <set name="target-id" value="NDLL" />
   <set name="target-id" value="nme-target" if="NME_STATIC_LINK" />

   <set name="NME_SUFFIX" value="${HX_TARGET_SUFFIX}" if="HX_TARGET_SUFFIX" />
   <set name="NME_SUFFIX" value="${LIBSUFFIX}" unless="HX_TARGET_SUFFIX" />

   <target id="${target-id}" output="${LIBPREFIX}nme${NME_SUFFIX}" tool="linker" toolid="${STD_MODULE_LINK}">
      <outdir name="${OUT_DIR}/${BINDIR}" />

      <flag value="-NODEFAULTLIB:LIBCMT" if="winrt"/>

      <files id="nme"/>

         <section if="new_link" >
            <files id="freetype" asLibrary="1" />
            <files id="jpeg" asLibrary="1" />
            <files id="png" asLibrary="1" />


            <section if="NME_SDL2">
               <files id="sdl2" asLibrary="1" />
               <files id="sdl2_mixer" asLibrary="1" />
               <lib name="-luuid" if="mingw" unless="static_link" />
            </section>

            <files id="modplug" if="modplug"  asLibrary="1" />

            <section unless="NME_NATIE_SDL_SYSTEM">
               <files id="vorbis"  asLibrary="1" />
               <files id="ogg"  asLibrary="1" />

               <section if="NME_CURL">
                  <files id="curl"  asLibrary="1" />
               </section>

               <files id="zlib"  asLibrary="1" />
            </section>
         </section>

         <section unless="new_link" >
            <lib name="${PRELIB}freetype${POSTLIB}" />
            <lib name="${PRELIB}jpeg${POSTLIB}" />
            <lib name="${PRELIB}png${POSTLIB}" />

            <section if="NME_SDL2">
               <lib name="${PRELIB}SDL2${POSTLIB}" />
               <lib name="${PRELIB}SDL2_mixer${POSTLIB}" />
               <lib name="${PRELIB}SDL2${POSTLIB}" if="linux"/>
               <lib name="-luuid" if="mingw" unless="static_link" />
            </section>

            <lib name="${PRELIB}modplug${POSTLIB}" if="modplug" />

            <section unless="NME_NATIE_SDL_SYSTEM">
               <lib name="${PRELIB}vorbis${POSTLIB}" />
               <lib name="${PRELIB}ogg${POSTLIB}" />

               <section if="NME_CURL">
                  <lib name="${PRELIB}curl${NME_SSL_EXTRA}${POSTLIB}" />
               </section>

               <lib name="${PRELIB}z${POSTLIB}" unless="android"/>
            </section>
         </section>
 


      <section unless="static_link">

         <ext value=".so" />
         <ext value=".ndll" if="windows || mac || linux" />

         <!-- <lib name="${PRELIB}libfreetype${LIBEXTRA}${SLIBEXT}" if="iphone"/> -->


         <section if="NME_NATIE_SDL_SYSTEM" >
            <lib name="-lSDL" />
            <lib name="-lcurl" />
            <lib name="-lpng" />
            <lib name="-ljpeg" />
            <lib name="-lfreetype" />
            <lib name="-lz" />
         </section>


         <section if="macos">
            <vflag name="-framework" value="IOKit" />
            <vflag name="-framework" value="Foundation" />
            <vflag name="-framework" value="CoreAudio" />
            <vflag name="-framework" value="Carbon" />
            <vflag name="-framework" value="AudioToolbox" />
            <vflag name="-framework" value="AudioUnit" />
            <vflag name="-framework" value="ForceFeedback" />
            <vflag name="-framework" value="Cocoa" />
            <vflag name="-framework" value="OpenGL" />
            <vflag name="-framework" value="AppKit" />
            <vflag name="-framework" value="OpenAL"/>
            <vflag name="-framework" value="AVFoundation" if="NME_CAMERA"/>
            <vflag name="-framework" value="CoreMedia" if="NME_CAMERA"/>
            <vflag name="-framework" value="CoreVideo" if="NME_CAMERA"/>
         </section>


         <section if="android">
            <lib name="-ldl" />
            <lib name="-landroid" />
            <lib name="-lGLESv2" />
            <lib name="-lEGL" />
            <lib name="-lz" />
         </section>
         
         <section if="rpi">
            <lib name="/opt/vc/lib/libGLESv2.so" />
            <lib name="/opt/vc/lib/libEGL.so" />
            <lib name="/opt/vc/lib/libbcm_host.so" />
         </section>
      
      
         <section if="windows">
            <lib name="gdi32.lib" />
            <lib name="opengl32.lib" />
            <lib name="user32.lib" />
            <lib name="kernel32.lib" />
            <lib name="advapi32.lib" />
            <lib name="${SUP_DIR}/windows/dxguid.lib"/>
            <lib name="winmm.lib" />
            <lib name="imm32.lib"  />
            <lib name="ole32.lib" />
            <lib name="oleaut32.lib" />
            <lib name="version.lib" />
            <lib name="ws2_32.lib"  />
            <lib name="wldap32.lib" />
            <lib name="shell32.lib" />
            <lib name="comdlg32.lib" />
         </section>

         <section if="linux">
            <lib name="${HXCPP}/lib/${BINDIR}/liblinuxcompat.a" />
            <lib name="-lpthread" />
            <lib name="-lrt" />
         </section>
      
         <section if="winrt">
            <lib name="D3D11.lib" />
         </section>
      
      </section>

   </target>
   
   
   <target id="default">
     <target id="NDLL"/>
   </target>
   
   
</xml>
